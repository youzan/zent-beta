(self.webpackChunkzent_docs=self.webpackChunkzent_docs||[]).push([[5458],{95458:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>k});var t=a(73450),e=a(27378),o=a(50008),p=a(24246);function c(n,s){var a=Object.keys(n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(n);s&&(t=t.filter((function(s){return Object.getOwnPropertyDescriptor(n,s).enumerable}))),a.push.apply(a,t)}return a}function r(n){for(var s=1;s<arguments.length;s++){var a=null!=arguments[s]?arguments[s]:{};s%2?c(Object(a),!0).forEach((function(s){(0,t.Z)(n,s,a[s])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(a)):c(Object(a)).forEach((function(s){Object.defineProperty(n,s,Object.getOwnPropertyDescriptor(a,s))}))}return n}function l(n){return(0,p.jsx)(n.tag,r(r({},n.attributes),{},{dangerouslySetInnerHTML:{__html:n.html}}))}function i(n){return(0,p.jsx)(l,{tag:"section",html:n.html,attributes:{className:"zandoc-react-markdown"}})}function u(n){return(0,p.jsx)(l,{tag:"style",html:n.style})}function d(n,s){for(;n;)return n.offsetTop&&"static"!==getComputedStyle(n).position&&(s+=n.offsetTop),d(n.parentNode,s);return s}class k extends e.Component{componentDidMount(){var n=location.hash;if(n){var s=document.querySelector('a[href="'.concat(n,'"]'));s&&(0,o.ldy)(document.documentElement,0,d(s,-9))}}render(){return e.createElement("div",{className:"zandoc-react-container"},e.createElement(u,{style:""}),e.createElement(i,{html:'<h2 class="anchor-heading"><a href="#guo-ji-hua">¶</a><a href="javascript:void(0)" id="guo-ji-hua" class="anchor-point"></a>国际化</h2>\n<p>目前 Zent 的默认语言为中文，同时提供英文支持。如需要在国际化场景下使用 Zent 组件，可以参考下面的方法。</p>\n<h4 class="anchor-heading"><a href="#i18nprovider">¶</a><a href="javascript:void(0)" id="i18nprovider" class="anchor-point"></a>I18nProvider</h4>\n<p>Zent 提供一个 Provider 组件用于配置组件内部文案的语言。组件利用 context 实现对组件内部文案的配置，需要在应用最外层包裹使用。</p>\n<pre><code class="language-jsx"><span class="token keyword module">import</span> <span class="token imports"><span class="token punctuation">{</span> <span class="token maybe-class-name">I18nProvider</span> <span class="token keyword module">as</span> <span class="token maybe-class-name">Provider</span> <span class="token punctuation">}</span></span> <span class="token keyword module">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n<span class="token keyword module">import</span> <span class="token imports">enUS</span> <span class="token keyword module">from</span> <span class="token string">\'zent/es/i18n/en-US\'</span><span class="token punctuation">;</span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span><span class="token class-name">Provider</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>enUS<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span><span class="token class-name">App</span></span> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span><span class="token class-name">Provider</span></span><span class="token punctuation">></span></span><span class="token punctuation">;</span></code></pre>\n<p>目前仅有中文/英文两种语言包，分别对应 i18n 文件夹下 <code>en-US.js</code>/<code>zh-CN.js</code>两个文件。</p>'}))}}}}]);