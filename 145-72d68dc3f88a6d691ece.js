(window.webpackJsonp=window.webpackJsonp||[]).push([[145],{1077:function(n,a,s){"use strict";s.r(a),s.d(a,"default",(function(){return _}));var t=s(917),p=s.n(t),e=s(918),o=s.n(e),c=s(578),u=s.n(c),l=s(919),i=s.n(l),r=s(920),k=s.n(r),d=s(921),m=s.n(d),g=s(922),h=s.n(g),f=s(923),y=s.n(f),b=s(925),w=s.n(b),v=s(924),K=s.n(v),S=s(0),E=s.n(S),T=s(106);function x(n){var a=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(n){return!1}}();return function(){var s,t=m()(n);if(a){var p=m()(this).constructor;s=Reflect.construct(t,arguments,p)}else s=t.apply(this,arguments);return k()(this,s)}}var N=function(){var n=new Array(20).fill().map((function(n,a){return{option:String(a),text:"option".concat(a),disabled:a%2==1}})),a=Object(S.useState)(["8","9","10","15"]),s=K()(a,2),t=s[0],p=s[1],e=Object(S.useState)([]),o=K()(e,2),c=o[0],u=o[1],l=Object(S.useState)(!1),i=K()(l,2),r=i[0],k=i[1];return E.a.createElement("div",null,E.a.createElement(T.Transfer,{keyName:"option",dataSource:n,targetKeys:t,onChange:function(n){var a=n.targetKeys,s=n.selectedKeys;p(a),u(s)},list:{columns:[{name:"text"}]},selectedKeys:c,onSelectChange:function(n){return u(n)},disabled:r}),E.a.createElement("div",{style:{marginTop:"20px"}},E.a.createElement(T.Switch,{checked:r,onChange:function(){return k(!r)}}),"disabled"))},C=function(){var n=new Array(20).fill().map((function(n,a){return{option:String(a),text:"option".concat(a)}})),a=Object(S.useState)([]),s=K()(a,2),t=s[0],p=s[1];return E.a.createElement("div",null,E.a.createElement(T.Transfer,{keyName:"option",dataSource:n,targetKeys:t,onChange:function(n){var a=n.targetKeys;return p(a)},showSearch:!0,filterOption:function(n,a){return a.text.indexOf(n)>-1},list:{columns:[{name:"text"}]}}))},j=function(){var n=new Array(200).fill().map((function(n,a){return{option:String(a),text1:"Option".concat(a),text2:"Product".concat(a)}})),a=Object(S.useState)([]),s=K()(a,2),t=s[0],p=s[1];return E.a.createElement("div",null,E.a.createElement(T.Transfer,{keyName:"option",className:"grid-transfer",dataSource:n,targetKeys:t,onChange:function(n){var a=n.targetKeys;return p(a)},pagination:!0,list:[{columns:[{name:"text1",title:"left1"},{name:"text2",title:"left2"}],scroll:{y:198}},{columns:[{name:"text1",title:"right"}],scroll:{y:198}}]}))},D=function(){var n=[{id:1,title:"Hangzhou Youzan Technology Co. Ltd",children:[{id:2,title:"Engineer",children:[{id:3,title:"Back End Engineer",children:[{id:7,title:"JAVA"},{id:8,title:"PHP"},{id:9,title:"GO"},{id:10,title:".NET"}]},{id:4,title:"Front End Engineer"},{id:5,title:"Operations Engineer"}]},{id:6,title:"Product"}]}],a=Object(S.useMemo)((function(){var a=[];return function n(){var s=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];s.forEach((function(s){a.push(s),n(s.children)}))}(n),a}),[n]),s=Object(S.useState)([]),t=K()(s,2),p=t[0],e=t[1];return E.a.createElement("div",null,E.a.createElement(T.Transfer,{keyName:"id",dataSource:a,targetKeys:p,onChange:function(n){var a=n.targetKeys;return e(a)},list:{columns:[{name:"title"}]}},(function(a){var s=a.direction,t=a.selectedKeys,e=a.handleSelectChange;if("left"===s)return E.a.createElement(T.Tree,{checkable:!0,size:"small",data:n,onCheck:function(n,a){e(n.filter((function(n){return!p.includes(n)})))},checkedKeys:Array.from(new Set([].concat(w()(t),w()(p)))),disabledCheckedKeys:p,expandAll:!0})})))},z=function(){var n=[{id:1,title:"Hangzhou Youzan Technology Co. Ltd",children:[{id:2,title:"Engineer",children:[{id:3,title:"Back End Engineer",children:[{id:7,title:"JAVA"},{id:8,title:"PHP"},{id:9,title:"GO"},{id:10,title:".NET"}]},{id:4,title:"Front End Engineer"},{id:5,title:"Operations Engineer"}]},{id:6,title:"Product"}]}],a=Object(S.useMemo)((function(){var a=[];return function n(){var s=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];s.forEach((function(s){a.push(s),n(s.children)}))}(n),a}),[n]),s=Object(T.useTransfer)({targetKeys:[8,9]}),t=s.targetKeys,p=s.selectedKeys,e=s.transferKeys,o=s.changeSelectedKeys;return E.a.createElement("div",{className:"transfer-hook"},E.a.createElement(T.Tree,{checkable:!0,size:"small",data:n,onCheck:function(n){o("left",n.filter((function(n){return!t.includes(n)})))},checkedKeys:Array.from(new Set([].concat(w()(p),w()(t)))),disabledCheckedKeys:t,expandAll:!0}),E.a.createElement(T.Icon,{className:"left-icon",type:"left",onClick:function(){return e("left")}}),E.a.createElement(T.Icon,{className:"right-icon",type:"right",onClick:function(){return e("right")}}),E.a.createElement(T.Grid,{className:"transfer-gird",datasets:t.map((function(n){return a.find((function(a){return n===a.id}))})),selection:{selectedRowKeys:t.filter((function(n){return p.includes(n)})),onSelect:function(n){return o("right",n)}},columns:[{name:"title",title:"tree node"}]}))};function A(n){return E.a.createElement(n.tag,y()({},n.attributes,{dangerouslySetInnerHTML:{__html:n.html}}))}function O(n){return E.a.createElement(A,{tag:"section",html:n.html,attributes:{className:"zandoc-react-markdown"}})}function P(n){return E.a.createElement(A,{tag:"style",html:n.style})}var R=function(n){i()(s,n);var a=x(s);function s(){var n;p()(this,s);for(var t=arguments.length,e=new Array(t),o=0;o<t;o++)e[o]=arguments[o];return n=a.call.apply(a,[this].concat(e)),h()(u()(n),"state",{showCode:!1}),h()(u()(n),"toggle",(function(){n.setState({showCode:!n.state.showCode})})),n}return o()(s,[{key:"render",value:function(){var n=this.state.showCode,a=this.props,s=a.title,t=a.src,p=a.children;return E.a.createElement("div",{className:"zandoc-react-demo"},E.a.createElement("div",{className:"zandoc-react-demo__preview"},p),E.a.createElement("div",{className:"zandoc-react-demo__bottom",onClick:this.toggle},E.a.createElement("div",{className:"zandoc-react-demo__title"},E.a.createElement("p",null,s||"")),E.a.createElement("i",{className:"zenticon zenticon-caret-up zandoc-react-demo__toggle ".concat(n?"zandoc-react-demo__toggle-on":"zandoc-react-demo__toggle-off")})),n&&E.a.createElement("pre",{className:"zandoc-react-demo__code"},E.a.createElement(A,{tag:"code",html:t,attributes:{className:"language-jsx"}})))}}]),s}(S.Component),_=function(n){i()(s,n);var a=x(s);function s(){return p()(this,s),a.apply(this,arguments)}return o()(s,[{key:"componentDidMount",value:function(){var n=location.hash;if(n){var a=document.querySelector('a[href="'.concat(n,'"]'));a&&Object(T.smoothScroll)(document.documentElement,0,function n(a,s){for(;a;)return a.offsetTop&&"static"!==getComputedStyle(a).position&&(s+=a.offsetTop),n(a.parentNode,s);return s}(a,-9))}}},{key:"render",value:function(){return E.a.createElement("div",{className:"zandoc-react-container",key:null},E.a.createElement(P,{style:".grid-transfer .zent-transfer__item:first-child {\n\twidth: 400px;\n}\n.grid-transfer .zent-grid-thead .zent-grid-tr {\n\theight: 36px;\n}\n\n.transfer-hook {\n\tdisplay: flex;\n\talign-items: center;\n}\n\n.transfer-hook .left-icon {\n\t\tfont-size: 30px;\n\t\tpadding: 20px 0 20px 10px;\n\t}\n\n.transfer-hook .right-icon {\n\t\tfont-size: 30px;\n\t\tpadding: 20px 30px 20px 0;\n\t}\n\n.transfer-hook .transfer-gird {\n\t\tmin-height: 240px;\n\t\twidth: 200px;\n\t}"}),E.a.createElement(O,{html:'<h2 class="anchor-heading"><a href="#transfer">¶</a><a href="javascript:void(0)" id="transfer" class="anchor-point"></a>Transfer</h2>\n<p>Double column transfer choice box.</p>\n<h3 class="anchor-heading"><a href="#demos">¶</a><a href="javascript:void(0)" id="demos" class="anchor-point"></a>Demos</h3>'}),E.a.createElement(R,{title:"Basic usage",id:"Demobasic",src:'<span class="token keyword module">import</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword module">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword module">import</span> <span class="token punctuation">{</span> <span class="token maybe-class-name">Transfer</span><span class="token punctuation">,</span> <span class="token maybe-class-name">Switch</span><span class="token punctuation">,</span> <span class="token maybe-class-name">Disabled</span> <span class="token punctuation">}</span> <span class="token keyword module">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token method function property-access">fill</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token method function property-access">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">_<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n  option<span class="token operator">:</span> <span class="token known-class-name class-name">String</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">,</span>\n  text<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">option</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>index<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n  disabled<span class="token operator">:</span> index <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    name<span class="token operator">:</span> <span class="token string">\'text\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">[</span>targetKeys<span class="token punctuation">,</span> setTargetKeys<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">\'8\'</span><span class="token punctuation">,</span> <span class="token string">\'9\'</span><span class="token punctuation">,</span> <span class="token string">\'10\'</span><span class="token punctuation">,</span> <span class="token string">\'15\'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token punctuation">[</span>selectedKeys<span class="token punctuation">,</span> setSelectedKeys<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token punctuation">[</span>checked<span class="token punctuation">,</span> setChecked<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token maybe-class-name">ReactDOM</span><span class="token punctuation">.</span><span class="token method function property-access">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Transfer</span></span>\n      <span class="token attr-name">keyName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>option<span class="token punctuation">"</span></span>\n      <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span>\n      <span class="token attr-name">targetKeys</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>targetKeys<span class="token punctuation">}</span></span>\n      <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> targetKeys<span class="token punctuation">,</span> selectedKeys <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n        <span class="token function">setTargetKeys</span><span class="token punctuation">(</span>targetKeys<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token function">setSelectedKeys</span><span class="token punctuation">(</span>selectedKeys<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token attr-name">list</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> columns <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token attr-name">selectedKeys</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>selectedKeys<span class="token punctuation">}</span></span>\n      <span class="token attr-name">onSelectChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token parameter">items</span> <span class="token arrow operator">=></span> <span class="token function">setSelectedKeys</span><span class="token punctuation">(</span>items<span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n      <span class="token attr-name">disabled</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>checked<span class="token punctuation">}</span></span>\n    <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginTop<span class="token operator">:</span> <span class="token string">\'20px\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Switch</span></span> <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>checked<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token function">setChecked</span><span class="token punctuation">(</span><span class="token operator">!</span>checked<span class="token punctuation">)</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n      disabled\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n  mountNode\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'},E.a.createElement(N)),E.a.createElement(R,{title:"Search",id:"Demosearch",src:'<span class="token keyword module">import</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> useCallback <span class="token punctuation">}</span> <span class="token keyword module">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword module">import</span> <span class="token punctuation">{</span> <span class="token maybe-class-name">Transfer</span> <span class="token punctuation">}</span> <span class="token keyword module">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token method function property-access">fill</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token method function property-access">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">_<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span> option<span class="token operator">:</span> <span class="token known-class-name class-name">String</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">,</span> text<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">option</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>index<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    name<span class="token operator">:</span> <span class="token string">\'text\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">[</span>targetKeys<span class="token punctuation">,</span> setTargetKeys<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token maybe-class-name">ReactDOM</span><span class="token punctuation">.</span><span class="token method function property-access">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Transfer</span></span>\n      <span class="token attr-name">keyName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>option<span class="token punctuation">"</span></span>\n      <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span>\n      <span class="token attr-name">targetKeys</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>targetKeys<span class="token punctuation">}</span></span>\n      <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> targetKeys <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token function">setTargetKeys</span><span class="token punctuation">(</span>targetKeys<span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n      <span class="token attr-name">showSearch</span>\n      <span class="token attr-name">filterOption</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">inputValue<span class="token punctuation">,</span> <span class="token punctuation">{</span> text <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> text<span class="token punctuation">.</span><span class="token method function property-access">indexOf</span><span class="token punctuation">(</span>inputValue<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">}</span></span>\n      <span class="token attr-name">list</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> columns <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n    <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n  mountNode\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'},E.a.createElement(C)),E.a.createElement(R,{title:"Grid",id:"Demogrid",src:'<span class="token keyword module">import</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> useCallback <span class="token punctuation">}</span> <span class="token keyword module">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword module">import</span> <span class="token punctuation">{</span> <span class="token maybe-class-name">Transfer</span> <span class="token punctuation">}</span> <span class="token keyword module">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token method function property-access">fill</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token method function property-access">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">_<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n  option<span class="token operator">:</span> <span class="token known-class-name class-name">String</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">,</span>\n  text1<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Option</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>index<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n  text2<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Product</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>index<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> leftColumns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    name<span class="token operator">:</span> <span class="token string">\'text1\'</span><span class="token punctuation">,</span>\n    title<span class="token operator">:</span> <span class="token string">\'left1\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    name<span class="token operator">:</span> <span class="token string">\'text2\'</span><span class="token punctuation">,</span>\n    title<span class="token operator">:</span> <span class="token string">\'left2\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> rightColumns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    name<span class="token operator">:</span> <span class="token string">\'text1\'</span><span class="token punctuation">,</span>\n    title<span class="token operator">:</span> <span class="token string">\'right\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">[</span>targetKeys<span class="token punctuation">,</span> setTargetKeys<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token maybe-class-name">ReactDOM</span><span class="token punctuation">.</span><span class="token method function property-access">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Transfer</span></span>\n      <span class="token attr-name">keyName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>option<span class="token punctuation">"</span></span>\n      <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>grid-transfer<span class="token punctuation">"</span></span>\n      <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span>\n      <span class="token attr-name">targetKeys</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>targetKeys<span class="token punctuation">}</span></span>\n      <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> targetKeys <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token function">setTargetKeys</span><span class="token punctuation">(</span>targetKeys<span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n      <span class="token attr-name">pagination</span>\n      <span class="token attr-name">list</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          columns<span class="token operator">:</span> leftColumns<span class="token punctuation">,</span> scroll<span class="token operator">:</span> <span class="token punctuation">{</span> y<span class="token operator">:</span> <span class="token number">198</span> <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n          columns<span class="token operator">:</span> rightColumns<span class="token punctuation">,</span> scroll<span class="token operator">:</span> <span class="token punctuation">{</span> y<span class="token operator">:</span> <span class="token number">198</span> <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">}</span></span>\n    <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n  mountNode\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'},E.a.createElement(j)),E.a.createElement(R,{title:"Render props",id:"DemorenderProps",src:'<span class="token keyword module">import</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> useCallback<span class="token punctuation">,</span> useMemo <span class="token punctuation">}</span> <span class="token keyword module">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword module">import</span> <span class="token punctuation">{</span> <span class="token maybe-class-name">Transfer</span><span class="token punctuation">,</span> <span class="token maybe-class-name">Tree</span> <span class="token punctuation">}</span> <span class="token keyword module">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> treeData <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    id<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    title<span class="token operator">:</span> <span class="token string">\'Hangzhou Youzan Technology Co. Ltd\'</span><span class="token punctuation">,</span>\n    children<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        id<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n        title<span class="token operator">:</span> <span class="token string">\'Engineer\'</span><span class="token punctuation">,</span>\n        children<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            id<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>\n            title<span class="token operator">:</span> <span class="token string">\'Back End Engineer\'</span><span class="token punctuation">,</span>\n            children<span class="token operator">:</span> <span class="token punctuation">[</span>\n              <span class="token punctuation">{</span>\n                id<span class="token operator">:</span> <span class="token number">7</span><span class="token punctuation">,</span>\n                title<span class="token operator">:</span> <span class="token string">\'JAVA\'</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n              <span class="token punctuation">{</span>\n                id<span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>\n                title<span class="token operator">:</span> <span class="token string">\'PHP\'</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n              <span class="token punctuation">{</span>\n                id<span class="token operator">:</span> <span class="token number">9</span><span class="token punctuation">,</span>\n                title<span class="token operator">:</span> <span class="token string">\'GO\'</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n              <span class="token punctuation">{</span>\n                id<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n                title<span class="token operator">:</span> <span class="token string">\'.NET\'</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">]</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            id<span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>\n            title<span class="token operator">:</span> <span class="token string">\'Front End Engineer\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            id<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n            title<span class="token operator">:</span> <span class="token string">\'Operations Engineer\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        id<span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">,</span>\n        title<span class="token operator">:</span> <span class="token string">\'Product\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    name<span class="token operator">:</span> <span class="token string">\'title\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> transferDataSource <span class="token operator">=</span> <span class="token function">useMemo</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token keyword">function</span> <span class="token function">flatten</span><span class="token punctuation">(</span><span class="token parameter">list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    list<span class="token punctuation">.</span><span class="token method function property-access">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n      result<span class="token punctuation">.</span><span class="token method function property-access">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token function">flatten</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token property-access">children</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token function">flatten</span><span class="token punctuation">(</span>treeData<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> result<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>treeData<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">[</span>targetKeys<span class="token punctuation">,</span> setTargetKeys<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token maybe-class-name">ReactDOM</span><span class="token punctuation">.</span><span class="token method function property-access">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Transfer</span></span>\n      <span class="token attr-name">keyName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>id<span class="token punctuation">"</span></span>\n      <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>transferDataSource<span class="token punctuation">}</span></span>\n      <span class="token attr-name">targetKeys</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>targetKeys<span class="token punctuation">}</span></span>\n      <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> targetKeys <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token function">setTargetKeys</span><span class="token punctuation">(</span>targetKeys<span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n      <span class="token attr-name">list</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> columns <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n    <span class="token punctuation">></span></span>\n      <span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> direction<span class="token punctuation">,</span> selectedKeys<span class="token punctuation">,</span> handleSelectChange <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">\'left\'</span> <span class="token operator">===</span> direction<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token keyword">return</span> <span class="token punctuation">(</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Tree</span></span>\n              <span class="token attr-name">checkable</span>\n              <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>small<span class="token punctuation">"</span></span>\n              <span class="token attr-name">data</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>treeData<span class="token punctuation">}</span></span>\n              <span class="token attr-name">onCheck</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">checked<span class="token punctuation">,</span> helpInfo</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n                <span class="token function">handleSelectChange</span><span class="token punctuation">(</span>\n                  checked<span class="token punctuation">.</span><span class="token method function property-access">filter</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token arrow operator">=></span> <span class="token operator">!</span>targetKeys<span class="token punctuation">.</span><span class="token method function property-access">includes</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span>\n                <span class="token punctuation">)</span><span class="token punctuation">;</span>\n              <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n              <span class="token attr-name">checkedKeys</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token known-class-name class-name">Array</span><span class="token punctuation">.</span><span class="token keyword module">from</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token spread operator">...</span>selectedKeys<span class="token punctuation">,</span> <span class="token spread operator">...</span>targetKeys<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n              <span class="token attr-name">disabledCheckedKeys</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>targetKeys<span class="token punctuation">}</span></span>\n              <span class="token attr-name">expandAll</span>\n            <span class="token punctuation">/></span></span>\n          <span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">}</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Transfer</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n  mountNode\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'},E.a.createElement(D)),E.a.createElement(R,{title:"useTransfer",id:"Demohook",src:'<span class="token keyword module">import</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> useCallback<span class="token punctuation">,</span> useMemo <span class="token punctuation">}</span> <span class="token keyword module">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword module">import</span> <span class="token punctuation">{</span> useTransfer<span class="token punctuation">,</span> <span class="token maybe-class-name">Grid</span><span class="token punctuation">,</span> <span class="token maybe-class-name">Tree</span><span class="token punctuation">,</span> <span class="token maybe-class-name">Icon</span> <span class="token punctuation">}</span> <span class="token keyword module">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> treeData <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    id<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    title<span class="token operator">:</span> <span class="token string">\'Hangzhou Youzan Technology Co. Ltd\'</span><span class="token punctuation">,</span>\n    children<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        id<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n        title<span class="token operator">:</span> <span class="token string">\'Engineer\'</span><span class="token punctuation">,</span>\n        children<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            id<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>\n            title<span class="token operator">:</span> <span class="token string">\'Back End Engineer\'</span><span class="token punctuation">,</span>\n            children<span class="token operator">:</span> <span class="token punctuation">[</span>\n              <span class="token punctuation">{</span>\n                id<span class="token operator">:</span> <span class="token number">7</span><span class="token punctuation">,</span>\n                title<span class="token operator">:</span> <span class="token string">\'JAVA\'</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n              <span class="token punctuation">{</span>\n                id<span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>\n                title<span class="token operator">:</span> <span class="token string">\'PHP\'</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n              <span class="token punctuation">{</span>\n                id<span class="token operator">:</span> <span class="token number">9</span><span class="token punctuation">,</span>\n                title<span class="token operator">:</span> <span class="token string">\'GO\'</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n              <span class="token punctuation">{</span>\n                id<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n                title<span class="token operator">:</span> <span class="token string">\'.NET\'</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">]</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            id<span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>\n            title<span class="token operator">:</span> <span class="token string">\'Front End Engineer\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            id<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n            title<span class="token operator">:</span> <span class="token string">\'Operations Engineer\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        id<span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">,</span>\n        title<span class="token operator">:</span> <span class="token string">\'Product\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    name<span class="token operator">:</span> <span class="token string">\'title\'</span><span class="token punctuation">,</span>\n    title<span class="token operator">:</span> <span class="token string">\'tree node\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> transferDataSource <span class="token operator">=</span> <span class="token function">useMemo</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token keyword">function</span> <span class="token function">flatten</span><span class="token punctuation">(</span><span class="token parameter">list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    list<span class="token punctuation">.</span><span class="token method function property-access">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n      result<span class="token punctuation">.</span><span class="token method function property-access">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token function">flatten</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token property-access">children</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token function">flatten</span><span class="token punctuation">(</span>treeData<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> result<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>treeData<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> targetKeys<span class="token punctuation">,</span> selectedKeys<span class="token punctuation">,</span> transferKeys<span class="token punctuation">,</span> changeSelectedKeys <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useTransfer</span><span class="token punctuation">(</span><span class="token punctuation">{</span> targetKeys<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token maybe-class-name">ReactDOM</span><span class="token punctuation">.</span><span class="token method function property-access">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>transfer-hook<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Tree</span></span>\n      <span class="token attr-name">checkable</span>\n      <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>small<span class="token punctuation">"</span></span>\n      <span class="token attr-name">data</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>treeData<span class="token punctuation">}</span></span>\n      <span class="token attr-name">onCheck</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token parameter">checked</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n        <span class="token function">changeSelectedKeys</span><span class="token punctuation">(</span>\n          <span class="token string">\'left\'</span><span class="token punctuation">,</span>\n          checked<span class="token punctuation">.</span><span class="token method function property-access">filter</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token arrow operator">=></span> <span class="token operator">!</span>targetKeys<span class="token punctuation">.</span><span class="token method function property-access">includes</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span>\n        <span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token attr-name">checkedKeys</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token known-class-name class-name">Array</span><span class="token punctuation">.</span><span class="token keyword module">from</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token spread operator">...</span>selectedKeys<span class="token punctuation">,</span> <span class="token spread operator">...</span>targetKeys<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n      <span class="token attr-name">disabledCheckedKeys</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>targetKeys<span class="token punctuation">}</span></span>\n      <span class="token attr-name">expandAll</span>\n    <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Icon</span></span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>left-icon<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token function">transferKeys</span><span class="token punctuation">(</span><span class="token string">\'left\'</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Icon</span></span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>right-icon<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token function">transferKeys</span><span class="token punctuation">(</span><span class="token string">\'right\'</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span>\n      <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>transfer-gird<span class="token punctuation">"</span></span>\n      <span class="token attr-name">datasets</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>targetKeys<span class="token punctuation">.</span><span class="token method function property-access">map</span><span class="token punctuation">(</span><span class="token parameter">key</span> <span class="token arrow operator">=></span> transferDataSource<span class="token punctuation">.</span><span class="token method function property-access">find</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token arrow operator">=></span> key <span class="token operator">===</span> item<span class="token punctuation">.</span><span class="token property-access">id</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n      <span class="token attr-name">selection</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n        selectedRowKeys<span class="token operator">:</span> targetKeys<span class="token punctuation">.</span><span class="token method function property-access">filter</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token arrow operator">=></span> selectedKeys<span class="token punctuation">.</span><span class="token method function property-access">includes</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token function-variable function">onSelect</span><span class="token operator">:</span> <span class="token parameter">keys</span> <span class="token arrow operator">=></span> <span class="token function">changeSelectedKeys</span><span class="token punctuation">(</span><span class="token string">\'right\'</span><span class="token punctuation">,</span> keys<span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>\n    <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n  mountNode\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'},E.a.createElement(z)),E.a.createElement(O,{html:'<h3 class="anchor-heading"><a href="#api">¶</a><a href="javascript:void(0)" id="api" class="anchor-point"></a>API</h3>\n<table class="table">\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n<th>Required</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>keyName</td>\n<td>The primary key of \n<code>dataSource</code></td>\n<td><code>string</code></td>\n<td></td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>dataSource</td>\n<td>Used for setting the source data. The elements that are part of this array will be present the left column. Except the elements whose keys are included in targetKeys prop</td>\n<td><code>ITransferData[]</code></td>\n<td></td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>onChange</td>\n<td>A callback function that is executed when the transfer between columns is completed</td>\n<td><code>({ targetKeys, transferredKeys, direction, selectedKeys }) => void</code></td>\n<td></td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>targetKeys</td>\n<td>A set of keys of elements that are listed on the right column</td>\n<td><code>string[]</code></td>\n<td><code>[]</code></td>\n<td>No</td>\n</tr>\n<tr>\n<td>selectedKeys</td>\n<td>A set of keys of selected items</td>\n<td><code>string[]</code></td>\n<td><code>[]</code></td>\n<td>No</td>\n</tr>\n<tr>\n<td>onSelectChange</td>\n<td>A callback function which is executed when a check changes</td>\n<td><code>(selectedKeys: string[]) => void</code></td>\n<td></td>\n<td>No</td>\n</tr>\n<tr>\n<td>titles</td>\n<td>A set of titles that are sorted from left to right</td>\n<td><code>[React.ReactNode, React.ReactNode]</code></td>\n<td><code>[\'Source\', \'Target\']</code></td>\n<td>No</td>\n</tr>\n<tr>\n<td>showSearch</td>\n<td>If included, a search box is shown on each column</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n<td>No</td>\n</tr>\n<tr>\n<td>searchPlaceholder</td>\n<td>Search input placeholder</td>\n<td><code>string</code></td>\n<td><code>Please Enter</code></td>\n<td>No</td>\n</tr>\n<tr>\n<td>filterOption</td>\n<td>A function to determine whether an item should show in search result list</td>\n<td><code>(inputValue: string, option: ITransferData) => boolean</code></td>\n<td></td>\n<td>No</td>\n</tr>\n<tr>\n<td>pagination</td>\n<td>List pagination. Not work in render props. PageSize is 10 by default</td>\n<td><code>boolean</code>\n \n|\n \n<code>{ pageSize: number }</code></td>\n<td></td>\n<td>No</td>\n</tr>\n<tr>\n<td>disabled</td>\n<td>Whether disabled transfer</td>\n<td><code>boolean</code></td>\n<td></td>\n<td>No</td>\n</tr>\n<tr>\n<td>className</td>\n<td>Extra custom class name</td>\n<td><code>string</code></td>\n<td><code>\'\'</code></td>\n<td>No</td>\n</tr>\n<tr>\n<td>list</td>\n<td>Set list props</td>\n<td><code>Object ListType</code>\n \n|\n \n<code>[ListType, ListType]</code></td>\n<td></td>\n<td>No</td>\n</tr>\n</tbody>\n</table>\n<h4 class="anchor-heading"><a href="#render-props">¶</a><a href="javascript:void(0)" id="render-props" class="anchor-point"></a>Render Props</h4>\n<p>Transfer accept children to customize render list, using follow props:</p>\n<table class="table">\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>direction</td>\n<td>List render direction</td>\n<td><code>left</code>\n \n|\n \n<code>right</code></td>\n</tr>\n<tr>\n<td>selectedKeys</td>\n<td>Selected items</td>\n<td><code>string[]</code></td>\n</tr>\n<tr>\n<td>handleSelectChange</td>\n<td>Select a group of items</td>\n<td><code>(keys: string[]) => void</code></td>\n</tr>\n</tbody>\n</table>\n<h4 class="anchor-heading"><a href="#list">¶</a><a href="javascript:void(0)" id="list" class="anchor-point"></a>list</h4>\n<table class="table">\n<thead>\n<tr>\n<th>Property</th>\n<th>Descripition</th>\n<th>Type</th>\n<th>Required</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>columns</td>\n<td>Columns</td>\n<td><code>TransferColumnType</code></td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>selection</td>\n<td>The configuration for selection(Currently only supports \n<code>getCheckboxProps</code>\n)</td>\n<td><code>object { getCheckboxProps: ( data: ITransferData) => { disabled?: boolean; reason?: React.ReactNode }; }</code></td>\n<td>No</td>\n</tr>\n</tbody>\n</table>\n<p>The above props are different from <code>Grid</code>, <code>rowKey</code>、<code>scroll</code>、<code>emptyLabel</code>、<code>onRowClick</code>、<code>sortBy</code>、<code>sortType</code>、<code>defaultSortType</code>、<code>bordered</code>、<code>ellipsis</code>、<code>components</code>、<code>rowProps</code>、<code>autoStick</code>、<code>autoStickOffsetTop</code>、<code>disableHoverHighlight</code>、<code>onChange</code>、<code>loading</code>、<code>className</code>、<code>rowClassName</code> will be passed down.(<a href="https://youzan.github.io/zent/en/component/grid#api">View props description</a>).</p>\n<h4 class="anchor-heading"><a href="#columns">¶</a><a href="javascript:void(0)" id="columns" class="anchor-point"></a>columns</h4>\n<table class="table">\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n<th>Required</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>name</td>\n<td>Key for the corresponding data</td>\n<td><code>string</code></td>\n<td></td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>title</td>\n<td>Column title</td>\n<td><code>ReactNode</code></td>\n<td><code>\'\'</code></td>\n<td>No</td>\n</tr>\n</tbody>\n</table>\n<p>The above props are different from <code>Grid</code>, <a href="https://youzan.github.io/zent/en/component/grid#columns">View other props descriptions</a>.</p>\n<h3 class="anchor-heading"><a href="#usetransfer">¶</a><a href="javascript:void(0)" id="usetransfer" class="anchor-point"></a>useTransfer</h3>\n<p>Hook for sending left and right data.</p>\n<h4 class="anchor-heading"><a href="#params">¶</a><a href="javascript:void(0)" id="params" class="anchor-point"></a>Params</h4>\n<table class="table">\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n<th>Required</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>selectedKeys</td>\n<td>Default Selected items</td>\n<td><code>string[]</code></td>\n<td><code>[]</code></td>\n<td>No</td>\n</tr>\n<tr>\n<td>targetKeys</td>\n<td>Default items that are listed on the right column</td>\n<td><code>string[]</code></td>\n<td><code>[]</code></td>\n<td>No</td>\n</tr>\n<tr>\n<td>disabledKeys</td>\n<td>disabled items</td>\n<td><code>string[]</code></td>\n<td><code>[]</code></td>\n<td>No</td>\n</tr>\n</tbody>\n</table>\n<h4 class="anchor-heading"><a href="#result">¶</a><a href="javascript:void(0)" id="result" class="anchor-point"></a>Result</h4>\n<table class="table">\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>selectedKeys</td>\n<td>A set of keys of selected items</td>\n<td><code>string[]</code></td>\n</tr>\n<tr>\n<td>targetKeys</td>\n<td>A set of keys of elements that are listed on the right column</td>\n<td><code>string[]</code></td>\n</tr>\n<tr>\n<td>transferKeys</td>\n<td>A function that transfer selected items on the left or right</td>\n<td><code>(direction: Direction) => void</code></td>\n</tr>\n<tr>\n<td>changeSelectedKeys</td>\n<td>A function that set selected items on the left or right</td>\n<td><code>(direction: Direction, selectedKeys: string[]) => void</code></td>\n</tr>\n<tr>\n<td>resetSelectedKeys</td>\n<td>A function that reset selected items</td>\n<td><code>(keys: string[]) => void</code></td>\n</tr>\n<tr>\n<td>resetTargetKeys</td>\n<td>A function that reset targetKeys</td>\n<td><code>(keys: string[]) => void</code></td>\n</tr>\n</tbody>\n</table>'}))}}]),s}(S.Component)}}]);