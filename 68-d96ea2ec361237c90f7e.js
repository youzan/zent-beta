(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{807:function(n,s,a){"use strict";a.r(s),a.d(s,"default",function(){return J});var t=a(704),p=a.n(t),o=a(706),c=a.n(o),e=a(707),u=a.n(e),l=a(30),i=a.n(l),k=a(31),r=a.n(k),d=a(32),m=a.n(d),g=a(33),h=a.n(g),y=a(43),f=a.n(y),w=a(34),b=a.n(w),v=a(25),x=a.n(v),N=a(0),C=a.n(N),E=a(175),S=a(125),R=a(708),P=a.n(R),_=(a(9),a(711)),D=function(){for(var n=[],s=0;s<3;s++)n.push({id:"id-".concat(s),name:"Product ".concat(s),uv:20,stock:s>1?5:null});return C.a.createElement(S.x,{columns:[{title:"Product Name",name:"name",className:"name"},{title:"uv",name:"uv"},{title:"stock",name:"stock",defaultText:0}],datasets:n,rowClassName:function(n,s){return"".concat(n.id,"-").concat(s)},onRowClick:function(n,s,a){console.log(n,s,a.target,"simple onRowClick")}})},z=function(){for(var n=[{title:"a very very looooooooonnnnng name",name:"name",width:100,nowrap:!0},{title:"right alignment",name:"uv",textAlign:"right",width:300},{title:"big size",name:"stock"}],s=[],a=0;a<3;a++)s.push({id:a,name:"Product ".concat(a),uv:20,stock:5});var t=function(a){function t(){var n,s;i()(this,t);for(var a=arguments.length,p=new Array(a),o=0;o<a;o++)p[o]=arguments[o];return s=m()(this,(n=h()(t)).call.apply(n,[this].concat(p))),x()(f()(s),"state",{loading:!0}),s}return b()(t,a),r()(t,[{key:"render",value:function(){var a=this;return C.a.createElement("div",null,C.a.createElement(S.fb,{onChange:function(n){return a.setState({loading:n})},checked:this.state.loading,size:"small",className:"switch"}),C.a.createElement(S.x,{columns:n,datasets:s,loading:this.state.loading}))}}]),t}(C.a.Component);return C.a.createElement(t,null)},T=function(){for(var n=[{title:"a very very looooooooonnnnng name",name:"name",width:100,nowrap:!0,onCellClick:function(n){console.log(n,"data")}},{title:"uv",name:"uv"},{title:"uv",name:"stock"}],s=[],a=[],t=0;t<5;t++)s.push({id:"f-".concat(t),name:"Baby Products ".concat(t),uv:20,stock:5}),a.push({id:"s-".concat(t),name:"Pet Products ".concat(t),uv:20,stock:5});var p=function(t){function p(){var n,a;i()(this,p);for(var t=arguments.length,o=new Array(t),c=0;c<t;c++)o[c]=arguments[c];return a=m()(this,(n=h()(p)).call.apply(n,[this].concat(o))),x()(f()(a),"state",{current:1,pageSize:5,total:10,datasets:s}),x()(f()(a),"onChange",function(n){var s=n.current,t=n.pageSize;a.setState({current:s,pageSize:t})}),a}return b()(p,t),r()(p,[{key:"render",value:function(){var t=this.state,p=t.current,o=t.pageSize,c=t.total;return C.a.createElement(S.x,{columns:n,datasets:1===p?s:a,pageInfo:{current:p,pageSize:o,total:c,pageSizeOptions:[5,10]},onChange:this.onChange,ellipsis:!0})}}]),p}(C.a.Component);return C.a.createElement(p,null)},j=function(){for(var n=[{title:"Product Name",name:"name"},{title:"uv",name:"uv"},{title:"stock",name:"stock"}],s=[],a=[],t=0;t<5;t++)s.push({id:"f-".concat(t),name:"Baby Products ".concat(t),uv:20,stock:5}),a.push({id:"s-".concat(t),name:"Pet Products ".concat(t),uv:20,stock:5});var p=function(t){function p(){var n,t;i()(this,p);for(var o=arguments.length,c=new Array(o),e=0;e<o;e++)c[e]=arguments[e];return t=m()(this,(n=h()(p)).call.apply(n,[this].concat(c))),x()(f()(t),"state",{selectedRowKeys:["f-0"],datasets:s,current:1}),x()(f()(t),"onChange",function(n){var p=n.current;t.setState({current:p,datasets:1===p?s:a})}),t}return b()(p,t),r()(p,[{key:"render",value:function(){var s=this;return C.a.createElement(S.x,{columns:n,datasets:this.state.datasets,pageInfo:{pageSize:5,total:10,current:this.state.current},paginationType:"lite",selection:{selectedRowKeys:this.state.selectedRowKeys,onSelect:function(n,a,t){n.length>2?(S.L.error("你最多选择两个"),s.setState({selectedRowKeys:[].concat(s.state.selectedRowKeys)})):s.setState({selectedRowKeys:n})},getCheckboxProps:function(n){return{disabled:"Baby Products 1"===n.name}}},rowKey:"id",onChange:this.onChange})}}]),p}(C.a.Component);return C.a.createElement(p,null)},$=function(){for(var n=[],s=0;s<3;s++)n.push({id:s,name:"Product ".concat(s),uv:10*s,stock:5*s});var a=[{title:"Product Name",name:"name",needSort:!0},{title:"uv",name:"uv"},{title:"stock",name:"stock",needSort:!0}],t=function(s){function t(s){var a;return i()(this,t),a=m()(this,h()(t).call(this,s)),x()(f()(a),"onChange",function(n){console.log(n,"conf");var s=n.sortType,t=n.sortBy,p=a.state.datasets,o=p;"asc"===s?o=p.sort(function(n,s){return n[t]-s[t]}):"desc"===s&&(o=p.sort(function(n,s){return s[t]-n[t]})),a.setState(P()({},a.state,n,{datasets:o}))}),a.state={datasets:n,sortBy:"name",sortType:""},a}return b()(t,s),r()(t,[{key:"render",value:function(){return C.a.createElement(S.x,{columns:a,datasets:this.state.datasets,onChange:this.onChange,sortBy:this.state.sortBy,sortType:this.state.sortType})}}]),t}(C.a.Component);return C.a.createElement(t,null)},G=function(){for(var n=[{title:"colSpan & rowSpan",name:"name",colSpan:2,width:"200px"},{title:"subtitle",name:"sub",colSpan:0,width:"200px",bodyRender:function(n,s){return C.a.createElement("span",null,n.sub)}},{title:"uv",name:"uv",bodyRender:function(n,s){var a=s.row;return a%2==0?{props:{rowSpan:2},children:C.a.createElement("span",null,n.uv)}:a%2!=0?{props:{rowSpan:0}}:C.a.createElement("span",null,n.uv)}},{title:"stock",name:"stock"}],s=[],a=0;a<6;a++)s.push({id:a,name:"Product ".concat(a),sub:"subtitle ".concat(a),uv:20,stock:5});var t=function(a){function t(){return i()(this,t),m()(this,h()(t).apply(this,arguments))}return b()(t,a),r()(t,[{key:"render",value:function(){return C.a.createElement(S.x,{columns:n,datasets:s})}}]),t}(C.a.Component);return C.a.createElement(t,null)},I=function(){for(var n=[],s=0;s<3;s++)n.push({id:s,name:"Product ".concat(s),uv:20,stock:5,sold_num:5,created_time:"2017-09-20"});return C.a.createElement("div",null,C.a.createElement(S.x,{columns:[{title:"Product Name",name:"name",width:100,fixed:!0},{title:"uv",name:"uv",width:100,fixed:!0},{title:"stock",name:"stock"},{title:"Number of sold products",name:"sold_num"},{title:"Created Time",name:"created_time",width:100,fixed:"right"}],datasets:n,scroll:{x:1300}}))},B=function(){for(var n=[],s=0;s<5;s++)n.push({id:"id-".concat(s),name:"Product ".concat(s),uv:20,stock:5});return C.a.createElement(S.x,{columns:[{title:"Product Name",name:"name",className:"name",width:150},{title:"uv",name:"uv",width:150},{title:"stock",name:"stock"}],datasets:n,scroll:{y:200},rowClassName:function(n,s){return"".concat(n.id,"-").concat(s)},onRowClick:function(n,s,a){console.log(n,s,a.target,"simple onRowClick")}})},K=function(){for(var n=[],s=0;s<5;s++)n.push({id:s,name:"Product ".concat(s),uv:20,stock:5,sold_num:5,created_time:"2017-09-20"});return C.a.createElement("div",null,C.a.createElement(S.x,{columns:[{title:"Product Name",name:"name",width:100,fixed:!0},{title:"uv",name:"uv",width:100,fixed:!0},{title:"stock",name:"stock"},{title:"Number of sold products",name:"sold_num"},{title:"Created Time",name:"created_time",width:100,fixed:"right"}],datasets:n,scroll:{x:1300,y:200}}))},O=function(){var n=[{item_id:"5024217",bro_uvpv:"0/0",stock_num:"60",sold_num:0},{item_id:"5024277",bro_uvpv:"0/0",stock_num:59,sold_num:0},{item_id:"13213123",bro_uvpv:"0/0",stock_num:159,sold_num:0}],s=[{title:"Product",width:"50px",fixed:!0,bodyRender:function(n){return C.a.createElement("div",null,n.item_id)}},{title:"PV",name:"bro_uvpv",width:"100px"},{title:"Stock",name:"stock_num",width:"100px"},{title:"Sales",name:"sold_num",fixed:"right"}],a=function(a){function t(n){var s;return i()(this,t),s=m()(this,h()(t).call(this,n)),x()(f()(s),"onExpand",function(n){console.log(n)}),s.state={limit:10,current:0,total:101},s}return b()(t,a),r()(t,[{key:"getRowConf",value:function(n,s){return{canSelect:!0}}},{key:"onChange",value:function(n){this.setState(n)}},{key:"render",value:function(){return C.a.createElement(S.x,{columns:s,datasets:n,onChange:this.onChange.bind(this),getRowConf:this.getRowConf,rowKey:"item_id",scroll:{x:1300},expandation:{isExpanded:function(n,s){return s%2==0},expandRender:function(n){return C.a.createElement("div",null,n.item_id)}},onExpand:this.onExpand})}}]),t}(C.a.Component);return C.a.createElement(a,null)},M=function(){return C.a.createElement(S.x,{columns:[{title:"Product Name",name:"name",className:"name"},{title:"uv",name:"uv"},{title:"stock",name:"stock"}],datasets:[],rowClassName:function(n,s){return"".concat(n.id,"-").concat(s)},onRowClick:function(n,s,a){console.log(n,s,a.target,"simple onRowClick")}})},A=function(){for(var n=[],s=0;s<5;s++)n.push({id:"f-".concat(s),name:"Baby Products ".concat(s),uv:20,stock:5});var a=function(n,s,a){var t=Array.from(n),p=t.splice(s,1),o=u()(p,1)[0];return t.splice(a,0,o),t},t=function(n){function s(){return i()(this,s),m()(this,h()(s).apply(this,arguments))}return b()(s,n),r()(s,[{key:"getItemStyle",value:function(n,s){var a=c()({},s);return n&&(a.display="table"),a}},{key:"render",value:function(){var n=this;return C.a.createElement(_.b,{key:this.props.id,draggableId:this.props.id,index:this.props.index},function(s,a){return C.a.createElement("tr",p()({},n.props,{ref:s.innerRef},s.draggableProps,s.dragHandleProps,{style:n.getItemStyle(a.isDragging,s.draggableProps.style)}))})}}]),s}(C.a.Component),o=function(s){function p(s){var o;return i()(this,p),o=m()(this,h()(p).call(this,s)),x()(f()(o),"columns",[{title:"Product Name",name:"name",className:"name"},{title:"uv",name:"uv"},{title:"stock",name:"stock"}]),x()(f()(o),"components",{row:t}),x()(f()(o),"onDragEnd",function(n){if(n.destination){var s=a(o.state.datasets,n.source.index,n.destination.index);console.log(s,o.state.datasets,"-------"),o.setState({datasets:s})}}),o.state={datasets:n},o}return b()(p,s),r()(p,[{key:"render",value:function(){var n=this;return C.a.createElement(_.a,{onDragEnd:this.onDragEnd},C.a.createElement(_.c,{droppableId:"droppable"},function(s,a){return C.a.createElement("div",{ref:s.innerRef},C.a.createElement(S.x,{columns:n.columns,datasets:n.state.datasets,components:n.components,className:"drop-grid",rowProps:function(n,s){return{id:n.id,index:s}}}))}))}}]),p}(C.a.Component);return C.a.createElement(o,null)},H=function(){for(var n=[],s=0;s<19;s++)n.push({id:"id-".concat(s),name:"Product ".concat(s),type:"type-".concat(s),company:"company-".concat(s),phone:"123342345".concat(s),stock:5,createdTime:"2018-12-11"});var a=function(s){function a(){var s,t;i()(this,a);for(var p=arguments.length,o=new Array(p),e=0;e<p;e++)o[e]=arguments[e];return t=m()(this,(s=h()(a)).call.apply(s,[this].concat(o))),x()(f()(t),"state",{datasets:n}),x()(f()(t),"getColumns",function(){return[{title:"Product Name",name:"name",className:"name",width:100,fixed:!0},{title:"Product Info",name:"productInfo",children:[{title:"Type",name:"type",width:200},{title:"Supplier",name:"supplier",children:[{title:"Company",name:"company",width:300},{title:"Phone",name:"phone",width:300}]}]},{title:"Stock",name:"stock",defaultText:0},{title:"Created Time",name:"createdTime",width:100,needSort:!0,fixed:"right"}]}),x()(f()(t),"onChange",function(n){console.log(n,"conf"),t.setState(c()({},n))}),t}return b()(a,s),r()(a,[{key:"render",value:function(){var n=this.state,s=n.sortBy,a=n.sortType;return C.a.createElement(S.x,{columns:this.getColumns(),datasets:this.state.datasets,rowClassName:function(n,s){return"".concat(n.id,"-").concat(s)},bordered:!0,scroll:{x:1400,y:400},sortBy:s,sortType:a,rowKey:"id",onChange:this.onChange})}}]),a}(C.a.Component);return C.a.createElement(a,null)};function q(n){return C.a.createElement(n.tag,p()({},n.attributes,{dangerouslySetInnerHTML:{__html:n.html}}))}function Y(n){return C.a.createElement(q,{tag:"section",html:n.html,attributes:{className:"zandoc-react-markdown"}})}function L(n){return C.a.createElement(q,{tag:"style",html:n.style})}var V=function(n){function s(){var n,a;i()(this,s);for(var t=arguments.length,p=new Array(t),o=0;o<t;o++)p[o]=arguments[o];return a=m()(this,(n=h()(s)).call.apply(n,[this].concat(p))),x()(f()(a),"state",{showCode:!1}),x()(f()(a),"toggle",function(){a.setState({showCode:!a.state.showCode})}),a}return b()(s,n),r()(s,[{key:"render",value:function(){var n=this.state.showCode,s=this.props,a=s.title,t=s.src,p=s.children;return C.a.createElement("div",{className:"zandoc-react-demo"},C.a.createElement("div",{className:"zandoc-react-demo__preview"},p),C.a.createElement("div",{className:"zandoc-react-demo__bottom",onClick:this.toggle},C.a.createElement("div",{className:"zandoc-react-demo__title"},C.a.createElement("p",null,a||"")),C.a.createElement("i",{className:"zenticon zenticon-caret-up zandoc-react-demo__toggle ".concat(n?"zandoc-react-demo__toggle-on":"zandoc-react-demo__toggle-off")})),n&&C.a.createElement("pre",{className:"zandoc-react-demo__code"},C.a.createElement(q,{tag:"code",html:t,attributes:{className:"language-jsx"}})))}}]),s}(N.Component),J=function(n){function s(){return i()(this,s),m()(this,h()(s).apply(this,arguments))}return b()(s,n),r()(s,[{key:"componentDidMount",value:function(){var n=location.hash;if(n){var s=document.querySelector('a[href="'.concat(n,'"]'));s&&Object(E.a)(document.documentElement,0,function n(s,a){for(;s;)return s.offsetTop&&"static"!==getComputedStyle(s).position&&(a+=s.offsetTop),n(s.parentNode,a);return a}(s,-9))}}},{key:"render",value:function(){return C.a.createElement("div",{className:"zandoc-react-container",key:null},C.a.createElement(L,{style:".drop-grid {\n  overflow: visible;\n}\n\n.switch {\n\t\tmargin-bottom: 10px;\n  }\n  .big-size {\n  \tfont-size: 20px;\n  }"}),C.a.createElement(Y,{html:'<h2 class="anchor-heading"><a href="#grid">¶</a><a href="javascript:void(0)" id="grid" class="anchor-point"></a>Grid</h2>\n<p>The function of the component is similar to the function of <a href="table">Table</a> component. <code>Grid</code> is implemented by <code>&#x3C;table></code> tag, while <code>Table</code> is implemented by <code>div</code> and <code>flex</code> layout.</p>\n<h3 class="anchor-heading"><a href="#demos">¶</a><a href="javascript:void(0)" id="demos" class="anchor-point"></a>Demos</h3>'}),C.a.createElement(V,{title:"Simple",id:"Demosimple",src:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Grid <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Product Name\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    className<span class="token punctuation">:</span> <span class="token string">\'name\'</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'uv\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'uv\'</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'stock\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'stock\'</span><span class="token punctuation">,</span>\n    defaultText<span class="token punctuation">:</span> <span class="token number">0</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> datasets <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  datasets<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    id<span class="token punctuation">:</span> <span class="token template-string"><span class="token string">`id-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token template-string"><span class="token string">`Product </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">,</span>\n    uv<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">,</span>\n    stock<span class="token punctuation">:</span> i <span class="token operator">></span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token number">5</span> <span class="token punctuation">:</span> <span class="token keyword">null</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n    <span class="token operator">&lt;</span>Grid\n      columns<span class="token operator">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span>\n      datasets<span class="token operator">=</span><span class="token punctuation">{</span>datasets<span class="token punctuation">}</span>\n      rowClassName<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token template-string"><span class="token string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>data<span class="token punctuation">.</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>index<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">}</span>\n      onRowClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> index<span class="token punctuation">,</span> event<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> index<span class="token punctuation">,</span> event<span class="token punctuation">.</span>target<span class="token punctuation">,</span> <span class="token string">\'simple onRowClick\'</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>\n    <span class="token operator">/</span><span class="token operator">></span>\n  <span class="token punctuation">,</span> mountNode\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'},C.a.createElement(D)),C.a.createElement(V,{title:"Loading",id:"Demoloading",src:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Grid<span class="token punctuation">,</span> Switch <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'a very very looooooooonnnnng name\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n    nowrap<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'right alignment\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'uv\'</span><span class="token punctuation">,</span>\n    textAlign<span class="token punctuation">:</span> <span class="token string">\'right\'</span><span class="token punctuation">,</span>\n    width<span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'big size\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'stock\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> datasets <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  datasets<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    id<span class="token punctuation">:</span> i<span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token template-string"><span class="token string">`Product </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">,</span>\n    uv<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">,</span>\n    stock<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    loading<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token operator">&lt;</span>Switch\n          onChange<span class="token operator">=</span><span class="token punctuation">{</span>value <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> loading<span class="token punctuation">:</span> value <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n          checked<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>loading<span class="token punctuation">}</span>\n          size<span class="token operator">=</span><span class="token string">"small"</span>\n          className<span class="token operator">=</span><span class="token string">"switch"</span>\n        <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Grid</span>\n          <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>\n          <span class="token attr-name">datasets</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>datasets<span class="token punctuation">}</span></span>\n          <span class="token attr-name">loading</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>loading<span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Demo</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},C.a.createElement(z)),C.a.createElement(V,{title:"Pagination",id:"Demopagination",src:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Grid <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'a very very looooooooonnnnng name\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n    nowrap<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    onCellClick<span class="token punctuation">:</span> data <span class="token operator">=></span> <span class="token punctuation">{</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token string">\'data\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'uv\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'uv\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'uv\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'stock\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token comment">// const pageSize = 5;</span>\n<span class="token comment">// const totalItem = 10;</span>\n\n<span class="token keyword">const</span> datasets <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> datasets2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  datasets<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    id<span class="token punctuation">:</span> <span class="token template-string"><span class="token string">`f-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token template-string"><span class="token string">`Baby Products </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">,</span>\n    uv<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">,</span>\n    stock<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  datasets2<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    id<span class="token punctuation">:</span> <span class="token template-string"><span class="token string">`s-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token template-string"><span class="token string">`Pet Products </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">,</span>\n    uv<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">,</span>\n    stock<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">PageInfo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    current<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    pageSize<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n    total<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n    datasets<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">onChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> current<span class="token punctuation">,</span> pageSize <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      current<span class="token punctuation">,</span>\n      pageSize<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> current<span class="token punctuation">,</span> pageSize<span class="token punctuation">,</span> total <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token operator">&lt;</span>Grid\n        columns<span class="token operator">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span>\n        datasets<span class="token operator">=</span><span class="token punctuation">{</span>current <span class="token operator">===</span> <span class="token number">1</span> <span class="token operator">?</span> datasets <span class="token punctuation">:</span> datasets2<span class="token punctuation">}</span>\n        pageInfo<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          current<span class="token punctuation">:</span> current<span class="token punctuation">,</span>\n          pageSize<span class="token punctuation">:</span> pageSize<span class="token punctuation">,</span>\n          total<span class="token punctuation">:</span> total<span class="token punctuation">,</span>\n          pageSizeOptions<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        onChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>onChange<span class="token punctuation">}</span>\n        ellipsis\n      <span class="token operator">/</span><span class="token operator">></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PageInfo</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},C.a.createElement(T)),C.a.createElement(V,{title:"Selection",id:"Demoselection",src:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Grid<span class="token punctuation">,</span> Notify <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Product Name\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'uv\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'uv\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'stock\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'stock\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> pageSize <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> totalItem <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> datasets <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> datasets2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  datasets<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    id<span class="token punctuation">:</span> <span class="token template-string"><span class="token string">`f-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token template-string"><span class="token string">`Baby Products </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">,</span>\n    uv<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">,</span>\n    stock<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  datasets2<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    id<span class="token punctuation">:</span> <span class="token template-string"><span class="token string">`s-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token template-string"><span class="token string">`Pet Products </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">,</span>\n    uv<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">,</span>\n    stock<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Selection</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    selectedRowKeys<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'f-0\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    datasets<span class="token punctuation">,</span>\n    current<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">onChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> current <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      current<span class="token punctuation">,</span>\n      datasets<span class="token punctuation">:</span> current <span class="token operator">===</span> <span class="token number">1</span> <span class="token operator">?</span> datasets <span class="token punctuation">:</span> datasets2<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token operator">&lt;</span>Grid\n        columns<span class="token operator">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span>\n        datasets<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>datasets<span class="token punctuation">}</span>\n        pageInfo<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          pageSize<span class="token punctuation">:</span> pageSize<span class="token punctuation">,</span>\n          total<span class="token punctuation">:</span> totalItem<span class="token punctuation">,</span>\n          current<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>current<span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        paginationType<span class="token operator">=</span><span class="token string">"lite"</span>\n        selection<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          selectedRowKeys<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>selectedRowKeys<span class="token punctuation">,</span>\n          onSelect<span class="token punctuation">:</span> <span class="token punctuation">(</span>selectedRowKeys<span class="token punctuation">,</span> selectedRows<span class="token punctuation">,</span> currentRow<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>selectedRowKeys<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n              Notify<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">\'你最多选择两个\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n              <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                selectedRowKeys<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>selectedRowKeys<span class="token punctuation">)</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n              <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                selectedRowKeys<span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          getCheckboxProps<span class="token punctuation">:</span> data <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n            disabled<span class="token punctuation">:</span> data<span class="token punctuation">.</span>name <span class="token operator">===</span> <span class="token string">\'Baby Products 1\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        rowKey<span class="token operator">=</span><span class="token string">"id"</span>\n        onChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>onChange<span class="token punctuation">}</span>\n      <span class="token operator">/</span><span class="token operator">></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Selection</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},C.a.createElement(j)),C.a.createElement(V,{title:"Sort",id:"Demosort",src:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Grid <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> assign <span class="token keyword">from</span> <span class="token string">\'lodash/assign\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> datasets <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  datasets<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    id<span class="token punctuation">:</span> i<span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token template-string"><span class="token string">`Product </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">,</span>\n    uv<span class="token punctuation">:</span> i <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">,</span>\n    stock<span class="token punctuation">:</span> i <span class="token operator">*</span> <span class="token number">5</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Product Name\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    needSort<span class="token punctuation">:</span> <span class="token boolean">true</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'uv\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'uv\'</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'stock\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'stock\'</span><span class="token punctuation">,</span>\n    needSort<span class="token punctuation">:</span> <span class="token boolean">true</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n\n<span class="token keyword">class</span> <span class="token class-name">Sort</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function">constructor</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">{</span>\n      datasets<span class="token punctuation">:</span> datasets<span class="token punctuation">,</span>\n      sortBy<span class="token punctuation">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n      sortType<span class="token punctuation">:</span> <span class="token string">\'\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function-variable function">onChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span>conf<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>conf<span class="token punctuation">,</span> <span class="token string">\'conf\'</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> sortType<span class="token punctuation">,</span> sortBy <span class="token punctuation">}</span> <span class="token operator">=</span> conf<span class="token punctuation">;</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> datasets <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>\n    <span class="token keyword">let</span> sortDatasets <span class="token operator">=</span> datasets<span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>sortType <span class="token operator">===</span> <span class="token string">\'asc\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      sortDatasets <span class="token operator">=</span> datasets<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=></span> a<span class="token punctuation">[</span>sortBy<span class="token punctuation">]</span> <span class="token operator">-</span> b<span class="token punctuation">[</span>sortBy<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>sortType <span class="token operator">===</span> <span class="token string">\'desc\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      sortDatasets <span class="token operator">=</span> datasets<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=></span> b<span class="token punctuation">[</span>sortBy<span class="token punctuation">]</span> <span class="token operator">-</span> a<span class="token punctuation">[</span>sortBy<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">,</span> conf<span class="token punctuation">,</span> <span class="token punctuation">{</span> datasets<span class="token punctuation">:</span> sortDatasets <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Grid</span>\n        <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>\n        <span class="token attr-name">datasets</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>datasets<span class="token punctuation">}</span></span>\n        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>onChange<span class="token punctuation">}</span></span>\n        <span class="token attr-name">sortBy</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>sortBy<span class="token punctuation">}</span></span>\n        <span class="token attr-name">sortType</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>sortType<span class="token punctuation">}</span></span>\n      <span class="token punctuation">/></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Sort</span> <span class="token punctuation">/></span></span>\n  <span class="token punctuation">,</span> mountNode\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'},C.a.createElement($)),C.a.createElement(V,{title:"colSpan & rowSpan",id:"Demospan",src:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Grid <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'colSpan &amp; rowSpan\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    colSpan<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n    width<span class="token punctuation">:</span> <span class="token string">\'200px\'</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'subtitle\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'sub\'</span><span class="token punctuation">,</span>\n    colSpan<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n    width<span class="token punctuation">:</span> <span class="token string">\'200px\'</span><span class="token punctuation">,</span>\n    bodyRender<span class="token punctuation">:</span> <span class="token punctuation">(</span>data<span class="token punctuation">,</span> pos<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>data<span class="token punctuation">.</span>sub<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'uv\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'uv\'</span><span class="token punctuation">,</span>\n    bodyRender<span class="token punctuation">:</span> <span class="token punctuation">(</span>data<span class="token punctuation">,</span> pos<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> <span class="token punctuation">{</span> row <span class="token punctuation">}</span>  <span class="token operator">=</span> pos<span class="token punctuation">;</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>row <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token punctuation">{</span>\n          props<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n            rowSpan<span class="token punctuation">:</span> <span class="token number">2</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          children<span class="token punctuation">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>data<span class="token punctuation">.</span>uv<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>row <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token punctuation">{</span>\n          props<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n            rowSpan<span class="token punctuation">:</span> <span class="token number">0</span>\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n      <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>data<span class="token punctuation">.</span>uv<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'stock\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'stock\'</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> datasets <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  datasets<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    id<span class="token punctuation">:</span> i<span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token template-string"><span class="token string">`Product </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">,</span>\n    sub<span class="token punctuation">:</span> <span class="token template-string"><span class="token string">`subtitle </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">,</span>\n    uv<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">,</span>\n    stock<span class="token punctuation">:</span> <span class="token number">5</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Span</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Grid</span>\n        <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>\n        <span class="token attr-name">datasets</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>datasets<span class="token punctuation">}</span></span>\n      <span class="token punctuation">/></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Span</span> <span class="token punctuation">/></span></span>\n  <span class="token punctuation">,</span> mountNode\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'},C.a.createElement(G)),C.a.createElement(V,{title:"Horizontal scroll",id:"DemoscrollX",src:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Grid <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Product Name\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n    fixed<span class="token punctuation">:</span> <span class="token boolean">true</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'uv\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'uv\'</span><span class="token punctuation">,</span>\n    width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n    fixed<span class="token punctuation">:</span> <span class="token boolean">true</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'stock\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'stock\'</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Number of sold products\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'sold_num\'</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Created Time\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'created_time\'</span><span class="token punctuation">,</span>\n    width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n    fixed<span class="token punctuation">:</span> <span class="token string">\'right\'</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> datasets <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  datasets<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    id<span class="token punctuation">:</span> i<span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token template-string"><span class="token string">`Product </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">,</span>\n    uv<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">,</span>\n    stock<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n    sold_num<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n    created_time<span class="token punctuation">:</span> <span class="token string">\'2017-09-20\'</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n      <span class="token operator">&lt;</span>Grid\n        columns<span class="token operator">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span>\n        datasets<span class="token operator">=</span><span class="token punctuation">{</span>datasets<span class="token punctuation">}</span>\n        scroll<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> x<span class="token punctuation">:</span> <span class="token number">1300</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>\n      <span class="token operator">/</span><span class="token operator">></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">,</span> mountNode\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'},C.a.createElement(I)),C.a.createElement(V,{title:"Vertical scroll",id:"DemoscrollY",src:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Grid <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Product Name\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    className<span class="token punctuation">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    width<span class="token punctuation">:</span> <span class="token number">150</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'uv\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'uv\'</span><span class="token punctuation">,</span>\n    width<span class="token punctuation">:</span> <span class="token number">150</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'stock\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'stock\'</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> datasets <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  datasets<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    id<span class="token punctuation">:</span> <span class="token template-string"><span class="token string">`id-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token template-string"><span class="token string">`Product </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">,</span>\n    uv<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">,</span>\n    stock<span class="token punctuation">:</span> <span class="token number">5</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n    <span class="token operator">&lt;</span>Grid\n      columns<span class="token operator">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span>\n      datasets<span class="token operator">=</span><span class="token punctuation">{</span>datasets<span class="token punctuation">}</span>\n      scroll<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> y<span class="token punctuation">:</span> <span class="token number">200</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>\n      rowClassName<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token template-string"><span class="token string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>data<span class="token punctuation">.</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>index<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">}</span>\n      onRowClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> index<span class="token punctuation">,</span> event<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> index<span class="token punctuation">,</span> event<span class="token punctuation">.</span>target<span class="token punctuation">,</span> <span class="token string">\'simple onRowClick\'</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>\n    <span class="token operator">/</span><span class="token operator">></span>\n  <span class="token punctuation">,</span> mountNode\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'},C.a.createElement(B)),C.a.createElement(V,{title:"Horizontal and vertical scroll",id:"DemoscrollXY",src:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Grid <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Product Name\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n    fixed<span class="token punctuation">:</span> <span class="token boolean">true</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'uv\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'uv\'</span><span class="token punctuation">,</span>\n    width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n    fixed<span class="token punctuation">:</span> <span class="token boolean">true</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'stock\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'stock\'</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Number of sold products\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'sold_num\'</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Created Time\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'created_time\'</span><span class="token punctuation">,</span>\n    width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n    fixed<span class="token punctuation">:</span> <span class="token string">\'right\'</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> datasets <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  datasets<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    id<span class="token punctuation">:</span> i<span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token template-string"><span class="token string">`Product </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">,</span>\n    uv<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">,</span>\n    stock<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n    sold_num<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n    created_time<span class="token punctuation">:</span> <span class="token string">\'2017-09-20\'</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n      <span class="token operator">&lt;</span>Grid\n        columns<span class="token operator">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span>\n        datasets<span class="token operator">=</span><span class="token punctuation">{</span>datasets<span class="token punctuation">}</span>\n        scroll<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> x<span class="token punctuation">:</span> <span class="token number">1300</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">200</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>\n      <span class="token operator">/</span><span class="token operator">></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">,</span> mountNode\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'},C.a.createElement(K)),C.a.createElement(V,{title:"Flexible",id:"Demoexpand",src:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Grid <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> datasets <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n  item_id<span class="token punctuation">:</span> <span class="token string">\'5024217\'</span><span class="token punctuation">,</span>\n  bro_uvpv<span class="token punctuation">:</span> <span class="token string">\'0/0\'</span><span class="token punctuation">,</span>\n  stock_num<span class="token punctuation">:</span> <span class="token string">\'60\'</span><span class="token punctuation">,</span>\n  sold_num<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  item_id<span class="token punctuation">:</span> <span class="token string">\'5024277\'</span><span class="token punctuation">,</span>\n  bro_uvpv<span class="token punctuation">:</span> <span class="token string">\'0/0\'</span><span class="token punctuation">,</span>\n  stock_num<span class="token punctuation">:</span> <span class="token number">59</span><span class="token punctuation">,</span>\n  sold_num<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  item_id<span class="token punctuation">:</span> <span class="token string">\'13213123\'</span><span class="token punctuation">,</span>\n  bro_uvpv<span class="token punctuation">:</span> <span class="token string">\'0/0\'</span><span class="token punctuation">,</span>\n  stock_num<span class="token punctuation">:</span> <span class="token number">159</span><span class="token punctuation">,</span>\n  sold_num<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n  title<span class="token punctuation">:</span> <span class="token string">\'Product\'</span><span class="token punctuation">,</span>\n  width<span class="token punctuation">:</span> <span class="token string">\'50px\'</span><span class="token punctuation">,</span>\n  fixed<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  bodyRender<span class="token punctuation">:</span> <span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>data<span class="token punctuation">.</span>item_id<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  title<span class="token punctuation">:</span> <span class="token string">\'PV\'</span><span class="token punctuation">,</span>\n  name<span class="token punctuation">:</span> <span class="token string">\'bro_uvpv\'</span><span class="token punctuation">,</span>\n  width<span class="token punctuation">:</span> <span class="token string">\'100px\'</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  title<span class="token punctuation">:</span> <span class="token string">\'Stock\'</span><span class="token punctuation">,</span>\n  name<span class="token punctuation">:</span> <span class="token string">\'stock_num\'</span><span class="token punctuation">,</span>\n  width<span class="token punctuation">:</span> <span class="token string">\'100px\'</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  title<span class="token punctuation">:</span> <span class="token string">\'Sales\'</span><span class="token punctuation">,</span>\n  name<span class="token punctuation">:</span> <span class="token string">\'sold_num\'</span><span class="token punctuation">,</span>\n  fixed<span class="token punctuation">:</span> <span class="token string">\'right\'</span>\n<span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">RowClass</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function">constructor</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">{</span>\n      limit<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n      current<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n      total<span class="token punctuation">:</span> <span class="token number">101</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">getRowConf</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      canSelect<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">onChange</span><span class="token punctuation">(</span>conf<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span>conf<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function-variable function">onExpand</span> <span class="token operator">=</span> <span class="token punctuation">(</span>conf<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>conf<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token operator">&lt;</span>Grid\n        columns<span class="token operator">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span>\n        datasets<span class="token operator">=</span><span class="token punctuation">{</span>datasets<span class="token punctuation">}</span>\n        onChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>onChange<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n        getRowConf<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>getRowConf<span class="token punctuation">}</span>\n        rowKey<span class="token operator">=</span><span class="token string">"item_id"</span>\n        scroll<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> x<span class="token punctuation">:</span> <span class="token number">1300</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        expandation<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          <span class="token function">isExpanded</span><span class="token punctuation">(</span>record<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token punctuation">(</span>index <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token function">expandRender</span><span class="token punctuation">(</span>record<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token punctuation">(</span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n                <span class="token punctuation">{</span>record<span class="token punctuation">.</span>item_id<span class="token punctuation">}</span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n            <span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        onExpand<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>onExpand<span class="token punctuation">}</span>\n      <span class="token operator">/</span><span class="token operator">></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RowClass</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n  mountNode\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'},C.a.createElement(O)),C.a.createElement(V,{title:"Empty grid",id:"Demoempty",src:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Grid <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'Product Name\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    className<span class="token punctuation">:</span> <span class="token string">\'name\'</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'uv\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'uv\'</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'stock\'</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'stock\'</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n    <span class="token operator">&lt;</span>Grid\n      columns<span class="token operator">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span>\n      datasets<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span>\n      rowClassName<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token template-string"><span class="token string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>data<span class="token punctuation">.</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>index<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">}</span>\n      onRowClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> index<span class="token punctuation">,</span> event<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> index<span class="token punctuation">,</span> event<span class="token punctuation">.</span>target<span class="token punctuation">,</span> <span class="token string">\'simple onRowClick\'</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>\n    <span class="token operator">/</span><span class="token operator">></span>\n  <span class="token punctuation">,</span> mountNode\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'},C.a.createElement(M)),C.a.createElement(V,{title:"Drop sort",id:"Demodrop",src:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Grid <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> ReactDOM <span class="token keyword">from</span> <span class="token string">\'react-dom\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> DragDropContext<span class="token punctuation">,</span> Droppable<span class="token punctuation">,</span> Draggable <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react-beautiful-dnd\'</span><span class="token punctuation">;</span> <span class="token comment">// 建议此库的版本大于 9.0.0</span>\n\n<span class="token keyword">const</span> datasets <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  datasets<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    id<span class="token punctuation">:</span> <span class="token template-string"><span class="token string">`f-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token template-string"><span class="token string">`Baby Products </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">,</span>\n    uv<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">,</span>\n    stock<span class="token punctuation">:</span> <span class="token number">5</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">reorder</span> <span class="token operator">=</span> <span class="token punctuation">(</span>list<span class="token punctuation">,</span> startIndex<span class="token punctuation">,</span> endIndex<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> result <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token keyword">from</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>removed<span class="token punctuation">]</span> <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>startIndex<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  result<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>endIndex<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> removed<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> result<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">BodyRow</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function">getItemStyle</span><span class="token punctuation">(</span>isDragging<span class="token punctuation">,</span> draggableStyle<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> style <span class="token operator">=</span> <span class="token punctuation">{</span>\n      <span class="token operator">...</span>draggableStyle\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">if</span><span class="token punctuation">(</span>isDragging<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      style<span class="token punctuation">.</span>display  <span class="token operator">=</span> <span class="token string">\'table\'</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">return</span> style<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Draggable</span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>id<span class="token punctuation">}</span></span> <span class="token attr-name">draggableId</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>id<span class="token punctuation">}</span></span> <span class="token attr-name">index</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>index<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n      <span class="token punctuation">{</span><span class="token punctuation">(</span>provided<span class="token punctuation">,</span> snapshot<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span>tr\n          <span class="token punctuation">{</span><span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">}</span>\n          ref<span class="token operator">=</span><span class="token punctuation">{</span>provided<span class="token punctuation">.</span>innerRef<span class="token punctuation">}</span>\n          <span class="token punctuation">{</span><span class="token operator">...</span>provided<span class="token punctuation">.</span>draggableProps<span class="token punctuation">}</span>\n          <span class="token punctuation">{</span><span class="token operator">...</span>provided<span class="token punctuation">.</span>dragHandleProps<span class="token punctuation">}</span>\n          style<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getItemStyle</span><span class="token punctuation">(</span>\n            snapshot<span class="token punctuation">.</span>isDragging<span class="token punctuation">,</span>\n            provided<span class="token punctuation">.</span>draggableProps<span class="token punctuation">.</span>style\n          <span class="token punctuation">)</span><span class="token punctuation">}</span>\n        <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">}</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Draggable</span><span class="token punctuation">></span></span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Drap</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function">constructor</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">{</span>\n      datasets\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      title<span class="token punctuation">:</span> <span class="token string">\'Product Name\'</span><span class="token punctuation">,</span>\n      name<span class="token punctuation">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n      className<span class="token punctuation">:</span> <span class="token string">\'name\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n      title<span class="token punctuation">:</span> <span class="token string">\'uv\'</span><span class="token punctuation">,</span>\n      name<span class="token punctuation">:</span> <span class="token string">\'uv\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n      title<span class="token punctuation">:</span> <span class="token string">\'stock\'</span><span class="token punctuation">,</span>\n      name<span class="token punctuation">:</span> <span class="token string">\'stock\'</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span>\n\n  components <span class="token operator">=</span> <span class="token punctuation">{</span>\n    row<span class="token punctuation">:</span> BodyRow\n  <span class="token punctuation">}</span>\n\n  <span class="token function-variable function">onDragEnd</span> <span class="token operator">=</span> <span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>result<span class="token punctuation">.</span>destination<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">const</span> datasets <span class="token operator">=</span> <span class="token function">reorder</span><span class="token punctuation">(</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>datasets<span class="token punctuation">,</span>\n      result<span class="token punctuation">.</span>source<span class="token punctuation">.</span>index<span class="token punctuation">,</span>\n      result<span class="token punctuation">.</span>destination<span class="token punctuation">.</span>index\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>datasets<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>datasets<span class="token punctuation">,</span> <span class="token string">\'-------\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      datasets<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DragDropContext</span> <span class="token attr-name">onDragEnd</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>onDragEnd<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Droppable</span> <span class="token attr-name">droppableId</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>droppable<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token punctuation">{</span><span class="token punctuation">(</span>provided<span class="token punctuation">,</span> snapshot<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>provided<span class="token punctuation">.</span>innerRef<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n              <span class="token operator">&lt;</span>Grid\n                columns<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>columns<span class="token punctuation">}</span>\n                datasets<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>datasets<span class="token punctuation">}</span>\n                components<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>components<span class="token punctuation">}</span>\n                className<span class="token operator">=</span><span class="token string">"drop-grid"</span>\n                rowProps<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n                  id<span class="token punctuation">:</span> data<span class="token punctuation">.</span>id<span class="token punctuation">,</span>\n                  index\n                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n              <span class="token operator">/</span><span class="token operator">></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n          <span class="token punctuation">)</span><span class="token punctuation">}</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Droppable</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DragDropContext</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Drap</span> <span class="token punctuation">/></span></span>\n  <span class="token punctuation">,</span> mountNode\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'},C.a.createElement(A)),C.a.createElement(V,{title:"Header Group",id:"DemoheaderGroup",src:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Grid <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> datasets <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">19</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  datasets<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    id<span class="token punctuation">:</span> <span class="token template-string"><span class="token string">`id-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token template-string"><span class="token string">`Product </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">,</span>\n    type<span class="token punctuation">:</span> <span class="token template-string"><span class="token string">`type-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">,</span>\n    company<span class="token punctuation">:</span> <span class="token template-string"><span class="token string">`company-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">,</span>\n    phone<span class="token punctuation">:</span> <span class="token template-string"><span class="token string">`123342345</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">,</span>\n    stock<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n    createdTime<span class="token punctuation">:</span> <span class="token string">\'2018-12-11\'</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">HeaderGroup</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    datasets\n  <span class="token punctuation">}</span>\n\n  <span class="token function-variable function">getColumns</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        title<span class="token punctuation">:</span> <span class="token string">\'Product Name\'</span><span class="token punctuation">,</span>\n        name<span class="token punctuation">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n        className<span class="token punctuation">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n        width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n        fixed<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        title<span class="token punctuation">:</span> <span class="token string">\'Product Info\'</span><span class="token punctuation">,</span>\n        name<span class="token punctuation">:</span> <span class="token string">\'productInfo\'</span><span class="token punctuation">,</span>\n        children<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            title<span class="token punctuation">:</span> <span class="token string">\'Type\'</span><span class="token punctuation">,</span>\n            name<span class="token punctuation">:</span> <span class="token string">\'type\'</span><span class="token punctuation">,</span>\n            width<span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            title<span class="token punctuation">:</span> <span class="token string">\'Supplier\'</span><span class="token punctuation">,</span>\n            name<span class="token punctuation">:</span> <span class="token string">\'supplier\'</span><span class="token punctuation">,</span>\n            children<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n              <span class="token punctuation">{</span>\n                title<span class="token punctuation">:</span> <span class="token string">\'Company\'</span><span class="token punctuation">,</span>\n                name<span class="token punctuation">:</span> <span class="token string">\'company\'</span><span class="token punctuation">,</span>\n                width<span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n              <span class="token punctuation">{</span>\n                title<span class="token punctuation">:</span> <span class="token string">\'Phone\'</span><span class="token punctuation">,</span>\n                name<span class="token punctuation">:</span> <span class="token string">\'phone\'</span><span class="token punctuation">,</span>\n                width<span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">]</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        title<span class="token punctuation">:</span> <span class="token string">\'Stock\'</span><span class="token punctuation">,</span>\n        name<span class="token punctuation">:</span> <span class="token string">\'stock\'</span><span class="token punctuation">,</span>\n        defaultText<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        title<span class="token punctuation">:</span> <span class="token string">\'Created Time\'</span><span class="token punctuation">,</span>\n        name<span class="token punctuation">:</span> <span class="token string">\'createdTime\'</span><span class="token punctuation">,</span>\n        width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n        needSort<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        fixed<span class="token punctuation">:</span> <span class="token string">\'right\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function-variable function">onChange</span> <span class="token operator">=</span> conf <span class="token operator">=></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>conf<span class="token punctuation">,</span> <span class="token string">\'conf\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token operator">...</span>conf\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> sortBy<span class="token punctuation">,</span> sortType <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token operator">&lt;</span>Grid\n        columns<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getColumns</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n        datasets<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>datasets<span class="token punctuation">}</span>\n        rowClassName<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token template-string"><span class="token string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>data<span class="token punctuation">.</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>index<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">}</span>\n        bordered\n        scroll<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> x<span class="token punctuation">:</span> <span class="token number">1400</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">400</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        sortBy<span class="token operator">=</span><span class="token punctuation">{</span>sortBy<span class="token punctuation">}</span>\n        sortType<span class="token operator">=</span><span class="token punctuation">{</span>sortType<span class="token punctuation">}</span>\n        rowKey<span class="token operator">=</span><span class="token string">"id"</span>\n        onChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>onChange<span class="token punctuation">}</span>\n      <span class="token operator">/</span><span class="token operator">></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>HeaderGroup</span> <span class="token punctuation">/></span></span>\n  <span class="token punctuation">,</span> mountNode\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'},C.a.createElement(H)),C.a.createElement(Y,{html:'<h3 class="anchor-heading"><a href="#api">¶</a><a href="javascript:void(0)" id="api" class="anchor-point"></a>API</h3>\n<table class="table">\n<thead>\n<tr>\n<th>Property</th>\n<th>Descripition</th>\n<th>Type</th>\n<th>Default</th>\n<th>Required</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>columns</td>\n<td>columns</td>\n<td>array</td>\n<td></td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>datasets</td>\n<td>data to be displayed</td>\n<td>array</td>\n<td></td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>rowKey</td>\n<td>key for each row</td>\n<td>string</td>\n<td><code>id</code></td>\n<td>No</td>\n</tr>\n<tr>\n<td>onChange</td>\n<td>callback fires when columns change, filtering and sorting included</td>\n<td>(conf: any) => any</td>\n<td><code>noop</code></td>\n<td>No</td>\n</tr>\n<tr>\n<td>scroll</td>\n<td>can be scrolled in x/y direction, x or y can be a number that indicates the width and height of table body</td>\n<td>{ x?: number, y?: number }</td>\n<td></td>\n<td>No</td>\n</tr>\n<tr>\n<td>sortBy</td>\n<td>the field which rows are sorted accoring to, should be one of keys for columns</td>\n<td>string</td>\n<td>\'\'</td>\n<td>No</td>\n</tr>\n<tr>\n<td>sortType</td>\n<td>The way to sort</td>\n<td>string</td>\n<td>\'\'</td>\n<td>No</td>\n</tr>\n<tr>\n<td>emptyLabel</td>\n<td>Text to be displayed when there\'s no data</td>\n<td>string</td>\n<td><code>\'No data\'</code></td>\n<td>No</td>\n</tr>\n<tr>\n<td>selection</td>\n<td>the configuration for selection</td>\n<td>object</td>\n<td></td>\n<td>No</td>\n</tr>\n<tr>\n<td>expandation</td>\n<td>Expand configuration</td>\n<td>object</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>loading</td>\n<td>determines whether data is being loaded or not</td>\n<td>bool</td>\n<td><code>false</code></td>\n<td>No</td>\n</tr>\n<tr>\n<td>className</td>\n<td>extra custom class name</td>\n<td>string</td>\n<td><code>\'\'</code></td>\n<td>No</td>\n</tr>\n<tr>\n<td>rowClassName</td>\n<td>class name for row</td>\n<td>string \n|\n (data: object, rowIndex: number) => string</td>\n<td>\'\'</td>\n<td>No</td>\n</tr>\n<tr>\n<td>prefix</td>\n<td>custom prefix</td>\n<td>string</td>\n<td><code>\'zent\'</code></td>\n<td>No</td>\n</tr>\n<tr>\n<td>pageInfo</td>\n<td>pagination information</td>\n<td>object</td>\n<td>null</td>\n<td>No</td>\n</tr>\n<tr>\n<td>paginationType</td>\n<td>Pagination type, \n<code>\'default\'</code>\n \n|\n \n<code>\'lite\'</code></td>\n<td>string</td>\n<td><code>\'default\'</code></td>\n<td>No</td>\n</tr>\n<tr>\n<td>onRowClick</td>\n<td>callback fires when a row is clicked</td>\n<td>(data: any, index: number, event: Event) => any</td>\n<td></td>\n<td>No</td>\n</tr>\n<tr>\n<td>ellipsis</td>\n<td>whether ellipsis should be displayed when content overflows (nowrap of columns needs to be set)</td>\n<td>bool</td>\n<td>false</td>\n<td>No</td>\n</tr>\n<tr>\n<td>onExpand</td>\n<td>callback fires when the row expand icon is clicked</td>\n<td>(data: {expanded: boolean, data: any, event: Event, index: number}) => any</td>\n<td></td>\n<td>No</td>\n</tr>\n<tr>\n<td>components</td>\n<td>custom table element</td>\n<td>object { row?: ReactNode }</td>\n<td></td>\n<td>No</td>\n</tr>\n<tr>\n<td>rowProps</td>\n<td>custom row props</td>\n<td>(data: any, index: number) => object</td>\n<td></td>\n<td>No</td>\n</tr>\n<tr>\n<td>bordered</td>\n<td>whether to display the outer border and column border</td>\n<td>bool</td>\n<td><code>false</code></td>\n<td>No</td>\n</tr>\n</tbody>\n</table>\n<h4 class="anchor-heading"><a href="#onchange-function-declaration">¶</a><a href="javascript:void(0)" id="onchange-function-declaration" class="anchor-point"></a>onChange function declaration</h4>\n<p>onChange will throw an object, which includes parameters about the change part of pagination.</p>\n<pre><code class="language-js"><span class="token punctuation">{</span>\n  current<span class="token punctuation">,</span> <span class="token comment">// {Number} the current page</span>\n  sortBy<span class="token punctuation">,</span> <span class="token comment">// {String} the key which rows are sorted according to</span>\n  sortType<span class="token punctuation">,</span> <span class="token comment">// {String} [\'asc\', \'desc\', \'\'] the way to sort</span>\n  pageSize<span class="token punctuation">,</span> <span class="token comment">// {Number} page size</span>\n<span class="token punctuation">}</span></code></pre>\n<h4 class="anchor-heading"><a href="#columns">¶</a><a href="javascript:void(0)" id="columns" class="anchor-point"></a>columns</h4>\n<table class="table">\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Required</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>title</td>\n<td>column title</td>\n<td>ReactNode</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>name</td>\n<td>key for the corresponding data(recommanded to be set). Nested description like \n<code>a.b.c</code>\n is supported</td>\n<td>string</td>\n<td>No</td>\n</tr>\n<tr>\n<td>width</td>\n<td>column width</td>\n<td>string \n|\n number</td>\n<td>No</td>\n</tr>\n<tr>\n<td>bodyRender</td>\n<td>Render complex component</td>\n<td>((data: any, pos: {row: number, column: number, fixed?: \'left\' \n|\n \'right\'}, name: string) => ReactNode) \n|\n ReactNode</td>\n<td>No</td>\n</tr>\n<tr>\n<td>className</td>\n<td>class name of the column title</td>\n<td>string</td>\n<td>No</td>\n</tr>\n<tr>\n<td>needSort</td>\n<td>whether to support sorting</td>\n<td>bool</td>\n<td>No</td>\n</tr>\n<tr>\n<td>colSpan</td>\n<td>span of columns. It won\'t be rendered if the value is set to 0</td>\n<td>number</td>\n<td>No</td>\n</tr>\n<tr>\n<td>fixed</td>\n<td>whether columns fixed or not. The value can be \n<code>left</code>\n \n<code>right</code>\n \n<code>true</code>\n (\n<code>true</code>\n is same to \n<code>left</code>\n)</td>\n<td>bool \n|\n strig</td>\n<td>No</td>\n</tr>\n<tr>\n<td>onCellClick</td>\n<td>callback fires when a cell is clicked</td>\n<td>(data: any, event: Event) => any</td>\n<td>No</td>\n</tr>\n<tr>\n<td>textAlign</td>\n<td>Text alignment</td>\n<td>string</td>\n<td>No</td>\n</tr>\n<tr>\n<td>nowrap</td>\n<td>whether to wrap, true by default</td>\n<td>bool</td>\n<td>No</td>\n</tr>\n<tr>\n<td>defaultText</td>\n<td>default display text</td>\n<td>ReactNode</td>\n<td>No</td>\n</tr>\n<tr>\n<td>children</td>\n<td>render grouping table headers</td>\n<td>array</td>\n<td>No</td>\n</tr>\n</tbody>\n</table>\n<h4 class="anchor-heading"><a href="#selection">¶</a><a href="javascript:void(0)" id="selection" class="anchor-point"></a>selection</h4>\n<table class="table">\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Required</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>selectedRowKeys</td>\n<td>keys of selected rows by default</td>\n<td>array</td>\n<td>No</td>\n</tr>\n<tr>\n<td>onSelect</td>\n<td>callback fires when a check changes</td>\n<td>(selectedkeys: string, selectedRows: Array\n, currentRow: number) => any</td>\n<td>No</td>\n</tr>\n<tr>\n<td>getCheckboxProps</td>\n<td>function to get properties of the checkbox</td>\n<td>(data: object) => { disabled?: boolean }</td>\n<td>No</td>\n</tr>\n</tbody>\n</table>\n<h4 class="anchor-heading"><a href="#pageinfo">¶</a><a href="javascript:void(0)" id="pageinfo" class="anchor-point"></a>pageInfo</h4>\n<table class="table">\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Required</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>total</td>\n<td>Total number of items</td>\n<td>number</td>\n<td>No</td>\n</tr>\n<tr>\n<td>pageSize</td>\n<td>Number of items to be displayed per page</td>\n<td>number</td>\n<td>No</td>\n</tr>\n<tr>\n<td>pageSizeOptions</td>\n<td>Page size options</td>\n<td>number[]</td>\n<td>No</td>\n</tr>\n<tr>\n<td>current</td>\n<td>current page</td>\n<td>number</td>\n<td>No</td>\n</tr>\n</tbody>\n</table>\n<h3 class="anchor-heading"><a href="#expandation">¶</a><a href="javascript:void(0)" id="expandation" class="anchor-point"></a>expandation</h3>\n<table class="table">\n<thead>\n<tr>\n<th>Props</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n<th>Required</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>isExpanded</td>\n<td>Whether to expand the current row</td>\n<td>(record: any, index: number) => boolean</td>\n<td></td>\n<td>no</td>\n</tr>\n<tr>\n<td>expandRender</td>\n<td>Render function of expanded row\'s additional content</td>\n<td>(data: any) => ReactNode</td>\n<td></td>\n<td>no</td>\n</tr>\n</tbody>\n</table>'}))}}]),s}(N.Component)}}]);