(self.webpackChunkzent_docs=self.webpackChunkzent_docs||[]).push([[7950],{37950:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>q});var t=a(73118),p=a(73450),o=a(27378),e=a(57318),c=a(28627),l=a(56377),u=a(96681),i=a(23476),k=a(80964),r=a(62640),d=a(71457),m=(a(31542),a(42694)),g=a(24246);function y(n,s){var a=Object.keys(n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(n);s&&(t=t.filter((function(s){return Object.getOwnPropertyDescriptor(n,s).enumerable}))),a.push.apply(a,t)}return a}function h(n){for(var s=1;s<arguments.length;s++){var a=null!=arguments[s]?arguments[s]:{};s%2?y(Object(a),!0).forEach((function(s){(0,p.Z)(n,s,a[s])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(a)):y(Object(a)).forEach((function(s){Object.defineProperty(n,s,Object.getOwnPropertyDescriptor(a,s))}))}return n}var w=function(){for(var n=[],s=0;s<3;s++)n.push({id:"id-".concat(s),name:"Product ".concat(s),uv:20,stock:s>1?5:null});return(0,g.jsx)(c.r,{columns:[{title:"Product Name",name:"name",className:"name"},{title:"uv",name:"uv"},{title:"stock",name:"stock",defaultText:0}],datasets:n,rowClassName:(n,s)=>"".concat(n.id,"-").concat(s),onRowClick:(n,s,a)=>{}})},f=function(){for(var n=[{title:"a very very looooooooonnnnng name",name:"name",width:100,noWrap:!0},{title:"right alignment",name:"uv",textAlign:"right",width:300},{title:"big size",name:"stock"}],s=[],a=0;a<3;a++)s.push({id:a,name:"Product ".concat(a),uv:20,stock:5});class t extends o.Component{constructor(...n){super(...n),(0,p.Z)(this,"state",{loading:!0})}render(){return(0,g.jsxs)("div",{children:[(0,g.jsx)(l.r,{onChange:n=>this.setState({loading:n}),checked:this.state.loading,size:"small",className:"switch"}),(0,g.jsx)(c.r,{columns:n,datasets:s,loading:this.state.loading})]})}}return(0,g.jsx)(t,{})},b=function(){for(var n=[{title:"a very very looooooooonnnnng name",name:"name",width:100,noWrap:!0,onCellClick:n=>{}},{title:"uv",name:"uv"},{title:"uv",name:"stock"}],s=[],a=[],t=0;t<5;t++)s.push({id:"f-".concat(t),name:"Baby Products ".concat(t),uv:20,stock:5}),a.push({id:"s-".concat(t),name:"Pet Products ".concat(t),uv:20,stock:5});class e extends o.Component{constructor(...n){super(...n),(0,p.Z)(this,"state",{current:1,pageSize:5,total:10,datasets:s}),(0,p.Z)(this,"onChange",(({current:n,pageSize:s})=>{this.setState({current:n,pageSize:s})}))}render(){var t=this.state,p=t.current,o=t.pageSize,e=t.total;return(0,g.jsx)(c.r,{columns:n,datasets:1===p?s:a,pageInfo:{current:p,pageSize:o,total:e,pageSizeOptions:[5,10]},onChange:this.onChange,ellipsis:!0})}}return(0,g.jsx)(e,{})},v=function(){for(var n=[{title:"Product Name",name:"name"},{title:"uv",name:"uv"},{title:"stock",name:"stock"}],s=[],a=[],t=0;t<5;t++)s.push({id:"f-".concat(t),name:"Baby Products ".concat(t),uv:20,stock:5}),a.push({id:"s-".concat(t),name:"Pet Products ".concat(t),uv:20,stock:5});class e extends o.Component{constructor(...n){super(...n),(0,p.Z)(this,"state",{selectedRowKeys:["f-0"],datasets:s,current:1,showSelection:!0,isSingle:!1}),(0,p.Z)(this,"onChange",(({current:n})=>{this.setState({current:n,datasets:1===n?s:a})})),(0,p.Z)(this,"toggleSelection",(()=>{this.setState({showSelection:!this.state.showSelection})})),(0,p.Z)(this,"toggleSelectionMode",(()=>{this.setState({isSingle:!this.state.isSingle,selectedRowKeys:[this.state.selectedRowKeys[0]]})}))}render(){return(0,g.jsxs)(g.Fragment,{children:[(0,g.jsx)(u.z,{onClick:this.toggleSelection,style:{marginBottom:12},children:this.state.showSelection?"Hide":"Show"}),this.state.showSelection&&(0,g.jsx)(u.z,{onClick:this.toggleSelectionMode,style:{marginBottom:12},children:this.state.isSingle?"To multiple mode":"To single mode"}),(0,g.jsx)(c.r,{columns:n,datasets:this.state.datasets,pageInfo:{pageSize:5,total:10,current:this.state.current},paginationType:"lite",selection:this.state.showSelection?{selectedRowKeys:this.state.selectedRowKeys,isSingleSelection:this.state.isSingle,onSelect:(n,s,a)=>{n.length>2?(i.g.error("You can choose up to two"),this.setState({selectedRowKeys:[].concat(this.state.selectedRowKeys)})):this.setState({selectedRowKeys:n})},getSelectionProps:n=>({disabled:"Baby Products 1"===n.name,reason:"Reason of disabled"})}:void 0,rowKey:"id",onChange:this.onChange})]})}}return(0,g.jsx)(e,{})},x=function(){for(var n=[{title:"Product Name",name:"name"},{title:"uv",name:"uv"},{title:"stock",name:"stock"}],s=[],a=[],t=0;t<5;t++)s.push({id:"f-".concat(t),name:"Baby Products ".concat(t),uv:20,stock:5}),a.push({id:"s-".concat(t),name:"Pet Products ".concat(t),uv:20,stock:5});class e extends o.Component{constructor(...n){super(...n),(0,p.Z)(this,"state",{selectedRowKeys:["f-0"],datasets:s,current:1}),(0,p.Z)(this,"onChange",(({current:n})=>{this.setState({current:n,datasets:1===n?s:a})}))}render(){return(0,g.jsx)(c.r,{columns:n,datasets:this.state.datasets,pageInfo:{pageSize:5,total:10,current:this.state.current},paginationType:"lite",selection:{isSingleSelection:!0,selectedRowKeys:this.state.selectedRowKeys,onSelect:(n,s,a)=>{i.g.success("当前选中：".concat(JSON.stringify(a),"\n            selectedRows: ").concat(JSON.stringify(s),"\n            ")),this.setState({selectedRowKeys:n})},getSelectionProps:n=>({disabled:"Baby Products 1"===n.name,reason:"Reason of disabled"})},rowKey:"id",onChange:this.onChange})}}return(0,g.jsx)(e,{})},S=function(){for(var n=[],s=0;s<3;s++)n.push({id:s,name:"Product ".concat(s),uv:10*s,stock:5*s});var a=[{title:"Product Name",name:"name",needSort:!0},{title:"uv",name:"uv"},{title:"stock",name:"stock",needSort:!0}];class t extends o.Component{constructor(s){super(s),(0,p.Z)(this,"onChange",(n=>{var s=n.sortType,a=n.sortBy,t=this.state.datasets,p=t;"asc"===s?p=t.sort(((n,s)=>n[a]-s[a])):"desc"===s&&(p=t.sort(((n,s)=>s[a]-n[a]))),this.setState(h(h({},n),{},{datasets:p}))})),this.state={datasets:n,sortBy:"name",sortType:""}}render(){return(0,g.jsx)(c.r,{columns:a,datasets:this.state.datasets,onChange:this.onChange,sortBy:this.state.sortBy,sortType:this.state.sortType})}}return(0,g.jsx)(t,{})},j=function(){for(var n=[{title:"colSpan & rowSpan",name:"name",colSpan:2,width:"200px"},{title:"subtitle",name:"sub",colSpan:0,width:"200px",bodyRender:(n,s)=>(0,g.jsx)("span",{children:n.sub})},{title:"uv",name:"uv",bodyRender:(n,s)=>{var a=s.row;return a%2==0?{props:{rowSpan:2},children:(0,g.jsx)("span",{children:n.uv})}:a%2!=0?{props:{rowSpan:0}}:(0,g.jsx)("span",{children:n.uv})}},{title:"stock",name:"stock"}],s=[],a=0;a<6;a++)s.push({id:a,name:"Product ".concat(a),sub:"subtitle ".concat(a),uv:20,stock:5});class t extends o.Component{render(){return(0,g.jsx)(c.r,{columns:n,datasets:s})}}return(0,g.jsx)(t,{})},C=function(){for(var n=[{title:"Product Name",name:"name",width:100,fixed:!0},{title:"uv",name:"uv",width:100,fixed:!0},{title:"stock",name:"stock"},{title:"Number of sold products",name:"sold_num"},{title:"Created Time",name:"created_time",width:100,fixed:"right"}],s=[],a=0;a<3;a++)s.push({id:a,name:"Product ".concat(a),uv:20,stock:5,sold_num:5,created_time:"2017-09-20"});function p(){var a=o.useState(1300),p=(0,t.Z)(a,2),e=p[0],l=p[1];return(0,g.jsxs)("div",{children:[(0,g.jsx)(k.Y,{value:e,onChange:l,integer:!0,addonAfter:"px",style:{marginBottom:16}}),(0,g.jsx)(c.r,{columns:n,datasets:s,scroll:{x:e}})]})}return(0,g.jsx)(p,{})},N=function(){for(var n=[],s=0;s<5;s++)n.push({id:"id-".concat(s),name:"Product ".concat(s),uv:20,stock:5});return(0,g.jsx)(c.r,{columns:[{title:"Product Name",name:"name",className:"name",width:150},{title:"uv",name:"uv",width:150},{title:"stock",name:"stock"}],datasets:n,scroll:{y:200},rowClassName:(n,s)=>"".concat(n.id,"-").concat(s),onRowClick:(n,s,a)=>{}})},R=function(){for(var n=[],s=0;s<5;s++)n.push({id:s,name:"Product ".concat(s),uv:20,stock:5,sold_num:5,created_time:"2017-09-20"});return(0,g.jsx)("div",{children:(0,g.jsx)(c.r,{columns:[{title:"Product Name",name:"name",width:100,fixed:!0},{title:"uv",name:"uv",width:100,fixed:!0},{title:"stock",name:"stock"},{title:"Number of sold products",name:"sold_num"},{title:"Created Time",name:"created_time",width:100,fixed:"right"}],datasets:n,scroll:{x:1300,y:200}})})},P=function(){var n=[{item_id:"5024217",bro_uvpv:"0/0",stock_num:"60",sold_num:0},{item_id:"5024277",bro_uvpv:"0/0",stock_num:59,sold_num:0},{item_id:"13213123",bro_uvpv:"0/0",stock_num:159,sold_num:0}],s=[{title:"Product",width:"50px",fixed:!0,bodyRender:n=>(0,g.jsx)("div",{children:n.item_id})},{title:"PV",name:"bro_uvpv",width:"100px"},{title:"Stock",name:"stock_num",width:"100px"},{title:"Sales",name:"sold_num",fixed:"right"}];class a extends o.Component{constructor(n){super(n),(0,p.Z)(this,"onExpand",(n=>{})),this.state={limit:10,current:0,total:101}}getRowConf(n,s){return{canSelect:!0}}onChange(n){this.setState(n)}render(){return(0,g.jsx)(c.r,{columns:s,datasets:n,onChange:this.onChange.bind(this),getRowConf:this.getRowConf,rowKey:"item_id",scroll:{x:1300},expandation:{isExpanded:(n,s)=>s%2==0,expandRender:n=>(0,g.jsx)("div",{children:n.item_id})},onExpand:this.onExpand})}}return(0,g.jsx)(a,{})},z=function(){return(0,g.jsx)(c.r,{columns:[{title:"Product Name",name:"name",className:"name"},{title:"uv",name:"uv"},{title:"stock",name:"stock"}],datasets:[],rowClassName:(n,s)=>"".concat(n.id,"-").concat(s),onRowClick:(n,s,a)=>{}})},D=function(){for(var n=[],s=0;s<5;s++)n.push({id:"f-".concat(s),name:"Baby Products ".concat(s),uv:20,stock:5});class a extends o.Component{getItemStyle(n,s){var a=h({},s);return n&&(a.display="table"),a}render(){return(0,g.jsx)(m._l,{draggableId:this.props.id,index:this.props.index,children:(n,s)=>(0,g.jsx)("tr",h(h(h(h({},this.props),{},{ref:n.innerRef},n.draggableProps),n.dragHandleProps),{},{style:this.getItemStyle(s.isDragging,n.draggableProps.style)}))},this.props.id)}}class e extends o.Component{constructor(s){super(s),(0,p.Z)(this,"columns",[{title:"Product Name",name:"name",className:"name"},{title:"uv",name:"uv"},{title:"stock",name:"stock"}]),(0,p.Z)(this,"components",{row:a}),(0,p.Z)(this,"onDragEnd",(n=>{if(n.destination){var s=((n,s,a)=>{var p=Array.from(n),o=p.splice(s,1),e=(0,t.Z)(o,1)[0];return p.splice(a,0,e),p})(this.state.datasets,n.source.index,n.destination.index);this.setState({datasets:s})}})),this.state={datasets:n}}render(){return(0,g.jsx)(m.Z5,{onDragEnd:this.onDragEnd,children:(0,g.jsx)(m.bK,{droppableId:"droppable",children:(n,s)=>(0,g.jsx)("div",{ref:n.innerRef,children:(0,g.jsx)(c.r,{columns:this.columns,datasets:this.state.datasets,components:this.components,className:"drop-grid",rowProps:(n,s)=>({id:n.id,index:s})})})})})}}return(0,g.jsx)(e,{})},_=function(){for(var n=[],s=0;s<19;s++)n.push({id:"id-".concat(s),name:"Product ".concat(s),type:"type-".concat(s),company:"company-".concat(s),phone:"123342345".concat(s),stock:5,createdTime:"2018-12-11"});class a extends o.Component{constructor(...s){super(...s),(0,p.Z)(this,"state",{datasets:n}),(0,p.Z)(this,"getColumns",(()=>[{title:"Product Name",name:"name",className:"name",width:100,fixed:!0},{title:"Product Info",name:"productInfo",children:[{title:"Type",name:"type",width:200},{title:"Supplier",name:"supplier",children:[{title:"Company",name:"company",width:300},{title:"Phone",name:"phone",width:300}]}]},{title:"Stock",name:"stock",defaultText:0},{title:"Created Time",name:"createdTime",width:100,needSort:!0,fixed:"right"}])),(0,p.Z)(this,"onChange",(n=>{this.setState(h({},n))}))}render(){var n=this.state,s=n.sortBy,a=n.sortType;return(0,g.jsx)(c.r,{columns:this.getColumns(),datasets:this.state.datasets,rowClassName:(n,s)=>"".concat(n.id,"-").concat(s),bordered:!0,scroll:{x:1400,y:400},sortBy:s,sortType:a,rowKey:"id",onChange:this.onChange})}}return(0,g.jsx)(a,{})},T=function(){for(var n=[{title:"Product Name",name:"name"},{title:"uv",name:"uv"},{title:"stock",name:"stock"},{title:"Created Time",name:"createdTime",width:140,fixed:"right"}],s=[],a=0;a<40;a++)s.push({id:"f-".concat(a),name:"Baby Products ".concat(a),uv:20,stock:5,createdTime:"2019-11-21"});class t extends o.Component{constructor(...n){super(...n),(0,p.Z)(this,"onClick",(()=>{i.g.success("".concat(this.props.data.length," elements was selected"))}))}render(){return(0,g.jsx)(u.z,{className:"child-comps zent-btn",onClick:this.onClick,children:"Click"},"comp")}}class e extends o.Component{constructor(...n){super(...n),(0,p.Z)(this,"state",{selectedRowKeys:["f-0"],datasets:s,current:1})}render(){return(0,g.jsx)(c.r,{columns:n,datasets:this.state.datasets,pageInfo:{pageSize:40,total:40,current:this.state.current},paginationType:"lite",selection:{selectedRowKeys:this.state.selectedRowKeys,onSelect:(n,s,a)=>{this.setState({selectedRowKeys:n})},getCheckboxProps:n=>({disabled:"Baby Products 1"===n.name})},rowKey:"id",batchRender:n=>(0,g.jsx)(t,{data:n}),stickyBatch:!0,scroll:{x:1300}})}}return(0,g.jsx)(e,{})},E=function(){for(var n=[],s=0;s<5;s++)n.push({id:s,name:"Product ".concat(s),uv:20,stock:5,sold_num:5,created_time:"2017-09-20"});return(0,g.jsx)("div",{children:(0,g.jsx)(c.r,{columns:[{title:"Product Name",name:"name",width:100,fixed:!0},{title:"uv",name:"uv",width:100,fixed:!0},{title:"stock",name:"stock"},{title:"Number of sold products",name:"sold_num"},{title:"Created Time",name:"created_time",width:100,fixed:"right"}],datasets:n,autoStick:!0,scroll:{x:1300,y:200}})})},B=function(){for(var n=[],s=0;s<3;s++)n.push({id:"id-".concat(s),name:"Product ".concat(s),uv:20,stock:s>1?5:null});return(0,g.jsx)(c.r,{disableHoverHighlight:!0,columns:[{title:"Product Name",name:"name",className:"name"},{title:"uv",name:"uv"},{title:"stock",name:"stock",defaultText:0}],datasets:n,rowClassName:(n,s)=>"".concat(n.id,"-").concat(s)})},$=function(){for(var n=[],s=0;s<3;s++)n.push({id:"id-".concat(s),name:"Product ".concat(s),uv:s>1?20:"",stock:s>1?5:null});return(0,g.jsx)(r.J,{value:{defaultText:"provider default",isValueEmpty:n=>null==n||""===n},children:(0,g.jsx)(c.r,{disableHoverHighlight:!0,columns:[{title:"Product Name",name:"name",className:"name"},{title:"uv",name:"uv"},{title:"stock",name:"stock",defaultText:"column default"}],datasets:n,rowClassName:(n,s)=>"".concat(n.id,"-").concat(s)})})},G=function(){function n(){var n=(0,o.useState)((()=>{for(var n=[],s=0;s<3;s++)n.push({id:s,name:"Product ".concat(s),uv:20,price:5,sold_num:5,created_time:"2017-09-20"});return n})),s=(0,t.Z)(n,2),a=s[0],p=s[1],e=(0,o.useCallback)((n=>s=>{p((a=>a.map(((a,t)=>t===n?h(h({},a),{},{price:s}):a))))}),[]),l=(0,o.useCallback)((()=>{p((n=>n.map((n=>h(h({},n),{},{price:1242})))))}),[]),i=(0,o.useMemo)((()=>[{title:"Product Name",name:"name",width:100,fixed:!0},{title:"UV",name:"uv",width:100,fixed:!0},{title:"Price",name:"price",bodyRender:(n,{row:s})=>(0,g.jsx)(k.Y,{value:n.price,onChange:e(s),decimal:2,min:.01,showStepper:!0})},{title:"Sold",name:"sold_num"},{title:"Created Time",name:"created_time",width:100,fixed:"right"}]),[e]);return(0,g.jsxs)("div",{children:[(0,g.jsx)(c.r,{columns:i,datasets:a,scroll:{x:1300}}),(0,g.jsx)(u.z,{style:{marginTop:16},onClick:l,children:"Batch Update Prices"})]})}return(0,g.jsx)(n,{})},K=function(){for(var n=[{title:"Product Name",name:"name",className:"name"},{title:"uv",name:"uv"},{title:"stock",name:"stock",defaultText:0}],s=[],a=0;a<3;a++)s.push({id:"id-".concat(a),name:"Product ".concat(a),uv:20,stock:a>1?5:null});var p=()=>{var a=(0,o.useState)("medium"),p=(0,t.Z)(a,2),e=p[0],l=p[1];return(0,g.jsxs)("div",{children:[(0,g.jsxs)(d.Y.Group,{value:e,onChange:n=>l(n.target.value),children:[(0,g.jsx)(d.Y.Button,{value:"small",children:"small"}),(0,g.jsx)(d.Y.Button,{value:"medium",children:"medium"}),(0,g.jsx)(d.Y.Button,{value:"large",children:"large"})]}),(0,g.jsx)("div",{style:{height:20}}),(0,g.jsx)(c.r,{size:e,columns:n,datasets:s,rowClassName:(n,s)=>"".concat(n.id,"-").concat(s),onRowClick:(n,s,a)=>{}})]})};return(0,g.jsx)(p,{})};function O(n){return(0,g.jsx)(n.tag,h(h({},n.attributes),{},{dangerouslySetInnerHTML:{__html:n.html}}))}function I(n){return(0,g.jsx)(O,{tag:"section",html:n.html,attributes:{className:"zandoc-react-markdown"}})}function M(n){return(0,g.jsx)(O,{tag:"style",html:n.style})}function Z(n,s){for(;n;)return n.offsetTop&&"static"!==getComputedStyle(n).position&&(s+=n.offsetTop),Z(n.parentNode,s);return s}class H extends o.Component{constructor(...n){super(...n),(0,p.Z)(this,"state",{showCode:!1}),(0,p.Z)(this,"toggle",(()=>{this.setState({showCode:!this.state.showCode})}))}render(){var n=this.state.showCode,s=this.props,a=s.title,t=s.src,p=s.children;return(0,g.jsxs)("div",{className:"zandoc-react-demo",children:[(0,g.jsx)("div",{className:"zandoc-react-demo__preview",children:p}),(0,g.jsxs)("div",{className:"zandoc-react-demo__bottom",onClick:this.toggle,children:[(0,g.jsx)("div",{className:"zandoc-react-demo__title",children:(0,g.jsx)("p",{children:a||""})}),(0,g.jsx)("i",{className:"zenticon zenticon-caret-up zandoc-react-demo__toggle ".concat(n?"zandoc-react-demo__toggle-on":"zandoc-react-demo__toggle-off")})]}),n&&(0,g.jsx)("pre",{className:"zandoc-react-demo__code",children:(0,g.jsx)(O,{tag:"code",html:t,attributes:{className:"language-jsx"}})})]})}}class q extends o.Component{componentDidMount(){var n=location.hash;if(n){var s=document.querySelector('a[href="'.concat(n,'"]'));s&&(0,e.l)(document.documentElement,0,Z(s,-9))}}render(){return o.createElement("div",{className:"zandoc-react-container"},o.createElement(M,{style:".drop-grid {\n  overflow: visible;\n}\n\n.switch {\n\t\tmargin-bottom: 10px;\n  }\n  .big-size {\n  \tfont-size: 20px;\n  }"}),o.createElement(I,{html:'<h2 class="anchor-heading"><a href="#grid">¶</a><a href="javascript:void(0)" id="grid" class="anchor-point"></a>Grid</h2>\n<p>A table component. <code>Grid</code> is implemented using <code>&#x3C;table></code> tag.</p>\n<h3 class="anchor-heading"><a href="#demos">¶</a><a href="javascript:void(0)" id="demos" class="anchor-point"></a>Demos</h3>'}),o.createElement(H,{title:"Simple",id:"Demosimple",src:'<span class="token keyword module">import</span> <span class="token imports"><span class="token punctuation">{</span> <span class="token maybe-class-name">Grid</span> <span class="token punctuation">}</span></span> <span class="token keyword module">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Product Name\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    className<span class="token operator">:</span> <span class="token string">\'name\'</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'uv\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'uv\'</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'stock\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'stock\'</span><span class="token punctuation">,</span>\n    defaultText<span class="token operator">:</span> <span class="token number">0</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> datasets <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword control-flow">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  datasets<span class="token punctuation">.</span><span class="token method function property-access">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    id<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">id-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Product </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    uv<span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>\n    stock<span class="token operator">:</span> i <span class="token operator">></span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token number">5</span> <span class="token operator">:</span> <span class="token keyword null nil">null</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token maybe-class-name">ReactDOM</span><span class="token punctuation">.</span><span class="token method function property-access">render</span><span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span>\n      <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>\n      <span class="token attr-name">datasets</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>datasets<span class="token punctuation">}</span></span>\n      <span class="token attr-name">rowClassName</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>data<span class="token punctuation">.</span><span class="token property-access">id</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>index<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">}</span></span>\n      <span class="token attr-name">onRowClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span> index<span class="token punctuation">,</span> event</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span> <span class="token console class-name">console</span><span class="token punctuation">.</span><span class="token method function property-access">log</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> index<span class="token punctuation">,</span> event<span class="token punctuation">.</span><span class="token property-access">target</span><span class="token punctuation">,</span> <span class="token string">\'simple onRowClick\'</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n    <span class="token punctuation">/></span></span>\n  <span class="token punctuation">,</span> mountNode\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'},o.createElement(w)),o.createElement(H,{title:"Loading",id:"Demoloading",src:'<span class="token keyword module">import</span> <span class="token imports"><span class="token punctuation">{</span> <span class="token maybe-class-name">Grid</span><span class="token punctuation">,</span> <span class="token maybe-class-name">Switch</span> <span class="token punctuation">}</span></span> <span class="token keyword module">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'a very very looooooooonnnnng name\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n    noWrap<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'right alignment\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'uv\'</span><span class="token punctuation">,</span>\n    textAlign<span class="token operator">:</span> <span class="token string">\'right\'</span><span class="token punctuation">,</span>\n    width<span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'big size\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'stock\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> datasets <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword control-flow">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  datasets<span class="token punctuation">.</span><span class="token method function property-access">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    id<span class="token operator">:</span> i<span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Product </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    uv<span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>\n    stock<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    loading<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword control-flow">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Switch</span></span>\n          <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token parameter">value</span> <span class="token arrow operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token method function property-access">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> loading<span class="token operator">:</span> value <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">state</span><span class="token punctuation">.</span><span class="token property-access">loading</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>small<span class="token punctuation">"</span></span>\n          <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>switch<span class="token punctuation">"</span></span>\n        <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span>\n          <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>\n          <span class="token attr-name">datasets</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>datasets<span class="token punctuation">}</span></span>\n          <span class="token attr-name">loading</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">state</span><span class="token punctuation">.</span><span class="token property-access">loading</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token maybe-class-name">ReactDOM</span><span class="token punctuation">.</span><span class="token method function property-access">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Demo</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},o.createElement(f)),o.createElement(H,{title:"Pagination",id:"Demopagination",src:'<span class="token keyword module">import</span> <span class="token imports"><span class="token punctuation">{</span> <span class="token maybe-class-name">Grid</span> <span class="token punctuation">}</span></span> <span class="token keyword module">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'a very very looooooooonnnnng name\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n    noWrap<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">onCellClick</span><span class="token operator">:</span> <span class="token parameter">data</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n      <span class="token console class-name">console</span><span class="token punctuation">.</span><span class="token method function property-access">log</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token string">\'data\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'uv\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'uv\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'uv\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'stock\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token comment">// const pageSize = 5;</span>\n<span class="token comment">// const totalItem = 10;</span>\n\n<span class="token keyword">const</span> datasets <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> datasets2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword control-flow">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  datasets<span class="token punctuation">.</span><span class="token method function property-access">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    id<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">f-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Baby Products </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    uv<span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>\n    stock<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  datasets2<span class="token punctuation">.</span><span class="token method function property-access">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    id<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">s-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Pet Products </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    uv<span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>\n    stock<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">PageInfo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    current<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    pageSize<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n    total<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n    datasets<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">onChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> current<span class="token punctuation">,</span> pageSize <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token method function property-access">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      current<span class="token punctuation">,</span>\n      pageSize<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> current<span class="token punctuation">,</span> pageSize<span class="token punctuation">,</span> total <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">state</span><span class="token punctuation">;</span>\n    <span class="token keyword control-flow">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span>\n        <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>\n        <span class="token attr-name">datasets</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>current <span class="token operator">===</span> <span class="token number">1</span> <span class="token operator">?</span> datasets <span class="token operator">:</span> datasets2<span class="token punctuation">}</span></span>\n        <span class="token attr-name">pageInfo</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          current<span class="token operator">:</span> current<span class="token punctuation">,</span>\n          pageSize<span class="token operator">:</span> pageSize<span class="token punctuation">,</span>\n          total<span class="token operator">:</span> total<span class="token punctuation">,</span>\n          pageSizeOptions<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">onChange</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">ellipsis</span>\n      <span class="token punctuation">/></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token maybe-class-name">ReactDOM</span><span class="token punctuation">.</span><span class="token method function property-access">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">PageInfo</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},o.createElement(b)),o.createElement(H,{title:"Selection",id:"Demoselection",src:'<span class="token keyword module">import</span> <span class="token imports"><span class="token punctuation">{</span> <span class="token maybe-class-name">Grid</span><span class="token punctuation">,</span> <span class="token maybe-class-name">Notify</span><span class="token punctuation">,</span> <span class="token maybe-class-name">Button</span> <span class="token punctuation">}</span></span> <span class="token keyword module">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Product Name\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'uv\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'uv\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'stock\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'stock\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> pageSize <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> totalItem <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> datasets <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> datasets2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword control-flow">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  datasets<span class="token punctuation">.</span><span class="token method function property-access">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    id<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">f-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Baby Products </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    uv<span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>\n    stock<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  datasets2<span class="token punctuation">.</span><span class="token method function property-access">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    id<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">s-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Pet Products </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    uv<span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>\n    stock<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Selection</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    selectedRowKeys<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'f-0\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    datasets<span class="token punctuation">,</span>\n    current<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    showSelection<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    isSingle<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">onChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> current <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token method function property-access">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      current<span class="token punctuation">,</span>\n      datasets<span class="token operator">:</span> current <span class="token operator">===</span> <span class="token number">1</span> <span class="token operator">?</span> datasets <span class="token operator">:</span> datasets2<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">toggleSelection</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token method function property-access">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      showSelection<span class="token operator">:</span> <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">state</span><span class="token punctuation">.</span><span class="token property-access">showSelection</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">toggleSelectionMode</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token method function property-access">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      isSingle<span class="token operator">:</span> <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">state</span><span class="token punctuation">.</span><span class="token property-access">isSingle</span><span class="token punctuation">,</span>\n      selectedRowKeys<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">state</span><span class="token punctuation">.</span><span class="token property-access">selectedRowKeys</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword control-flow">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">toggleSelection</span><span class="token punctuation">}</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginBottom<span class="token operator">:</span> <span class="token number">12</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n          <span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">state</span><span class="token punctuation">.</span><span class="token property-access">showSelection</span> <span class="token operator">?</span> <span class="token string">\'Hide\'</span> <span class="token operator">:</span> <span class="token string">\'Show\'</span><span class="token punctuation">}</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n        <span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">state</span><span class="token punctuation">.</span><span class="token property-access">showSelection</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">toggleSelectionMode</span><span class="token punctuation">}</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginBottom<span class="token operator">:</span> <span class="token number">12</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n            <span class="token punctuation">{</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">state</span><span class="token punctuation">.</span><span class="token property-access">isSingle</span> <span class="token operator">?</span> <span class="token string">\'To multiple mode\'</span> <span class="token operator">:</span> <span class="token string">\'To single mode\'</span> <span class="token punctuation">}</span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n        <span class="token punctuation">)</span><span class="token punctuation">}</span>\n        <span class="token operator">&lt;</span><span class="token maybe-class-name">Grid</span>\n          columns<span class="token operator">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span>\n          datasets<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">state</span><span class="token punctuation">.</span><span class="token property-access">datasets</span><span class="token punctuation">}</span>\n          pageInfo<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            pageSize<span class="token operator">:</span> pageSize<span class="token punctuation">,</span>\n            total<span class="token operator">:</span> totalItem<span class="token punctuation">,</span>\n            current<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">state</span><span class="token punctuation">.</span><span class="token property-access">current</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          paginationType<span class="token operator">=</span><span class="token string">"lite"</span>\n          selection<span class="token operator">=</span><span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">state</span><span class="token punctuation">.</span><span class="token property-access">showSelection</span>\n              <span class="token operator">?</span> <span class="token punctuation">{</span>\n                  selectedRowKeys<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">state</span><span class="token punctuation">.</span><span class="token property-access">selectedRowKeys</span><span class="token punctuation">,</span>\n                  isSingleSelection<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">state</span><span class="token punctuation">.</span><span class="token property-access">isSingle</span><span class="token punctuation">,</span>\n                  <span class="token function-variable function">onSelect</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">selectedRowKeys<span class="token punctuation">,</span> selectedRows<span class="token punctuation">,</span> currentRow</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n                    <span class="token keyword control-flow">if</span> <span class="token punctuation">(</span>selectedRowKeys<span class="token punctuation">.</span><span class="token property-access">length</span> <span class="token operator">></span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                      <span class="token maybe-class-name">Notify</span><span class="token punctuation">.</span><span class="token method function property-access">error</span><span class="token punctuation">(</span><span class="token string">\'You can choose up to two\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token method function property-access">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                        selectedRowKeys<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token method function property-access">concat</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">state</span><span class="token punctuation">.</span><span class="token property-access">selectedRowKeys</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    <span class="token punctuation">}</span> <span class="token keyword control-flow">else</span> <span class="token punctuation">{</span>\n                      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token method function property-access">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                        selectedRowKeys<span class="token punctuation">,</span>\n                      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    <span class="token punctuation">}</span>\n                  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                  <span class="token function-variable function">getSelectionProps</span><span class="token operator">:</span> <span class="token parameter">data</span> <span class="token arrow operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n                    disabled<span class="token operator">:</span> data<span class="token punctuation">.</span><span class="token property-access">name</span> <span class="token operator">===</span> <span class="token string">\'Baby Products 1\'</span><span class="token punctuation">,</span>\n                    reason<span class="token operator">:</span> <span class="token string">\'Reason of disabled\'</span><span class="token punctuation">,</span>\n                  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                <span class="token punctuation">}</span>\n              <span class="token operator">:</span> <span class="token keyword nil">undefined</span>\n          <span class="token punctuation">}</span>\n          rowKey<span class="token operator">=</span><span class="token string">"id"</span>\n          onChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">onChange</span><span class="token punctuation">}</span>\n        <span class="token operator">/</span><span class="token operator">></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token maybe-class-name">ReactDOM</span><span class="token punctuation">.</span><span class="token method function property-access">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Selection</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},o.createElement(v)),o.createElement(H,{title:"SingleSelection",id:"DemosingleSelection",src:'<span class="token keyword module">import</span> <span class="token imports"><span class="token punctuation">{</span> <span class="token maybe-class-name">Grid</span><span class="token punctuation">,</span> <span class="token maybe-class-name">Notify</span> <span class="token punctuation">}</span></span> <span class="token keyword module">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Product Name\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'uv\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'uv\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'stock\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'stock\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> pageSize <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> totalItem <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> datasets <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> datasets2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword control-flow">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  datasets<span class="token punctuation">.</span><span class="token method function property-access">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    id<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">f-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Baby Products </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    uv<span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>\n    stock<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  datasets2<span class="token punctuation">.</span><span class="token method function property-access">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    id<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">s-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Pet Products </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    uv<span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>\n    stock<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Selection</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    selectedRowKeys<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'f-0\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    datasets<span class="token punctuation">,</span>\n    current<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">onChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> current <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token method function property-access">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      current<span class="token punctuation">,</span>\n      datasets<span class="token operator">:</span> current <span class="token operator">===</span> <span class="token number">1</span> <span class="token operator">?</span> datasets <span class="token operator">:</span> datasets2<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword control-flow">return</span> <span class="token punctuation">(</span>\n      <span class="token operator">&lt;</span><span class="token maybe-class-name">Grid</span>\n        columns<span class="token operator">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span>\n        datasets<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">state</span><span class="token punctuation">.</span><span class="token property-access">datasets</span><span class="token punctuation">}</span>\n        pageInfo<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          pageSize<span class="token operator">:</span> pageSize<span class="token punctuation">,</span>\n          total<span class="token operator">:</span> totalItem<span class="token punctuation">,</span>\n          current<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">state</span><span class="token punctuation">.</span><span class="token property-access">current</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        paginationType<span class="token operator">=</span><span class="token string">"lite"</span>\n        selection<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          isSingleSelection<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          selectedRowKeys<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">state</span><span class="token punctuation">.</span><span class="token property-access">selectedRowKeys</span><span class="token punctuation">,</span>\n          <span class="token function-variable function">onSelect</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">selectedRowKeys<span class="token punctuation">,</span> selectedRows<span class="token punctuation">,</span> currentRow</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n            <span class="token maybe-class-name">Notify</span><span class="token punctuation">.</span><span class="token method function property-access">success</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">当前选中：</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token known-class-name class-name">JSON</span><span class="token punctuation">.</span><span class="token method function property-access">stringify</span><span class="token punctuation">(</span>currentRow<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\n            selectedRows: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token known-class-name class-name">JSON</span><span class="token punctuation">.</span><span class="token method function property-access">stringify</span><span class="token punctuation">(</span>selectedRows<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\n            </span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token method function property-access">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n              selectedRowKeys<span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token function-variable function">getSelectionProps</span><span class="token operator">:</span> <span class="token parameter">data</span> <span class="token arrow operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n            disabled<span class="token operator">:</span> data<span class="token punctuation">.</span><span class="token property-access">name</span> <span class="token operator">===</span> <span class="token string">\'Baby Products 1\'</span><span class="token punctuation">,</span>\n            reason<span class="token operator">:</span> <span class="token string">\'Reason of disabled\'</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        rowKey<span class="token operator">=</span><span class="token string">"id"</span>\n        onChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">onChange</span><span class="token punctuation">}</span>\n      <span class="token operator">/</span><span class="token operator">></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token maybe-class-name">ReactDOM</span><span class="token punctuation">.</span><span class="token method function property-access">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Selection</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},o.createElement(x)),o.createElement(H,{title:"Sort",id:"Demosort",src:'<span class="token keyword module">import</span> <span class="token imports"><span class="token punctuation">{</span> <span class="token maybe-class-name">Grid</span> <span class="token punctuation">}</span></span> <span class="token keyword module">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> datasets <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword control-flow">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  datasets<span class="token punctuation">.</span><span class="token method function property-access">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    id<span class="token operator">:</span> i<span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Product </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    uv<span class="token operator">:</span> i <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">,</span>\n    stock<span class="token operator">:</span> i <span class="token operator">*</span> <span class="token number">5</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Product Name\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    needSort<span class="token operator">:</span> <span class="token boolean">true</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'uv\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'uv\'</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'stock\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'stock\'</span><span class="token punctuation">,</span>\n    needSort<span class="token operator">:</span> <span class="token boolean">true</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n\n<span class="token keyword">class</span> <span class="token class-name">Sort</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">state</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n      datasets<span class="token operator">:</span> datasets<span class="token punctuation">,</span>\n      sortBy<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n      sortType<span class="token operator">:</span> <span class="token string">\'\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function-variable function">onChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">conf</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n    <span class="token console class-name">console</span><span class="token punctuation">.</span><span class="token method function property-access">log</span><span class="token punctuation">(</span>conf<span class="token punctuation">,</span> <span class="token string">\'conf\'</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> sortType<span class="token punctuation">,</span> sortBy <span class="token punctuation">}</span> <span class="token operator">=</span> conf<span class="token punctuation">;</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> datasets <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">state</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> sortDatasets <span class="token operator">=</span> datasets<span class="token punctuation">;</span>\n    <span class="token keyword control-flow">if</span> <span class="token punctuation">(</span>sortType <span class="token operator">===</span> <span class="token string">\'asc\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      sortDatasets <span class="token operator">=</span> datasets<span class="token punctuation">.</span><span class="token method function property-access">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> a<span class="token punctuation">[</span>sortBy<span class="token punctuation">]</span> <span class="token operator">-</span> b<span class="token punctuation">[</span>sortBy<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword control-flow">else</span> <span class="token keyword control-flow">if</span> <span class="token punctuation">(</span>sortType <span class="token operator">===</span> <span class="token string">\'desc\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      sortDatasets <span class="token operator">=</span> datasets<span class="token punctuation">.</span><span class="token method function property-access">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> b<span class="token punctuation">[</span>sortBy<span class="token punctuation">]</span> <span class="token operator">-</span> a<span class="token punctuation">[</span>sortBy<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token method function property-access">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token spread operator">...</span>conf<span class="token punctuation">,</span> datasets<span class="token operator">:</span> sortDatasets <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword control-flow">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span>\n        <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>\n        <span class="token attr-name">datasets</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">state</span><span class="token punctuation">.</span><span class="token property-access">datasets</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">onChange</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">sortBy</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">state</span><span class="token punctuation">.</span><span class="token property-access">sortBy</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">sortType</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">state</span><span class="token punctuation">.</span><span class="token property-access">sortType</span><span class="token punctuation">}</span></span>\n      <span class="token punctuation">/></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token maybe-class-name">ReactDOM</span><span class="token punctuation">.</span><span class="token method function property-access">render</span><span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Sort</span></span> <span class="token punctuation">/></span></span>\n  <span class="token punctuation">,</span> mountNode\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'},o.createElement(S)),o.createElement(H,{title:"colSpan & rowSpan",id:"Demospan",src:'<span class="token keyword module">import</span> <span class="token imports"><span class="token punctuation">{</span> <span class="token maybe-class-name">Grid</span> <span class="token punctuation">}</span></span> <span class="token keyword module">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'colSpan &amp; rowSpan\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    colSpan<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n    width<span class="token operator">:</span> <span class="token string">\'200px\'</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'subtitle\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'sub\'</span><span class="token punctuation">,</span>\n    colSpan<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n    width<span class="token operator">:</span> <span class="token string">\'200px\'</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">bodyRender</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span> pos</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n      <span class="token keyword control-flow">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>data<span class="token punctuation">.</span><span class="token property-access">sub</span><span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'uv\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'uv\'</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">bodyRender</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span> pos</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> <span class="token punctuation">{</span> row <span class="token punctuation">}</span>  <span class="token operator">=</span> pos<span class="token punctuation">;</span>\n      <span class="token keyword control-flow">if</span> <span class="token punctuation">(</span>row <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword control-flow">return</span> <span class="token punctuation">{</span>\n          props<span class="token operator">:</span> <span class="token punctuation">{</span>\n            rowSpan<span class="token operator">:</span> <span class="token number">2</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          children<span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>data<span class="token punctuation">.</span><span class="token property-access">uv</span><span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n      <span class="token keyword control-flow">if</span> <span class="token punctuation">(</span>row <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword control-flow">return</span> <span class="token punctuation">{</span>\n          props<span class="token operator">:</span> <span class="token punctuation">{</span>\n            rowSpan<span class="token operator">:</span> <span class="token number">0</span>\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n      <span class="token keyword control-flow">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>data<span class="token punctuation">.</span><span class="token property-access">uv</span><span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'stock\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'stock\'</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> datasets <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword control-flow">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  datasets<span class="token punctuation">.</span><span class="token method function property-access">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    id<span class="token operator">:</span> i<span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Product </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    sub<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">subtitle </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    uv<span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>\n    stock<span class="token operator">:</span> <span class="token number">5</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Span</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword control-flow">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span>\n        <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>\n        <span class="token attr-name">datasets</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>datasets<span class="token punctuation">}</span></span>\n      <span class="token punctuation">/></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token maybe-class-name">ReactDOM</span><span class="token punctuation">.</span><span class="token method function property-access">render</span><span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Span</span></span> <span class="token punctuation">/></span></span>\n  <span class="token punctuation">,</span> mountNode\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'},o.createElement(j)),o.createElement(H,{title:"Horizontal scroll",id:"DemoscrollX",src:'<span class="token keyword module">import</span> <span class="token imports"><span class="token punctuation">{</span> <span class="token maybe-class-name">Grid</span><span class="token punctuation">,</span> <span class="token maybe-class-name">NumberInput</span> <span class="token punctuation">}</span></span> <span class="token keyword module">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Product Name\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n    fixed<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'uv\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'uv\'</span><span class="token punctuation">,</span>\n    width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n    fixed<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'stock\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'stock\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Number of sold products\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'sold_num\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Created Time\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'created_time\'</span><span class="token punctuation">,</span>\n    width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n    fixed<span class="token operator">:</span> <span class="token string">\'right\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> datasets <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword control-flow">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  datasets<span class="token punctuation">.</span><span class="token method function property-access">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    id<span class="token operator">:</span> i<span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Product </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    uv<span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>\n    stock<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n    sold_num<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n    created_time<span class="token operator">:</span> <span class="token string">\'2017-09-20\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">function</span> <span class="token function"><span class="token maybe-class-name">App</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>x<span class="token punctuation">,</span> setX<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token maybe-class-name">React</span><span class="token punctuation">.</span><span class="token method function property-access">useState</span><span class="token punctuation">(</span><span class="token number">1300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword control-flow">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">NumberInput</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>x<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>setX<span class="token punctuation">}</span></span> <span class="token attr-name">integer</span> <span class="token attr-name">addonAfter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>px<span class="token punctuation">"</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginBottom<span class="token operator">:</span> <span class="token number">16</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">datasets</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>datasets<span class="token punctuation">}</span></span> <span class="token attr-name">scroll</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> x <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token maybe-class-name">ReactDOM</span><span class="token punctuation">.</span><span class="token method function property-access">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">App</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n  mountNode\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'},o.createElement(C)),o.createElement(H,{title:"Vertical scroll",id:"DemoscrollY",src:'<span class="token keyword module">import</span> <span class="token imports"><span class="token punctuation">{</span> <span class="token maybe-class-name">Grid</span> <span class="token punctuation">}</span></span> <span class="token keyword module">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Product Name\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    className<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    width<span class="token operator">:</span> <span class="token number">150</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'uv\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'uv\'</span><span class="token punctuation">,</span>\n    width<span class="token operator">:</span> <span class="token number">150</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'stock\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'stock\'</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> datasets <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword control-flow">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  datasets<span class="token punctuation">.</span><span class="token method function property-access">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    id<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">id-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Product </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    uv<span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>\n    stock<span class="token operator">:</span> <span class="token number">5</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token maybe-class-name">ReactDOM</span><span class="token punctuation">.</span><span class="token method function property-access">render</span><span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span>\n      <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>\n      <span class="token attr-name">datasets</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>datasets<span class="token punctuation">}</span></span>\n      <span class="token attr-name">scroll</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> y<span class="token operator">:</span> <span class="token number">200</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token attr-name">rowClassName</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>data<span class="token punctuation">.</span><span class="token property-access">id</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>index<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">}</span></span>\n      <span class="token attr-name">onRowClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span> index<span class="token punctuation">,</span> event</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span> <span class="token console class-name">console</span><span class="token punctuation">.</span><span class="token method function property-access">log</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> index<span class="token punctuation">,</span> event<span class="token punctuation">.</span><span class="token property-access">target</span><span class="token punctuation">,</span> <span class="token string">\'simple onRowClick\'</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n    <span class="token punctuation">/></span></span>\n  <span class="token punctuation">,</span> mountNode\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'},o.createElement(N)),o.createElement(H,{title:"Horizontal and vertical scroll",id:"DemoscrollXY",src:'<span class="token keyword module">import</span> <span class="token imports"><span class="token punctuation">{</span> <span class="token maybe-class-name">Grid</span> <span class="token punctuation">}</span></span> <span class="token keyword module">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Product Name\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n    fixed<span class="token operator">:</span> <span class="token boolean">true</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'uv\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'uv\'</span><span class="token punctuation">,</span>\n    width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n    fixed<span class="token operator">:</span> <span class="token boolean">true</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'stock\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'stock\'</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Number of sold products\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'sold_num\'</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Created Time\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'created_time\'</span><span class="token punctuation">,</span>\n    width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n    fixed<span class="token operator">:</span> <span class="token string">\'right\'</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> datasets <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword control-flow">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  datasets<span class="token punctuation">.</span><span class="token method function property-access">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    id<span class="token operator">:</span> i<span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Product </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    uv<span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>\n    stock<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n    sold_num<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n    created_time<span class="token operator">:</span> <span class="token string">\'2017-09-20\'</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token maybe-class-name">ReactDOM</span><span class="token punctuation">.</span><span class="token method function property-access">render</span><span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span>\n        <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>\n        <span class="token attr-name">datasets</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>datasets<span class="token punctuation">}</span></span>\n        <span class="token attr-name">scroll</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> x<span class="token operator">:</span> <span class="token number">1300</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token number">200</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">,</span> mountNode\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'},o.createElement(R)),o.createElement(H,{title:"Flexible",id:"Demoexpand",src:'<span class="token keyword module">import</span> <span class="token imports"><span class="token punctuation">{</span> <span class="token maybe-class-name">Grid</span> <span class="token punctuation">}</span></span> <span class="token keyword module">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> datasets <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n  item_id<span class="token operator">:</span> <span class="token string">\'5024217\'</span><span class="token punctuation">,</span>\n  bro_uvpv<span class="token operator">:</span> <span class="token string">\'0/0\'</span><span class="token punctuation">,</span>\n  stock_num<span class="token operator">:</span> <span class="token string">\'60\'</span><span class="token punctuation">,</span>\n  sold_num<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  item_id<span class="token operator">:</span> <span class="token string">\'5024277\'</span><span class="token punctuation">,</span>\n  bro_uvpv<span class="token operator">:</span> <span class="token string">\'0/0\'</span><span class="token punctuation">,</span>\n  stock_num<span class="token operator">:</span> <span class="token number">59</span><span class="token punctuation">,</span>\n  sold_num<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  item_id<span class="token operator">:</span> <span class="token string">\'13213123\'</span><span class="token punctuation">,</span>\n  bro_uvpv<span class="token operator">:</span> <span class="token string">\'0/0\'</span><span class="token punctuation">,</span>\n  stock_num<span class="token operator">:</span> <span class="token number">159</span><span class="token punctuation">,</span>\n  sold_num<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n  title<span class="token operator">:</span> <span class="token string">\'Product\'</span><span class="token punctuation">,</span>\n  width<span class="token operator">:</span> <span class="token string">\'50px\'</span><span class="token punctuation">,</span>\n  fixed<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token function-variable function">bodyRender</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword control-flow">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>data<span class="token punctuation">.</span><span class="token property-access">item_id</span><span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  title<span class="token operator">:</span> <span class="token string">\'PV\'</span><span class="token punctuation">,</span>\n  name<span class="token operator">:</span> <span class="token string">\'bro_uvpv\'</span><span class="token punctuation">,</span>\n  width<span class="token operator">:</span> <span class="token string">\'100px\'</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  title<span class="token operator">:</span> <span class="token string">\'Stock\'</span><span class="token punctuation">,</span>\n  name<span class="token operator">:</span> <span class="token string">\'stock_num\'</span><span class="token punctuation">,</span>\n  width<span class="token operator">:</span> <span class="token string">\'100px\'</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  title<span class="token operator">:</span> <span class="token string">\'Sales\'</span><span class="token punctuation">,</span>\n  name<span class="token operator">:</span> <span class="token string">\'sold_num\'</span><span class="token punctuation">,</span>\n  fixed<span class="token operator">:</span> <span class="token string">\'right\'</span>\n<span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">RowClass</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">state</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n      limit<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n      current<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n      total<span class="token operator">:</span> <span class="token number">101</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">getRowConf</span><span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword control-flow">return</span> <span class="token punctuation">{</span>\n      canSelect<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">onChange</span><span class="token punctuation">(</span><span class="token parameter">conf</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token method function property-access">setState</span><span class="token punctuation">(</span>conf<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function-variable function">onExpand</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">conf</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n    <span class="token console class-name">console</span><span class="token punctuation">.</span><span class="token method function property-access">log</span><span class="token punctuation">(</span>conf<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword control-flow">return</span> <span class="token punctuation">(</span>\n      <span class="token operator">&lt;</span><span class="token maybe-class-name">Grid</span>\n        columns<span class="token operator">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span>\n        datasets<span class="token operator">=</span><span class="token punctuation">{</span>datasets<span class="token punctuation">}</span>\n        onChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token method function property-access">onChange</span><span class="token punctuation">.</span><span class="token method function property-access">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n        getRowConf<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">getRowConf</span><span class="token punctuation">}</span>\n        rowKey<span class="token operator">=</span><span class="token string">"item_id"</span>\n        scroll<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> x<span class="token operator">:</span> <span class="token number">1300</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        expandation<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          <span class="token function">isExpanded</span><span class="token punctuation">(</span><span class="token parameter">record<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword control-flow">return</span> <span class="token punctuation">(</span>index <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token function">expandRender</span><span class="token punctuation">(</span><span class="token parameter">record</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword control-flow">return</span> <span class="token punctuation">(</span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n                <span class="token punctuation">{</span>record<span class="token punctuation">.</span><span class="token property-access">item_id</span><span class="token punctuation">}</span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n            <span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        onExpand<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">onExpand</span><span class="token punctuation">}</span>\n      <span class="token operator">/</span><span class="token operator">></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token maybe-class-name">ReactDOM</span><span class="token punctuation">.</span><span class="token method function property-access">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">RowClass</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n  mountNode\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'},o.createElement(P)),o.createElement(H,{title:"Empty grid",id:"Demoempty",src:'<span class="token keyword module">import</span> <span class="token imports"><span class="token punctuation">{</span> <span class="token maybe-class-name">Grid</span> <span class="token punctuation">}</span></span> <span class="token keyword module">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Product Name\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    className<span class="token operator">:</span> <span class="token string">\'name\'</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'uv\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'uv\'</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'stock\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'stock\'</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token maybe-class-name">ReactDOM</span><span class="token punctuation">.</span><span class="token method function property-access">render</span><span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span>\n      <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>\n      <span class="token attr-name">datasets</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span>\n      <span class="token attr-name">rowClassName</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>data<span class="token punctuation">.</span><span class="token property-access">id</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>index<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">}</span></span>\n      <span class="token attr-name">onRowClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span> index<span class="token punctuation">,</span> event</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span> <span class="token console class-name">console</span><span class="token punctuation">.</span><span class="token method function property-access">log</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> index<span class="token punctuation">,</span> event<span class="token punctuation">.</span><span class="token property-access">target</span><span class="token punctuation">,</span> <span class="token string">\'simple onRowClick\'</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n    <span class="token punctuation">/></span></span>\n  <span class="token punctuation">,</span> mountNode\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'},o.createElement(z)),o.createElement(H,{title:"Drop sort",id:"Demodrop",src:'<span class="token keyword module">import</span> <span class="token imports"><span class="token punctuation">{</span> <span class="token maybe-class-name">Grid</span> <span class="token punctuation">}</span></span> <span class="token keyword module">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n<span class="token keyword module">import</span> <span class="token imports"><span class="token maybe-class-name">ReactDOM</span></span> <span class="token keyword module">from</span> <span class="token string">\'react-dom\'</span><span class="token punctuation">;</span>\n<span class="token keyword module">import</span> <span class="token imports"><span class="token punctuation">{</span> <span class="token maybe-class-name">DragDropContext</span><span class="token punctuation">,</span> <span class="token maybe-class-name">Droppable</span><span class="token punctuation">,</span> <span class="token maybe-class-name">Draggable</span> <span class="token punctuation">}</span></span> <span class="token keyword module">from</span> <span class="token string">\'react-beautiful-dnd\'</span><span class="token punctuation">;</span> <span class="token comment">// 建议此库的版本大于 9.0.0</span>\n\n<span class="token keyword">const</span> datasets <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword control-flow">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  datasets<span class="token punctuation">.</span><span class="token method function property-access">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    id<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">f-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Baby Products </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    uv<span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>\n    stock<span class="token operator">:</span> <span class="token number">5</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">reorder</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">list<span class="token punctuation">,</span> startIndex<span class="token punctuation">,</span> endIndex</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token known-class-name class-name">Array</span><span class="token punctuation">.</span><span class="token keyword module">from</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>removed<span class="token punctuation">]</span> <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token method function property-access">splice</span><span class="token punctuation">(</span>startIndex<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  result<span class="token punctuation">.</span><span class="token method function property-access">splice</span><span class="token punctuation">(</span>endIndex<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> removed<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword control-flow">return</span> result<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">BodyRow</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function">getItemStyle</span><span class="token punctuation">(</span><span class="token parameter">isDragging<span class="token punctuation">,</span> draggableStyle</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> style <span class="token operator">=</span> <span class="token punctuation">{</span>\n      <span class="token spread operator">...</span>draggableStyle\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword control-flow">if</span><span class="token punctuation">(</span>isDragging<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      style<span class="token punctuation">.</span><span class="token property-access">display</span>  <span class="token operator">=</span> <span class="token string">\'table\'</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword control-flow">return</span> style<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword control-flow">return</span> <span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Draggable</span></span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">props</span><span class="token punctuation">.</span><span class="token property-access">id</span><span class="token punctuation">}</span></span> <span class="token attr-name">draggableId</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">props</span><span class="token punctuation">.</span><span class="token property-access">id</span><span class="token punctuation">}</span></span> <span class="token attr-name">index</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">props</span><span class="token punctuation">.</span><span class="token property-access">index</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n      <span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">provided<span class="token punctuation">,</span> snapshot</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n        <span class="token keyword control-flow">return</span> <span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span>\n          <span class="token spread"><span class="token punctuation">{</span><span class="token spread operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">props</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>provided<span class="token punctuation">.</span><span class="token property-access">innerRef</span><span class="token punctuation">}</span></span>\n          <span class="token spread"><span class="token punctuation">{</span><span class="token spread operator">...</span>provided<span class="token punctuation">.</span><span class="token property-access">draggableProps</span><span class="token punctuation">}</span></span>\n          <span class="token spread"><span class="token punctuation">{</span><span class="token spread operator">...</span>provided<span class="token punctuation">.</span><span class="token property-access">dragHandleProps</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token method function property-access">getItemStyle</span><span class="token punctuation">(</span>\n            snapshot<span class="token punctuation">.</span><span class="token property-access">isDragging</span><span class="token punctuation">,</span>\n            provided<span class="token punctuation">.</span><span class="token property-access">draggableProps</span><span class="token punctuation">.</span><span class="token property-access">style</span>\n          <span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">}</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Draggable</span></span><span class="token punctuation">></span></span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Drap</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">state</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n      datasets\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      title<span class="token operator">:</span> <span class="token string">\'Product Name\'</span><span class="token punctuation">,</span>\n      name<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n      className<span class="token operator">:</span> <span class="token string">\'name\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n      title<span class="token operator">:</span> <span class="token string">\'uv\'</span><span class="token punctuation">,</span>\n      name<span class="token operator">:</span> <span class="token string">\'uv\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n      title<span class="token operator">:</span> <span class="token string">\'stock\'</span><span class="token punctuation">,</span>\n      name<span class="token operator">:</span> <span class="token string">\'stock\'</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span>\n\n  components <span class="token operator">=</span> <span class="token punctuation">{</span>\n    row<span class="token operator">:</span> <span class="token maybe-class-name">BodyRow</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function-variable function">onDragEnd</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword control-flow">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>result<span class="token punctuation">.</span><span class="token property-access">destination</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword control-flow">return</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">const</span> datasets <span class="token operator">=</span> <span class="token function">reorder</span><span class="token punctuation">(</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">state</span><span class="token punctuation">.</span><span class="token property-access">datasets</span><span class="token punctuation">,</span>\n      result<span class="token punctuation">.</span><span class="token property-access">source</span><span class="token punctuation">.</span><span class="token property-access">index</span><span class="token punctuation">,</span>\n      result<span class="token punctuation">.</span><span class="token property-access">destination</span><span class="token punctuation">.</span><span class="token property-access">index</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token console class-name">console</span><span class="token punctuation">.</span><span class="token method function property-access">log</span><span class="token punctuation">(</span>datasets<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">state</span><span class="token punctuation">.</span><span class="token property-access">datasets</span><span class="token punctuation">,</span> <span class="token string">\'-------\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token method function property-access">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      datasets<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword control-flow">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DragDropContext</span></span> <span class="token attr-name">onDragEnd</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">onDragEnd</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Droppable</span></span> <span class="token attr-name">droppableId</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>droppable<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">provided<span class="token punctuation">,</span> snapshot</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">(</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>provided<span class="token punctuation">.</span><span class="token property-access">innerRef</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span>\n                <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">columns</span><span class="token punctuation">}</span></span>\n                <span class="token attr-name">datasets</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">state</span><span class="token punctuation">.</span><span class="token property-access">datasets</span><span class="token punctuation">}</span></span>\n                <span class="token attr-name">components</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">components</span><span class="token punctuation">}</span></span>\n                <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>drop-grid<span class="token punctuation">"</span></span>\n                <span class="token attr-name">rowProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n                  id<span class="token operator">:</span> data<span class="token punctuation">.</span><span class="token property-access">id</span><span class="token punctuation">,</span>\n                  index\n                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n              <span class="token punctuation">/></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n          <span class="token punctuation">)</span><span class="token punctuation">}</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Droppable</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">DragDropContext</span></span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token maybe-class-name">ReactDOM</span><span class="token punctuation">.</span><span class="token method function property-access">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Drap</span></span> <span class="token punctuation">/></span></span>\n  <span class="token punctuation">,</span> mountNode\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'},o.createElement(D)),o.createElement(H,{title:"Header Group",id:"DemoheaderGroup",src:'<span class="token keyword module">import</span> <span class="token imports"><span class="token punctuation">{</span> <span class="token maybe-class-name">Grid</span> <span class="token punctuation">}</span></span> <span class="token keyword module">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> datasets <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword control-flow">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">19</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  datasets<span class="token punctuation">.</span><span class="token method function property-access">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    id<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">id-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Product </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    type<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">type-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    company<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">company-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    phone<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">123342345</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    stock<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n    createdTime<span class="token operator">:</span> <span class="token string">\'2018-12-11\'</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">HeaderGroup</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    datasets\n  <span class="token punctuation">}</span>\n\n  <span class="token function-variable function">getColumns</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword control-flow">return</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        title<span class="token operator">:</span> <span class="token string">\'Product Name\'</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n        className<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n        width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n        fixed<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        title<span class="token operator">:</span> <span class="token string">\'Product Info\'</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span> <span class="token string">\'productInfo\'</span><span class="token punctuation">,</span>\n        children<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            title<span class="token operator">:</span> <span class="token string">\'Type\'</span><span class="token punctuation">,</span>\n            name<span class="token operator">:</span> <span class="token string">\'type\'</span><span class="token punctuation">,</span>\n            width<span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            title<span class="token operator">:</span> <span class="token string">\'Supplier\'</span><span class="token punctuation">,</span>\n            name<span class="token operator">:</span> <span class="token string">\'supplier\'</span><span class="token punctuation">,</span>\n            children<span class="token operator">:</span> <span class="token punctuation">[</span>\n              <span class="token punctuation">{</span>\n                title<span class="token operator">:</span> <span class="token string">\'Company\'</span><span class="token punctuation">,</span>\n                name<span class="token operator">:</span> <span class="token string">\'company\'</span><span class="token punctuation">,</span>\n                width<span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n              <span class="token punctuation">{</span>\n                title<span class="token operator">:</span> <span class="token string">\'Phone\'</span><span class="token punctuation">,</span>\n                name<span class="token operator">:</span> <span class="token string">\'phone\'</span><span class="token punctuation">,</span>\n                width<span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">]</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        title<span class="token operator">:</span> <span class="token string">\'Stock\'</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span> <span class="token string">\'stock\'</span><span class="token punctuation">,</span>\n        defaultText<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        title<span class="token operator">:</span> <span class="token string">\'Created Time\'</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span> <span class="token string">\'createdTime\'</span><span class="token punctuation">,</span>\n        width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n        needSort<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        fixed<span class="token operator">:</span> <span class="token string">\'right\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function-variable function">onChange</span> <span class="token operator">=</span> <span class="token parameter">conf</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n    <span class="token console class-name">console</span><span class="token punctuation">.</span><span class="token method function property-access">log</span><span class="token punctuation">(</span>conf<span class="token punctuation">,</span> <span class="token string">\'conf\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token method function property-access">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token spread operator">...</span>conf\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> sortBy<span class="token punctuation">,</span> sortType <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">state</span><span class="token punctuation">;</span>\n    <span class="token keyword control-flow">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span>\n        <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token method function property-access">getColumns</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">datasets</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">state</span><span class="token punctuation">.</span><span class="token property-access">datasets</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">rowClassName</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>data<span class="token punctuation">.</span><span class="token property-access">id</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>index<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">bordered</span>\n        <span class="token attr-name">scroll</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> x<span class="token operator">:</span> <span class="token number">1400</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token number">400</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">sortBy</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>sortBy<span class="token punctuation">}</span></span>\n        <span class="token attr-name">sortType</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>sortType<span class="token punctuation">}</span></span>\n        <span class="token attr-name">rowKey</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>id<span class="token punctuation">"</span></span>\n        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">onChange</span><span class="token punctuation">}</span></span>\n      <span class="token punctuation">/></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token maybe-class-name">ReactDOM</span><span class="token punctuation">.</span><span class="token method function property-access">render</span><span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">HeaderGroup</span></span> <span class="token punctuation">/></span></span>\n  <span class="token punctuation">,</span> mountNode\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'},o.createElement(_)),o.createElement(H,{title:"Batch Components",id:"Demobatch",src:'<span class="token keyword module">import</span> <span class="token imports"><span class="token punctuation">{</span> <span class="token maybe-class-name">Grid</span><span class="token punctuation">,</span> <span class="token maybe-class-name">Notify</span><span class="token punctuation">,</span> <span class="token maybe-class-name">Button</span> <span class="token punctuation">}</span></span> <span class="token keyword module">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Product Name\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'uv\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'uv\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'stock\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'stock\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Created Time\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'createdTime\'</span><span class="token punctuation">,</span>\n    width<span class="token operator">:</span> <span class="token number">140</span><span class="token punctuation">,</span>\n    fixed<span class="token operator">:</span> <span class="token string">\'right\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> pageSize <span class="token operator">=</span> <span class="token number">40</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> totalItem <span class="token operator">=</span> <span class="token number">40</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> datasets <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> datasets2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword control-flow">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">40</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  datasets<span class="token punctuation">.</span><span class="token method function property-access">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    id<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">f-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Baby Products </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    uv<span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>\n    stock<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n    createdTime<span class="token operator">:</span> <span class="token string">\'2019-11-21\'</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Customer</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function-variable function">onClick</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n    <span class="token maybe-class-name">Notify</span><span class="token punctuation">.</span><span class="token method function property-access">success</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">props</span><span class="token punctuation">.</span><span class="token property-access">data</span><span class="token punctuation">.</span><span class="token property-access">length</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> elements was selected</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword control-flow">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span>\n        <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>comp<span class="token punctuation">"</span></span>\n        <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>child-comps zent-btn<span class="token punctuation">"</span></span>\n        <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">onClick</span><span class="token punctuation">}</span></span>\n      <span class="token punctuation">></span></span>\n        <span class="token maybe-class-name">Click</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Selection</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    selectedRowKeys<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'f-0\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    datasets<span class="token punctuation">,</span>\n    current<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword control-flow">return</span> <span class="token punctuation">(</span>\n      <span class="token operator">&lt;</span><span class="token maybe-class-name">Grid</span>\n        columns<span class="token operator">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span>\n        datasets<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">state</span><span class="token punctuation">.</span><span class="token property-access">datasets</span><span class="token punctuation">}</span>\n        pageInfo<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          pageSize<span class="token operator">:</span> pageSize<span class="token punctuation">,</span>\n          total<span class="token operator">:</span> totalItem<span class="token punctuation">,</span>\n          current<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">state</span><span class="token punctuation">.</span><span class="token property-access">current</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        paginationType<span class="token operator">=</span><span class="token string">"lite"</span>\n        selection<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          selectedRowKeys<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">state</span><span class="token punctuation">.</span><span class="token property-access">selectedRowKeys</span><span class="token punctuation">,</span>\n          <span class="token function-variable function">onSelect</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">selectedRowKeys<span class="token punctuation">,</span> selectedRows<span class="token punctuation">,</span> currentRow</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token method function property-access">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n              selectedRowKeys<span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token function-variable function">getCheckboxProps</span><span class="token operator">:</span> <span class="token parameter">data</span> <span class="token arrow operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n            disabled<span class="token operator">:</span> data<span class="token punctuation">.</span><span class="token property-access">name</span> <span class="token operator">===</span> <span class="token string">\'Baby Products 1\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        rowKey<span class="token operator">=</span><span class="token string">"id"</span>\n        batchRender<span class="token operator">=</span><span class="token punctuation">{</span><span class="token parameter">data</span> <span class="token arrow operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Customer</span></span> <span class="token attr-name">data</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span> <span class="token punctuation">}</span>\n        stickyBatch\n        scroll<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>x<span class="token operator">:</span> <span class="token number">1300</span><span class="token punctuation">}</span><span class="token punctuation">}</span>\n      <span class="token operator">/</span><span class="token operator">></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token maybe-class-name">ReactDOM</span><span class="token punctuation">.</span><span class="token method function property-access">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Selection</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},o.createElement(T)),o.createElement(H,{title:"Stick Header",id:"DemoautoStick",src:'<span class="token keyword module">import</span> <span class="token imports"><span class="token punctuation">{</span> <span class="token maybe-class-name">Grid</span> <span class="token punctuation">}</span></span> <span class="token keyword module">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Product Name\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n    fixed<span class="token operator">:</span> <span class="token boolean">true</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'uv\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'uv\'</span><span class="token punctuation">,</span>\n    width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n    fixed<span class="token operator">:</span> <span class="token boolean">true</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'stock\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'stock\'</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Number of sold products\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'sold_num\'</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Created Time\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'created_time\'</span><span class="token punctuation">,</span>\n    width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n    fixed<span class="token operator">:</span> <span class="token string">\'right\'</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> datasets <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword control-flow">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  datasets<span class="token punctuation">.</span><span class="token method function property-access">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    id<span class="token operator">:</span> i<span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Product </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    uv<span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>\n    stock<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n    sold_num<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n    created_time<span class="token operator">:</span> <span class="token string">\'2017-09-20\'</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token maybe-class-name">ReactDOM</span><span class="token punctuation">.</span><span class="token method function property-access">render</span><span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span>\n        <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>\n        <span class="token attr-name">datasets</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>datasets<span class="token punctuation">}</span></span>\n        <span class="token attr-name">autoStick</span>\n        <span class="token attr-name">scroll</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> x<span class="token operator">:</span> <span class="token number">1300</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token number">200</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">,</span> mountNode\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'},o.createElement(E)),o.createElement(H,{title:"Disable Hover Highlight",id:"Demodisablehoverhighlight",src:'<span class="token keyword module">import</span> <span class="token imports"><span class="token punctuation">{</span> <span class="token maybe-class-name">Grid</span> <span class="token punctuation">}</span></span> <span class="token keyword module">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Product Name\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    className<span class="token operator">:</span> <span class="token string">\'name\'</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'uv\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'uv\'</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'stock\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'stock\'</span><span class="token punctuation">,</span>\n    defaultText<span class="token operator">:</span> <span class="token number">0</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> datasets <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword control-flow">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  datasets<span class="token punctuation">.</span><span class="token method function property-access">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    id<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">id-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Product </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    uv<span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>\n    stock<span class="token operator">:</span> i <span class="token operator">></span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token number">5</span> <span class="token operator">:</span> <span class="token keyword null nil">null</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token maybe-class-name">ReactDOM</span><span class="token punctuation">.</span><span class="token method function property-access">render</span><span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span>\n      <span class="token attr-name">disableHoverHighlight</span>\n      <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>\n      <span class="token attr-name">datasets</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>datasets<span class="token punctuation">}</span></span>\n      <span class="token attr-name">rowClassName</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>data<span class="token punctuation">.</span><span class="token property-access">id</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>index<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">}</span></span>\n    <span class="token punctuation">/></span></span>\n  <span class="token punctuation">,</span> mountNode\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'},o.createElement(B)),o.createElement(H,{title:"ColumnProvider",id:"DemocolumnProvider",src:'<span class="token keyword module">import</span> <span class="token imports"><span class="token punctuation">{</span> <span class="token maybe-class-name">Grid</span><span class="token punctuation">,</span> <span class="token maybe-class-name">GridColumnProvider</span> <span class="token punctuation">}</span></span> <span class="token keyword module">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Product Name\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    className<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'uv\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'uv\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'stock\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'stock\'</span><span class="token punctuation">,</span>\n    defaultText<span class="token operator">:</span> <span class="token string">\'column default\'</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> datasets <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword control-flow">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  datasets<span class="token punctuation">.</span><span class="token method function property-access">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    id<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">id-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Product </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    uv<span class="token operator">:</span> i <span class="token operator">></span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token number">20</span> <span class="token operator">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n    stock<span class="token operator">:</span> i <span class="token operator">></span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token number">5</span> <span class="token operator">:</span> <span class="token keyword null nil">null</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token maybe-class-name">ReactDOM</span><span class="token punctuation">.</span><span class="token method function property-access">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">GridColumnProvider</span></span>\n    <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n      defaultText<span class="token operator">:</span> <span class="token string">\'provider default\'</span><span class="token punctuation">,</span>\n      <span class="token function-variable function">isValueEmpty</span><span class="token operator">:</span> <span class="token parameter">value</span> <span class="token arrow operator">=></span> value <span class="token operator">==</span> <span class="token keyword null nil">null</span> <span class="token operator">||</span> value <span class="token operator">===</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n  <span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span>\n      <span class="token attr-name">disableHoverHighlight</span>\n      <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>\n      <span class="token attr-name">datasets</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>datasets<span class="token punctuation">}</span></span>\n      <span class="token attr-name">rowClassName</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>data<span class="token punctuation">.</span><span class="token property-access">id</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>index<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">}</span></span>\n    <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">GridColumnProvider</span></span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n  mountNode\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'},o.createElement($)),o.createElement(H,{title:"Editable cell",id:"Demoeditable",src:'<span class="token keyword module">import</span> <span class="token imports"><span class="token punctuation">{</span> <span class="token maybe-class-name">Grid</span><span class="token punctuation">,</span> <span class="token maybe-class-name">NumberInput</span><span class="token punctuation">,</span> <span class="token maybe-class-name">Button</span> <span class="token punctuation">}</span></span> <span class="token keyword module">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n<span class="token keyword module">import</span> <span class="token imports"><span class="token punctuation">{</span> useCallback<span class="token punctuation">,</span> useState<span class="token punctuation">,</span> useMemo <span class="token punctuation">}</span></span> <span class="token keyword module">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function"><span class="token maybe-class-name">App</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>datasets<span class="token punctuation">,</span> setDatasets<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> datasets <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token keyword control-flow">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      datasets<span class="token punctuation">.</span><span class="token method function property-access">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        id<span class="token operator">:</span> i<span class="token punctuation">,</span>\n        name<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Product </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n        uv<span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>\n        price<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n        sold_num<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n        created_time<span class="token operator">:</span> <span class="token string">\'2017-09-20\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword control-flow">return</span> datasets<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> onPriceChange <span class="token operator">=</span> <span class="token function">useCallback</span><span class="token punctuation">(</span>\n    <span class="token parameter">rowIndex</span> <span class="token arrow operator">=></span> <span class="token parameter">val</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n      <span class="token function">setDatasets</span><span class="token punctuation">(</span><span class="token parameter">prev</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n        <span class="token keyword control-flow">return</span> prev<span class="token punctuation">.</span><span class="token method function property-access">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">row<span class="token punctuation">,</span> idx</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n          <span class="token keyword control-flow">if</span> <span class="token punctuation">(</span>idx <span class="token operator">===</span> rowIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword control-flow">return</span> <span class="token punctuation">{</span>\n              <span class="token spread operator">...</span>row<span class="token punctuation">,</span>\n              price<span class="token operator">:</span> val<span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span>\n\n          <span class="token keyword control-flow">return</span> row<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">[</span><span class="token punctuation">]</span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> onBatchChange <span class="token operator">=</span> <span class="token function">useCallback</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">setDatasets</span><span class="token punctuation">(</span><span class="token parameter">prev</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n      <span class="token keyword control-flow">return</span> prev<span class="token punctuation">.</span><span class="token method function property-access">map</span><span class="token punctuation">(</span><span class="token parameter">row</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n        <span class="token keyword control-flow">return</span> <span class="token punctuation">{</span>\n          <span class="token spread operator">...</span>row<span class="token punctuation">,</span>\n          price<span class="token operator">:</span> <span class="token number">1242</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token function">useMemo</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword control-flow">return</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        title<span class="token operator">:</span> <span class="token string">\'Product Name\'</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n        width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n        fixed<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        title<span class="token operator">:</span> <span class="token string">\'UV\'</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span> <span class="token string">\'uv\'</span><span class="token punctuation">,</span>\n        width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n        fixed<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        title<span class="token operator">:</span> <span class="token string">\'Price\'</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span> <span class="token string">\'price\'</span><span class="token punctuation">,</span>\n        <span class="token function">bodyRender</span><span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span> <span class="token punctuation">{</span> row <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token keyword control-flow">return</span> <span class="token punctuation">(</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">NumberInput</span></span>\n              <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">.</span><span class="token property-access">price</span><span class="token punctuation">}</span></span>\n              <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token function">onPriceChange</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n              <span class="token attr-name">decimal</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">}</span></span>\n              <span class="token attr-name">min</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">0.01</span><span class="token punctuation">}</span></span>\n              <span class="token attr-name">showStepper</span>\n            <span class="token punctuation">/></span></span>\n          <span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        title<span class="token operator">:</span> <span class="token string">\'Sold\'</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span> <span class="token string">\'sold_num\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        title<span class="token operator">:</span> <span class="token string">\'Created Time\'</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span> <span class="token string">\'created_time\'</span><span class="token punctuation">,</span>\n        width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n        fixed<span class="token operator">:</span> <span class="token string">\'right\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>onPriceChange<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword control-flow">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">datasets</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>datasets<span class="token punctuation">}</span></span> <span class="token attr-name">scroll</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> x<span class="token operator">:</span> <span class="token number">1300</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginTop<span class="token operator">:</span> <span class="token number">16</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onBatchChange<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n        <span class="token maybe-class-name">Batch</span> <span class="token maybe-class-name">Update</span> <span class="token maybe-class-name">Prices</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token maybe-class-name">ReactDOM</span><span class="token punctuation">.</span><span class="token method function property-access">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">App</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},o.createElement(G)),o.createElement(H,{title:"Different size",id:"Demosize",src:'<span class="token keyword module">import</span> <span class="token imports"><span class="token punctuation">{</span> <span class="token maybe-class-name">Grid</span><span class="token punctuation">,</span> <span class="token maybe-class-name">Radio</span> <span class="token punctuation">}</span></span> <span class="token keyword module">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'Product Name\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    className<span class="token operator">:</span> <span class="token string">\'name\'</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'uv\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'uv\'</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'stock\'</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'stock\'</span><span class="token punctuation">,</span>\n    defaultText<span class="token operator">:</span> <span class="token number">0</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> datasets <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword control-flow">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  datasets<span class="token punctuation">.</span><span class="token method function property-access">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    id<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">id-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Product </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    uv<span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>\n    stock<span class="token operator">:</span> i <span class="token operator">></span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token number">5</span> <span class="token operator">:</span> <span class="token keyword null nil">null</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function"><span class="token maybe-class-name">Demo</span></span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>size<span class="token punctuation">,</span> setSize<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">\'medium\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword control-flow">return</span> <span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Group</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>size<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token function">setSize</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token property-access">target</span><span class="token punctuation">.</span><span class="token property-access">value</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Button</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>small<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>small<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Button</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Button</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>medium<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>medium<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Button</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Button</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>large<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>large<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Button</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Group</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>height<span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span>\n      <span class="token attr-name">size</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>size<span class="token punctuation">}</span></span>\n      <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>\n      <span class="token attr-name">datasets</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>datasets<span class="token punctuation">}</span></span>\n      <span class="token attr-name">rowClassName</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>data<span class="token punctuation">.</span><span class="token property-access">id</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>index<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">}</span></span>\n      <span class="token attr-name">onRowClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span> index<span class="token punctuation">,</span> event</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span> <span class="token console class-name">console</span><span class="token punctuation">.</span><span class="token method function property-access">log</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> index<span class="token punctuation">,</span> event<span class="token punctuation">.</span><span class="token property-access">target</span><span class="token punctuation">,</span> <span class="token string">\'simple onRowClick\'</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n    <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token maybe-class-name">ReactDOM</span><span class="token punctuation">.</span><span class="token method function property-access">render</span><span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Demo</span></span> <span class="token punctuation">/></span></span>\n  <span class="token punctuation">,</span> mountNode\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'},o.createElement(K)),o.createElement(I,{html:'<h3 class="anchor-heading"><a href="#api">¶</a><a href="javascript:void(0)" id="api" class="anchor-point"></a>API</h3>\n<table class="table">\n<thead>\n<tr>\n<th>Property</th>\n<th>Descripition</th>\n<th>Type</th>\n<th>Default</th>\n<th>Required</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>columns</td>\n<td>columns</td>\n<td>array</td>\n<td></td>\n<td>Yes</td>\n<td></td>\n</tr>\n<tr>\n<td>datasets</td>\n<td>Data to be displayed</td>\n<td>array</td>\n<td></td>\n<td>Yes</td>\n<td></td>\n</tr>\n<tr>\n<td>rowKey</td>\n<td>Key for each row</td>\n<td>string</td>\n<td><code>id</code></td>\n<td>No</td>\n<td></td>\n</tr>\n<tr>\n<td>onChange</td>\n<td>Callback fires when columns change, filtering and sorting included</td>\n<td>(conf: any) => any</td>\n<td><code>noop</code></td>\n<td>No</td>\n<td></td>\n</tr>\n<tr>\n<td>scroll</td>\n<td>Can be scrolled in x/y direction, x or y can be a number that indicates the width and height of table body</td>\n<td>{ x?: number, y?: number }</td>\n<td></td>\n<td>No</td>\n<td></td>\n</tr>\n<tr>\n<td>sortBy</td>\n<td>The field which rows are sorted by, should be one of keys for columns</td>\n<td>string</td>\n<td>\'\'</td>\n<td>No</td>\n<td></td>\n</tr>\n<tr>\n<td>sortType</td>\n<td>The way to sort</td>\n<td>string</td>\n<td>\'\'</td>\n<td>No</td>\n<td></td>\n</tr>\n<tr>\n<td>defaultSortType</td>\n<td>The way to sort when first click</td>\n<td>string</td>\n<td><code>\'desc\'</code></td>\n<td>No</td>\n<td></td>\n</tr>\n<tr>\n<td>emptyLabel</td>\n<td>Text to be displayed when there\'s no data</td>\n<td>string</td>\n<td><code>\'No data\'</code></td>\n<td>No</td>\n<td></td>\n</tr>\n<tr>\n<td>selection</td>\n<td>Configuration for selection</td>\n<td>object</td>\n<td></td>\n<td>No</td>\n<td></td>\n</tr>\n<tr>\n<td>expandation</td>\n<td>Expand configuration</td>\n<td>object</td>\n<td></td>\n<td></td>\n<td>no</td>\n</tr>\n<tr>\n<td>loading</td>\n<td>Determines whether data is being loaded or not</td>\n<td>bool</td>\n<td><code>false</code></td>\n<td>No</td>\n<td></td>\n</tr>\n<tr>\n<td>className</td>\n<td>Extra custom class name</td>\n<td>string</td>\n<td><code>\'\'</code></td>\n<td>No</td>\n<td></td>\n</tr>\n<tr>\n<td>rowClassName</td>\n<td>Class name for row</td>\n<td>string \n|\n (data: object, rowIndex: number) => string</td>\n<td>\'\'</td>\n<td>No</td>\n<td></td>\n</tr>\n<tr>\n<td>pageInfo</td>\n<td>Pagination information</td>\n<td>object</td>\n<td>null</td>\n<td>No</td>\n<td></td>\n</tr>\n<tr>\n<td>paginationType</td>\n<td>Pagination type, \n<code>\'default\'</code>\n \n|\n \n<code>\'lite\'</code>\n \n|\n \n<code>\'mini\'</code></td>\n<td>string</td>\n<td><code>\'default\'</code></td>\n<td>No</td>\n<td></td>\n</tr>\n<tr>\n<td>onRowClick</td>\n<td>Callback fires when a row is clicked</td>\n<td>(data: any, index: number, event: Event) => any</td>\n<td></td>\n<td>No</td>\n<td></td>\n</tr>\n<tr>\n<td>ellipsis</td>\n<td>Whether ellipsis should be displayed when content overflows (noWrap of columns needs to be set)</td>\n<td>bool</td>\n<td>false</td>\n<td>No</td>\n<td></td>\n</tr>\n<tr>\n<td>onExpand</td>\n<td>Callback fires when the row expand icon is clicked</td>\n<td>(data: {expanded: boolean, data: any, event: Event, index: number}) => any</td>\n<td></td>\n<td>No</td>\n<td></td>\n</tr>\n<tr>\n<td>components</td>\n<td>Custom table element</td>\n<td>object { row?: ComponentType }</td>\n<td></td>\n<td>No</td>\n<td></td>\n</tr>\n<tr>\n<td>rowProps</td>\n<td>Custom row props</td>\n<td>(data: any, index: number) => object</td>\n<td></td>\n<td>No</td>\n<td></td>\n</tr>\n<tr>\n<td>bordered</td>\n<td>Whether to display the outer border and column border</td>\n<td>bool</td>\n<td><code>false</code></td>\n<td>No</td>\n<td></td>\n</tr>\n<tr>\n<td>batchRender</td>\n<td>Render batch operations</td>\n<td>(data: array, position?: \'header\' \n|\n \'foot\') => React.ReactNode</td>\n<td></td>\n<td>No</td>\n<td></td>\n</tr>\n<tr>\n<td>stickyBatch</td>\n<td>Automatically stick batch operation</td>\n<td>bool</td>\n<td><code>false</code></td>\n<td>No</td>\n<td></td>\n</tr>\n<tr>\n<td>autoStick</td>\n<td>Whether to stick the head to the window automatically</td>\n<td>bool</td>\n<td><code>false</code></td>\n<td>No</td>\n<td></td>\n</tr>\n<tr>\n<td>autoStickOffsetTop</td>\n<td>Custom offset of sticky head</td>\n<td>number</td>\n<td><code>false</code></td>\n<td>No</td>\n<td></td>\n</tr>\n<tr>\n<td>disableHoverHighlight</td>\n<td>Whether to disable mouse hover highlighting</td>\n<td>boolean</td>\n<td><code>false</code></td>\n<td>No</td>\n<td></td>\n</tr>\n<tr>\n<td>loadingProps</td>\n<td>All props in \n<code>BlockLoading</code>\n, exclude \n<code>loading</code></td>\n<td><code>Omit&#x3C;IBlockLoadingProps, \'loading\'></code></td>\n<td>-</td>\n<td>No</td>\n<td></td>\n</tr>\n<tr>\n<td>size</td>\n<td>Table Size</td>\n<td>string</td>\n<td><code>\'medium\'</code></td>\n<td>No</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h4 class="anchor-heading"><a href="#onchange-function-declaration">¶</a><a href="javascript:void(0)" id="onchange-function-declaration" class="anchor-point"></a>onChange function declaration</h4>\n<p>onChange will throw an object, which includes parameters about the change part of pagination.</p>\n<pre><code class="language-js"><span class="token punctuation">{</span>\n  current<span class="token punctuation">,</span> <span class="token comment">// {Number} the current page</span>\n  sortBy<span class="token punctuation">,</span> <span class="token comment">// {String} the key which rows are sorted according to</span>\n  sortType<span class="token punctuation">,</span> <span class="token comment">// {String} [\'asc\', \'desc\', \'\'] the way to sort</span>\n  pageSize<span class="token punctuation">,</span> <span class="token comment">// {Number} page size</span>\n<span class="token punctuation">}</span></code></pre>\n<h4 class="anchor-heading"><a href="#columns">¶</a><a href="javascript:void(0)" id="columns" class="anchor-point"></a>Columns</h4>\n<table class="table">\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Required</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>title</td>\n<td>column title</td>\n<td>ReactNode</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>name</td>\n<td>key for the corresponding data(recommended to be set).</td>\n<td>string</td>\n<td>No</td>\n</tr>\n<tr>\n<td>width</td>\n<td>column width</td>\n<td>string \n|\n number</td>\n<td>No</td>\n</tr>\n<tr>\n<td>bodyRender</td>\n<td>Render complex component</td>\n<td>((data: any, pos: {row: number, column: number, fixed?: \'left\' \n|\n \'right\'}, name: string) => ReactNode) \n|\n ReactNode</td>\n<td>No</td>\n</tr>\n<tr>\n<td>className</td>\n<td>class name of the column title</td>\n<td>string</td>\n<td>No</td>\n</tr>\n<tr>\n<td>needSort</td>\n<td>whether to support sorting</td>\n<td>bool</td>\n<td>No</td>\n</tr>\n<tr>\n<td>colSpan</td>\n<td>span of columns. It won\'t be rendered if the value is set to 0</td>\n<td>number</td>\n<td>No</td>\n</tr>\n<tr>\n<td>fixed</td>\n<td>whether columns fixed or not. The value can be \n<code>left</code>\n \n<code>right</code>\n \n<code>true</code>\n (\n<code>true</code>\n is same to \n<code>left</code>\n)</td>\n<td>bool \n|\n strig</td>\n<td>No</td>\n</tr>\n<tr>\n<td>onCellClick</td>\n<td>callback fires when a cell is clicked</td>\n<td>(data: any, event: Event) => any</td>\n<td>No</td>\n</tr>\n<tr>\n<td>textAlign</td>\n<td>Text alignment</td>\n<td>string</td>\n<td>No</td>\n</tr>\n<tr>\n<td>noWrap</td>\n<td>Don\'t wrap text</td>\n<td>bool</td>\n<td>No</td>\n</tr>\n<tr>\n<td>defaultText</td>\n<td>Default display text</td>\n<td>ReactNode</td>\n<td>No</td>\n</tr>\n<tr>\n<td>children</td>\n<td>Render grouping table headers</td>\n<td>array</td>\n<td>No</td>\n</tr>\n<tr>\n<td>isValueEmpty</td>\n<td>Callback to test whether show the default text</td>\n<td>(value: any) => boolean</td>\n<td>No</td>\n</tr>\n</tbody>\n</table>\n<h4 class="anchor-heading"><a href="#selection">¶</a><a href="javascript:void(0)" id="selection" class="anchor-point"></a>Selection</h4>\n<table class="table">\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Required</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>selectedRowKeys</td>\n<td>keys of selected rows by default</td>\n<td>array</td>\n<td>No</td>\n<td></td>\n</tr>\n<tr>\n<td>onSelect</td>\n<td>callback fires when a check changes</td>\n<td>(selectedkeys: string[], selectedRows: Array\n, changeRow: any</td>\n<td>any[]) => any</td>\n<td>No</td>\n</tr>\n<tr>\n<td>getCheckboxProps</td>\n<td><strong>Depreciated use getSelectionProps</strong>\n function to get properties of the checkbox/radio</td>\n<td>(data: object) => { disabled?: boolean, reason?: ReactNode }</td>\n<td>No</td>\n<td></td>\n</tr>\n<tr>\n<td>getSelectionProps</td>\n<td>function to get properties of the checkbox/radio</td>\n<td>(data: object) => { disabled?: boolean, reason?: ReactNode }</td>\n<td>No</td>\n<td></td>\n</tr>\n<tr>\n<td>isSingleSelection</td>\n<td>Radio or not</td>\n<td>bool</td>\n<td>No</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 class="anchor-heading"><a href="#gridcolumnprovider">¶</a><a href="javascript:void(0)" id="gridcolumnprovider" class="anchor-point"></a>GridColumnProvider</h3>\n<p>Support all <code>columns</code> props.</p>\n<h4 class="anchor-heading"><a href="#pageinfo">¶</a><a href="javascript:void(0)" id="pageinfo" class="anchor-point"></a>pageInfo</h4>\n<table class="table">\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Required</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>total</td>\n<td>Total number of items</td>\n<td>number</td>\n<td>No</td>\n</tr>\n<tr>\n<td>pageSize</td>\n<td>Number of items to be displayed per page</td>\n<td>number</td>\n<td>No</td>\n</tr>\n<tr>\n<td>pageSizeOptions</td>\n<td>Page size options</td>\n<td>number[]</td>\n<td>No</td>\n</tr>\n<tr>\n<td>current</td>\n<td>current page</td>\n<td>number</td>\n<td>No</td>\n</tr>\n</tbody>\n</table>\n<h3 class="anchor-heading"><a href="#expandation">¶</a><a href="javascript:void(0)" id="expandation" class="anchor-point"></a>Expandation</h3>\n<table class="table">\n<thead>\n<tr>\n<th>Props</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n<th>Required</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>isExpanded</td>\n<td>Whether to expand the current row</td>\n<td>(record: any, index: number) => boolean</td>\n<td></td>\n<td>no</td>\n</tr>\n<tr>\n<td>expandRender</td>\n<td>Render function of expanded row\'s additional content</td>\n<td>(data: any) => ReactNode</td>\n<td></td>\n<td>no</td>\n</tr>\n</tbody>\n</table>'}))}}},62640:(n,s,a)=>{"use strict";a.d(s,{J:()=>t});var t=a(78193).E.Provider},56377:(n,s,a)=>{"use strict";a.d(s,{r:()=>u});var t=a(93646),p=a(24246),o=a(27378),e=a(60042),c=a.n(e),l=a(1348),u=function(n){function s(){var s=null!==n&&n.apply(this,arguments)||this;return s.toggle=function(){var n=s.props,a=n.onChange,t=n.checked;a&&a(!t)},s}return(0,t.ZT)(s,n),s.prototype.render=function(){var n,s=this.props,a=s.className,t=s.size,o=s.disabled,e=void 0===o?this.context.value:o,l=s.loading,u=s.checked,i=e||l,k=c()(((n={})["zent-switch-"+t]="default"!==t,n["zent-switch-disabled"]=i,n["zent-switch-loading"]=l,n["zent-switch-checked"]=u,n),"zent-switch",a);return(0,p.jsx)("div",{className:k,onClick:i?void 0:this.toggle,"data-zv":"10.0.0-beta.1"},void 0)},s.defaultProps={size:"default"},s.contextType=l.d,s}(o.Component);s.Z=u}}]);