(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{756:function(n,a,s){"use strict";s.r(a),s.d(a,"default",function(){return J});var t=s(705),p=s.n(t),o=s(43),e=s.n(o),c=s(25),l=s.n(c),u=s(30),i=s.n(u),k=s(31),r=s.n(k),d=s(32),m=s.n(d),g=s(33),h=s.n(g),v=s(34),f=s.n(v),y=s(0),F=s.n(y),b=s(174),w=s(125),E=s(712),x=s.n(E),z=s(1),C=s.n(z),S=function(){w.x.Field;var n=w.x.FormInputField,a=w.x.createForm,s=function(a){function s(){return i()(this,s),m()(this,h()(s).apply(this,arguments))}return f()(s,a),r()(s,[{key:"render",value:function(){return F.a.createElement(w.x,{horizontal:!0},F.a.createElement(n,{name:"name",type:"text",label:F.a.createElement("span",null,"用户名 ",F.a.createElement(w.R,{trigger:"hover",content:"用户名用于个人账号登录",centerArrow:!0},F.a.createElement(w.A,{type:"error-circle-o"})),":"),helpDesc:"用户名为5-25个字符",required:!0}),F.a.createElement(n,{name:"password",type:"password",label:"密码:",helpDesc:F.a.createElement("span",null,"密码由6-20位英文字母、数字组成，",F.a.createElement("a",{href:"https://youzan.com",target:"_blank"},"查看更多")),notice:"重要提示：填写后无法修改，请谨慎设置",required:!0}))}}]),s}(F.a.Component),t=a()(s);return F.a.createElement(t,null)},N=function(){w.x.Field;var n=w.x.FormInputField,a=w.x.FormSelectField,s=w.x.FormRadioGroupField,t=w.x.FormCheckboxField,p=w.x.FormCheckboxGroupField,o=w.x.FormColorPickerField,c=w.x.FormDateRangePickerField,u=w.x.FormNumberInputField,k=w.x.FormSwitchField,d=w.x.createForm,g=function(d){function g(){var n,a;i()(this,g);for(var s=arguments.length,t=new Array(s),p=0;p<s;p++)t[p]=arguments[p];return a=m()(this,(n=h()(g)).call.apply(n,[this].concat(t))),l()(e()(a),"state",{checkedList:[]}),l()(e()(a),"onCheckboxChange",function(n){a.setState({checkedList:n})}),l()(e()(a),"submit",function(n,a){w.N.success(JSON.stringify(n))}),l()(e()(a),"resetForm",function(){a.props.zentForm.resetFieldsValue()}),a}return f()(g,d),r()(g,[{key:"render",value:function(){var e=this.props.handleSubmit;return F.a.createElement(w.x,{horizontal:!0,onSubmit:e(this.submit)},F.a.createElement(n,{name:"name",type:"text",label:"昵称:",required:!0,spellCheck:!1,validations:{required:!0},validationErrors:{required:"请填写昵称"}}),F.a.createElement(a,{name:"type",label:"类型:",data:[{value:1,text:"普通用户"},{value:2,text:"高级用户"}],required:!0,validations:{required:!0},validationErrors:{required:"请选择类型"}}),F.a.createElement(s,{name:"sex",label:"性别:",required:!0,validations:{required:function(n,a){return""!==a}},validationErrors:{required:"请选择性别"}},F.a.createElement(w.X,{value:"1"},"男"),F.a.createElement(w.X,{value:"2"},"女")),F.a.createElement(p,{name:"hobbies",label:"兴趣标签:",value:this.state.checkedList,onChange:this.onCheckboxChange,required:!0,validations:{minLength:1},validationErrors:{minLength:"请选择标签"}},F.a.createElement(w.n,{value:"movie"},"电影"),F.a.createElement(w.n,{value:"book"},"书籍"),F.a.createElement(w.n,{value:"travel"},"旅行")),F.a.createElement(u,{name:"age",label:"年龄:",showStepper:!0,value:12}),F.a.createElement(o,{name:"color",label:"喜欢的颜色:",value:"#5197FF"}),F.a.createElement(c,{name:"dateRange",label:"身份证有效期:",type:"split",value:[],dateFormat:"YYYY-MM-DD HH:mm:ss",validations:{required:function(n,a){return!!a[0]&&!!a[1]}},validationErrors:{required:"请填写有效期"}}),F.a.createElement(k,{name:"isPublic",label:"公开个人信息:",value:!1}),F.a.createElement(t,{name:"agree",label:"同意许可条例:"},"是"),F.a.createElement("div",{className:"zent-form__form-actions"},F.a.createElement(w.i,{type:"primary",htmlType:"submit"},"获取表单值"),F.a.createElement(w.i,{type:"primary",outline:!0,onClick:this.resetForm},"重置表单值")))}}]),g}(F.a.Component),v=d({scrollToError:!0})(g);return F.a.createElement(v,null)},j=function(){var n=w.x.Field,a=w.x.createForm,s=w.x.getControlGroup,t=w.x.unknownProps,o=s(function(n){function a(){var n,s;i()(this,a);for(var t=arguments.length,p=new Array(t),o=0;o<t;o++)p[o]=arguments[o];return s=m()(this,(n=h()(a)).call.apply(n,[this].concat(p))),l()(e()(s),"wrappedOnChange",function(n){s.props.onChange(n)}),s}return f()(a,n),r()(a,[{key:"render",value:function(){var n=x()(this.props,t),a=this.props.value;return F.a.createElement("div",null,F.a.createElement(w.pb,p()({},n,{onUpload:this.wrappedOnChange,localOnly:!0})),a&&a.map(function(n,a){return F.a.createElement("img",{width:"80",height:"80",key:a,src:n.src,style:{marginLeft:"10px"}})}))}}]),a}(F.a.Component)),c=function(a){function s(){var n,a;i()(this,s);for(var t=arguments.length,p=new Array(t),o=0;o<t;o++)p[o]=arguments[o];return a=m()(this,(n=h()(s)).call.apply(n,[this].concat(p))),l()(e()(a),"updateLocalImage",function(n){return new Promise(function(a){a(n)})}),l()(e()(a),"submit",function(n,a){w.N.success(JSON.stringify(n))}),l()(e()(a),"resetForm",function(){a.props.zentForm.resetFieldsValue()}),a}return f()(s,a),r()(s,[{key:"render",value:function(){var a=this.props.handleSubmit;return F.a.createElement(w.x,{horizontal:!0,onSubmit:a(this.submit)},F.a.createElement(n,{name:"imgs",label:"资料:",component:o,value:[],maxSize:8e6,triggerInline:!0,tips:"建议尺寸：640 x 640 像素；",onUpload:this.updateLocalImage}),F.a.createElement("div",{className:"zent-form__form-actions"},F.a.createElement(w.i,{type:"primary",htmlType:"submit"},"获取表单值"),F.a.createElement(w.i,{type:"primary",outline:!0,onClick:this.resetForm},"重置表单值")))}}]),s}(F.a.Component),u=a()(c);return F.a.createElement(u,null)},q=function(){var n=w.x.Field,a=w.x.createForm,s=w.Z.SelectTrigger,t=[{code:"+86",zh:"zhongguo",eng:"china",value:"中国 +86",index:0},{code:"+853",zh:"aomen",eng:"Macau",value:"中国澳门 +853",index:1}],p=function(n){function a(){var n,s;i()(this,a);for(var t=arguments.length,p=new Array(t),o=0;o<t;o++)p[o]=arguments[o];return s=m()(this,(n=h()(a)).call.apply(n,[this].concat(p))),l()(e()(s),"onSelectChange",function(n,a){var t={areacode:a.index};s.props.onChange(t,{merge:!0})}),l()(e()(s),"onPhoneChange",function(n){var a=s.props.value,t=Object.assign({},a,{mobile:n.target.value});s.props.onChange(t)}),l()(e()(s),"filterHandler",function(n,a){return a&&n.text.trim().toLowerCase().indexOf(a.trim().toLowerCase())>-1}),s}return f()(a,n),r()(a,[{key:"render",value:function(){var n=this.props,a=n.value,t=n.displayError,p=void 0===t?n.isDirty&&null!==n.error:t,o=n.helpDesc,e=C()({"zent-form__control-group":!0,"has-error":p});return F.a.createElement("div",{className:e},F.a.createElement("label",{className:"zent-form__control-label"},"联系方式:"),F.a.createElement("div",{className:"zent-form__controls"},F.a.createElement("div",{style:{display:"flex"}},F.a.createElement(w.Z,{className:"areacode",value:a.areacode,data:n.areadata,filter:this.filterHandler,optionValue:"index",optionText:"value",trigger:s,onChange:this.onSelectChange}),F.a.createElement(w.D,{className:"phone-num",placeholder:"请填写手机号",value:a.mobile,onChange:this.onPhoneChange,width:160})),p&&F.a.createElement("p",{className:"zent-form__error-desc"},n.error),o&&F.a.createElement("p",{className:"zent-form__help-desc"},o)))}}]),a}(F.a.Component),o=function(a){function s(){var n,a;i()(this,s);for(var t=arguments.length,p=new Array(t),o=0;o<t;o++)p[o]=arguments[o];return a=m()(this,(n=h()(s)).call.apply(n,[this].concat(p))),l()(e()(a),"getFormValues",function(){var n=a.props.zentForm;w.N.success(JSON.stringify(n.getFormValues()))}),l()(e()(a),"resetForm",function(){a.props.zentForm.resetFieldsValue()}),a}return f()(s,a),r()(s,[{key:"render",value:function(){return F.a.createElement(w.x,{horizontal:!0},F.a.createElement(n,{name:"contactPhone",value:{areacode:1,mobile:15899776666},areadata:t,component:p,helpDesc:"目前仅支持中国内陆地区和澳门地区电话号码",validations:{validMobile:function(n,a){var s=+a.mobile;return/^\d{1,10}$/.test(s)}},validationErrors:{validMobile:"请输入正确的手机号"}}),F.a.createElement("div",{className:"zent-form__form-actions"},F.a.createElement(w.i,{type:"primary",onClick:this.getFormValues},"获取表单值"),F.a.createElement(w.i,{type:"primary",outline:!0,onClick:this.resetForm},"重置表单值")))}}]),s}(F.a.Component),c=a()(o);return F.a.createElement(c,null)},R=function(){w.x.Field;var n=w.x.FormInputField,a=w.x.FormCheckboxGroupField,s=w.x.createForm,t=function(s){function t(){var n,a;i()(this,t);for(var s=arguments.length,p=new Array(s),o=0;o<s;o++)p[o]=arguments[o];return a=m()(this,(n=h()(t)).call.apply(n,[this].concat(p))),l()(e()(a),"state",{checkedList:[]}),l()(e()(a),"onCheckboxChange",function(n){a.setState({checkedList:n})}),l()(e()(a),"submit",function(n,a){w.N.success(JSON.stringify(n))}),l()(e()(a),"resetForm",function(){a.props.zentForm.resetFieldsValue()}),a}return f()(t,s),r()(t,[{key:"render",value:function(){var s=this.props.handleSubmit;return F.a.createElement(w.x,{horizontal:!0,onSubmit:s(this.submit)},F.a.createElement(n,{name:"name",type:"text",label:"昵称:",required:!0,helpDesc:"正则校验",validations:{required:!0,matchRegex:/^[a-zA-Z]+$/},validationErrors:{required:"请填写昵称",matchRegex:"昵称只能是字母"}}),F.a.createElement(n,{name:"password",type:"text",label:"密码:",required:!0,helpDesc:"非空校验",validations:{required:!0},validationErrors:{required:"请填写密码"}}),F.a.createElement(n,{name:"confirmPw",type:"text",label:"确认密码:",required:!0,helpDesc:"与其他表单域对比校验",validations:{equalsField:"password"},validationErrors:{equalsField:"两次填写的密码不一致"}}),F.a.createElement(n,{name:"email",type:"text",label:"邮件:",helpDesc:"邮件校验",validations:{isEmail:!0},validationErrors:{isEmail:"请填写正确的邮件"}}),F.a.createElement(n,{name:"url",type:"text",label:"个人网站链接:",helpDesc:"超链接校验",validations:{isUrl:!0},validationErrors:{isUrl:"请填写正确的网址"}}),F.a.createElement(n,{name:"id",type:"text",label:"证件号码:",required:!0,helpDesc:"自定义校验函数",validations:{matchRegex:/^\d+$/,format:function(n,a){return 15===a.length||10===a.length}},validationErrors:{matchRegex:"证件号码必须是数字",format:"证件号码是10位或者15位数字"}}),F.a.createElement(a,{name:"hobbies",type:"text",label:"兴趣标签:",value:this.state.checkedList,onChange:this.onCheckboxChange,required:!0,helpDesc:"长度校验",validations:{minLength:2},validationErrors:{minLength:"请至少选择两个"}},F.a.createElement(w.n,{value:"movie"},"电影"),F.a.createElement(w.n,{value:"book"},"书籍"),F.a.createElement(w.n,{value:"travel"},"旅行")),F.a.createElement("div",{className:"zent-form__form-actions"},F.a.createElement(w.i,{type:"primary",htmlType:"submit"},"获取表单值"),F.a.createElement(w.i,{type:"primary",outline:!0,onClick:this.resetForm},"重置表单值")))}}]),t}(F.a.Component),p=s()(t);return F.a.createElement(p,null)},A=function(){w.x.Field;var n=w.x.FormInputField,a=w.x.createForm,s=function(a){function s(){var n,a;i()(this,s);for(var t=arguments.length,p=new Array(t),o=0;o<t;o++)p[o]=arguments[o];return a=m()(this,(n=h()(s)).call.apply(n,[this].concat(p))),l()(e()(a),"submit",function(n){w.N.success(JSON.stringify(n))}),a}return f()(s,a),r()(s,[{key:"render",value:function(){var a=this.props,s=a.handleSubmit,t=a.zentForm;return F.a.createElement(w.x,{horizontal:!0,onSubmit:s(this.submit)},F.a.createElement(n,{name:"field1",type:"text",label:"Change时校验:",validations:{required:!0,matchRegex:/^[a-zA-Z]+$/},validationErrors:{required:"值不能为空",matchRegex:"只能为字母"}}),F.a.createElement(n,{name:"field2",type:"text",label:"Blur时校验:",validateOnChange:!1,validations:{required:!0,matchRegex:/^[a-zA-Z]+$/},validationErrors:{required:"值不能为空",matchRegex:"只能为字母"}}),F.a.createElement(n,{name:"field3",type:"text",label:"submit时校验:",validateOnChange:!1,validateOnBlur:!1,validations:{required:!0,matchRegex:/^[a-zA-Z]+$/},validationErrors:{required:"值不能为空",matchRegex:"只能为字母"}}),F.a.createElement(n,{name:"field4",type:"text",label:"自定义错误显示:",displayError:t.isFormSubmitFail()&&!!t.getFieldError("field4"),validations:{required:!0,matchRegex:/^[a-zA-Z]+$/},validationErrors:{required:"值不能为空",matchRegex:"只能为字母"}}),F.a.createElement("div",{className:"zent-form__form-actions"},F.a.createElement(w.i,{type:"primary",htmlType:"submit"},"获取表单值")))}}]),s}(F.a.Component),t=a()(s);return F.a.createElement(t,null)},I=function(){w.x.Field;var n=w.x.FormInputField,a=w.x.createForm,s=function(a){function s(){var n,a;i()(this,s);for(var t=arguments.length,p=new Array(t),o=0;o<t;o++)p[o]=arguments[o];return a=m()(this,(n=h()(s)).call.apply(n,[this].concat(p))),l()(e()(a),"asyncValidation",function(n,a){return new Promise(function(n,s){return setTimeout(function(){"pangxie"===a?s("pangxie 已被占用"):n()},1e3)})}),l()(e()(a),"asyncValidation2",function(n,a){return new Promise(function(n,s){return setTimeout(function(){"pangxie2"===a?s("pangxie2 已被占用"):n()},1e3)})}),l()(e()(a),"submit",function(n){w.N.success(JSON.stringify(n))}),a}return f()(s,a),r()(s,[{key:"render",value:function(){var a=this.props,s=a.handleSubmit,t=a.zentForm.isSubmitting();return F.a.createElement(w.x,{horizontal:!0,onSubmit:s(this.submit)},F.a.createElement(n,{name:"name",type:"text",label:"用户名:",value:"pangxie",validations:{required:!0,matchRegex:/[a-zA-Z]+/},validationErrors:{required:"用户名不能为空",matchRegex:"用户名必须是字母"},asyncValidation:this.asyncValidation,helpDesc:"试试输入pangxie"}),F.a.createElement(n,{name:"name2",type:"text",label:"用户名:",value:"pangxie2",asyncValidation:this.asyncValidation2,helpDesc:"试试输入pangxie2"}),F.a.createElement("div",{className:"zent-form__form-actions"},F.a.createElement(w.i,{type:"primary",htmlType:"submit",loading:t},"获取表单值")))}}]),s}(F.a.Component),t=a()(s);return F.a.createElement(t,null)},_=function(){w.x.Field;var n=w.x.FormInputField,a=w.x.createForm,s=function(a){function s(){var n,a;i()(this,s);for(var t=arguments.length,p=new Array(t),o=0;o<t;o++)p[o]=arguments[o];return a=m()(this,(n=h()(s)).call.apply(n,[this].concat(p))),l()(e()(a),"lower",function(n){return n&&n.toLowerCase()}),l()(e()(a),"upper",function(n){return n&&n.toUpperCase()}),a}return f()(s,a),r()(s,[{key:"render",value:function(){return F.a.createElement(w.x,{horizontal:!0},F.a.createElement(n,{name:"field1",type:"text",label:"To Lower:",value:"AAA",normalize:this.lower,format:this.lower}),F.a.createElement(n,{name:"field2",type:"text",label:"To Upper:",value:"bbb",normalize:this.upper,format:this.upper}))}}]),s}(F.a.Component),t=a()(s);return F.a.createElement(t,null)},D=function(){var n=w.x.FormInputField,a=w.x.createForm,s=w.x.SubmissionError;var t=function(a){function t(){var n,a;i()(this,t);for(var p=arguments.length,o=new Array(p),c=0;c<p;c++)o[c]=arguments[c];return a=m()(this,(n=h()(t)).call.apply(n,[this].concat(o))),l()(e()(a),"submit",function(n,a){return new Promise(function(n){return setTimeout(n,1e3)}).then(function(){if(10*Math.random()>4)throw a.setFieldExternalErrors({user:"用户名已被占用"}),new s("用户名已被占用");return"注册成功"})}),l()(e()(a),"resetForm",function(){a.props.zentForm.resetFieldsValue()}),a}return f()(t,a),r()(t,[{key:"render",value:function(){var a=this.props,s=a.handleSubmit,t=a.zentForm.isSubmitting();return F.a.createElement(w.x,{onSubmit:s(this.submit),horizontal:!0},F.a.createElement(n,{name:"user",type:"text",label:"用户名:",value:"111",validations:{required:!0},validationErrors:{required:"用户名不能为空"}}),F.a.createElement(n,{name:"password",type:"password",label:"密码:",value:"222",validations:{required:!0},validationErrors:{required:"密码不能为空"}}),F.a.createElement(n,{name:"confirmPassword",type:"password",label:"确认密码:",value:"222",validations:{required:!0,isPasswordEqual:function(n,a){return n.password===a||"两次填写的密码不一致"}},validationErrors:{required:"确认密码不能为空"}}),F.a.createElement("div",{className:"zent-form__form-actions"},F.a.createElement(w.i,{type:"primary",htmlType:"submit",loading:t},"注册"),F.a.createElement(w.i,{type:"primary",outline:!0,onClick:this.resetForm},"重置")))}}]),t}(F.a.Component),p=a()(t);return F.a.createElement(p,{scrollToError:!0,onSubmitFail:function(n){w.N.error(n)},onSubmitSuccess:function(n){w.N.success(n)}})},V=function(){w.x.Field;var n=w.x.FormInputField,a=w.x.createForm,s=function(a){function s(){var n,a;i()(this,s);for(var t=arguments.length,p=new Array(t),o=0;o<t;o++)p[o]=arguments[o];return a=m()(this,(n=h()(s)).call.apply(n,[this].concat(p))),l()(e()(a),"submit",function(n,a){w.N.success(JSON.stringify(n))}),l()(e()(a),"setError",function(){a.props.zentForm.setFieldExternalErrors({name:"用户名不能为空"})}),l()(e()(a),"initialize",function(){a.props.zentForm.initialize({name:"0",age:"0",password:"0"})}),l()(e()(a),"setFieldsValue",function(){a.props.zentForm.setFieldsValue({name:"3"})}),l()(e()(a),"reset",function(){a.props.zentForm.resetFieldsValue()}),a}return f()(s,a),r()(s,[{key:"render",value:function(){var a=this.props,s=a.handleSubmit,t=a.zentForm.isSubmitting();return F.a.createElement(w.x,{onSubmit:s(this.submit),horizontal:!0},F.a.createElement(n,{name:"name",type:"text",label:"用户名:",value:"1",validations:{required:!0},validationErrors:{required:"用户名不能为空"}}),F.a.createElement(n,{name:"age",type:"text",label:"年龄:",value:"1",validations:{required:!0},validationErrors:{required:"年龄不能为空"}}),F.a.createElement(n,{name:"password",type:"text",label:"密码:",value:"1",validations:{required:!0},validationErrors:{required:"密码不能为空"}}),F.a.createElement(n,{name:"confirmPassword",type:"text",label:"确认密码:",value:"1",validations:{required:!0,isPasswordEqual:function(n,a){return n.password===a||"两次填写的密码不一致"}},validationErrors:{required:"确认密码不能为空"}}),F.a.createElement("div",{className:"zent-form__form-actions"},F.a.createElement(w.i,{type:"primary",htmlType:"submit",loading:t},"获取表单值"),F.a.createElement(w.i,{type:"primary",outline:!0,onClick:this.initialize},"初始化表单"),F.a.createElement(w.i,{type:"primary",outline:!0,onClick:this.setFieldsValue},"设置表单值"),F.a.createElement(w.i,{type:"primary",outline:!0,onClick:this.reset},"重置")))}}]),s}(F.a.Component),t=a()(s);return F.a.createElement(t,null)},P=function(){w.x.Field;var n=w.x.FormInputField,a=w.x.createForm,s=w.X.Group,t=function(a){function t(){var n,a;i()(this,t);for(var s=arguments.length,p=new Array(s),o=0;o<s;o++)p[o]=arguments[o];return a=m()(this,(n=h()(t)).call.apply(n,[this].concat(p))),l()(e()(a),"state",{formLayout:"vertical"}),l()(e()(a),"onRadioChange",function(n){a.setState({formLayout:n.target.value})}),l()(e()(a),"submit",function(n,a){w.N.success(JSON.stringify(n))}),a}return f()(t,a),r()(t,[{key:"render",value:function(){var a=this.state.formLayout,t=this.props.handleSubmit;return F.a.createElement("div",null,F.a.createElement(s,{value:a,onChange:this.onRadioChange,className:"form-layout"},F.a.createElement(w.X,{value:"vertical"},"vertical"),F.a.createElement(w.X,{value:"horizontal"},"horizontal"),F.a.createElement(w.X,{value:"inline"},"inline")),F.a.createElement(w.x,{inline:"inline"===a,horizontal:"horizontal"===a,onSubmit:t(this.submit)},F.a.createElement(n,{name:"name",type:"text",label:"用户名:",value:""}),F.a.createElement(n,{name:"name2",type:"text",label:"用户名2:",value:""}),F.a.createElement("div",{className:"zent-form__form-actions"},F.a.createElement(w.i,{type:"primary",htmlType:"submit"},"获取表单值"))))}}]),t}(F.a.Component),p=a()(t);return F.a.createElement(p,null)},B=function(){w.x.Field;var n=w.x.Fieldset,a=w.x.FormInputField,s=w.x.createForm,t=function(s){function t(){var n,a;i()(this,t);for(var s=arguments.length,p=new Array(s),o=0;o<s;o++)p[o]=arguments[o];return a=m()(this,(n=h()(t)).call.apply(n,[this].concat(p))),l()(e()(a),"submit",function(n,a){w.N.success(JSON.stringify(n))}),a}return f()(t,s),r()(t,[{key:"render",value:function(){var s=this.props.handleSubmit;return F.a.createElement(w.x,{horizontal:!0,onSubmit:s(this.submit)},F.a.createElement(n,{legend:"Fieldset1"},F.a.createElement(a,{name:"name",type:"text",label:"用户名:",value:""})),F.a.createElement(n,{legend:"Fieldset2"},F.a.createElement(a,{name:"name2",type:"text",label:"用户名2:",value:""})),F.a.createElement("div",{className:"zent-form__form-actions"},F.a.createElement(w.i,{type:"primary",htmlType:"submit"},"获取表单值")))}}]),t}(F.a.Component),p=s()(t);return F.a.createElement(p,null)},O=function(){w.x.Field;var n=w.x.FormSection,a=w.x.FormInputField,s=w.x.createForm,t=function(n){function s(){return i()(this,s),m()(this,h()(s).apply(this,arguments))}return f()(s,n),r()(s,[{key:"render",value:function(){return F.a.createElement("div",null,F.a.createElement(a,{name:"streetName",label:"街道:",type:"text",validations:{required:!0,maxLength:5},validationErrors:{required:"街道必填",maxLength:"超过最大长度"}}),F.a.createElement(a,{name:"number",label:"门牌号:",type:"text",validations:{required:!0,minLength:6},validationErrors:{required:"门牌号必填",minLength:"不足最小长度"}}),F.a.createElement(a,{name:"zipCode",label:"邮政编码:",type:"text"}))}}]),s}(F.a.Component),p=function(s){function p(){return i()(this,p),m()(this,h()(p).apply(this,arguments))}return f()(p,s),r()(p,[{key:"render",value:function(){return F.a.createElement("div",null,F.a.createElement(a,{name:"name",label:"名字:",type:"text"}),F.a.createElement(a,{name:"mobile",label:"手机号:",type:"text"}),F.a.createElement(n,{name:"address"},F.a.createElement(t,null)))}}]),p}(F.a.Component),o=function(s){function t(){var n,a;i()(this,t);for(var s=arguments.length,p=new Array(s),o=0;o<s;o++)p[o]=arguments[o];return a=m()(this,(n=h()(t)).call.apply(n,[this].concat(p))),l()(e()(a),"submit",function(n,a){w.N.success(JSON.stringify(n))}),l()(e()(a),"setError",function(){a.props.zentForm.setFieldExternalErrors({orderNo:"订单号错误",buyer:{mobile:["手机号错误","test"]},recipient:{address:{zipCode:"格式不对"},mobile:"请重填手机号"}})}),l()(e()(a),"initialize",function(){a.props.zentForm.initialize({orderNo:"E1111111",buyer:{mobile:13423532345,name:"Allen",address:{number:14234,zipCode:2222}},recipient:{mobile:13245343533,name:"Selina",address:{number:14234,zipCode:2222}}})}),l()(e()(a),"setFieldsValue",function(){a.props.zentForm.setFieldsValue({orderNo:"E143423",buyer:{name:"Sherldon",address:{number:1111111,zipCode:11111}},recipient:{name:"Leonard",address:{number:11111,zipCode:1111}}})}),l()(e()(a),"reset",function(){a.props.zentForm.resetFieldsValue()}),a}return f()(t,s),r()(t,[{key:"render",value:function(){var s=this.props.handleSubmit;return F.a.createElement(w.x,{horizontal:!0,onSubmit:s(this.submit)},F.a.createElement(a,{name:"orderNo",label:"订单号:",type:"text"}),F.a.createElement(n,{name:"buyer"},F.a.createElement("div",{className:"sec-label"},"购买者信息"),F.a.createElement(p,null)),F.a.createElement(n,{name:"recipient"},F.a.createElement("div",{className:"sec-label"},"发票信息"),F.a.createElement(p,null)),F.a.createElement("div",{className:"zent-form__form-actions"},F.a.createElement(w.i,{type:"primary",htmlType:"submit"},"获取表单值"),F.a.createElement(w.i,{type:"primary",onClick:this.setError},"设置额外错误"),F.a.createElement(w.i,{type:"primary",onClick:this.initialize},"初始化表单"),F.a.createElement(w.i,{type:"primary",onClick:this.setFieldsValue},"设置表单值"),F.a.createElement(w.i,{type:"primary",onClick:this.reset},"重置")))}}]),t}(F.a.Component),c=s()(o);return F.a.createElement(c,null)},L=function(){w.x.Field;var n=w.x.FormInputField,a=w.x.FormRadioGroupField,s=w.x.createForm,t=w.x.FormSection,p=w.x.FieldArray,o=function(a){function s(){return i()(this,s),m()(this,h()(s).apply(this,arguments))}return f()(s,a),r()(s,[{key:"render",value:function(){var a=this.props.fields;return F.a.createElement("ul",null,F.a.createElement(w.i,{onClick:function(){return a.push()},className:"add-btn"},"添加兴趣爱好"),a.map(function(s,t,p){return F.a.createElement("li",{className:"hobbies",key:"hobby".concat(p)},F.a.createElement(n,{name:"".concat(s),type:"text",label:"兴趣爱好".concat(t+1,":"),validations:{required:!0},validationErrors:{required:"请填写兴趣爱好"}}),F.a.createElement("span",{className:"del-btn",onClick:function(){return a.remove(t)}},"删除该爱好"))}))}}]),s}(F.a.Component),c=function(s){function t(){return i()(this,t),m()(this,h()(t).apply(this,arguments))}return f()(t,s),r()(t,[{key:"render",value:function(){var s=this.props,t=s.fields,e=s.index;return F.a.createElement("li",{className:"members"},F.a.createElement("div",{className:"member-title"},F.a.createElement("span",null,"成员",e+1),F.a.createElement(w.R,{centerArrow:!0,trigger:"hover",content:"删除该成员"},F.a.createElement(w.A,{className:"del-btn",type:"close-circle",onClick:function(){return t.remove(e)}}))),F.a.createElement(n,{name:"name",type:"text",label:"名字:",required:!0,validations:{required:!0},validationErrors:{required:"请填写成员名字"}}),F.a.createElement(a,{name:"sex",label:"性别:",required:!0,validations:{required:function(n,a){return""!==a}},validationErrors:{required:"请选择性别"}},F.a.createElement(w.X,{value:"1"},"男"),F.a.createElement(w.X,{value:"2"},"女")),F.a.createElement(p,{name:"hobbies",component:o}))}}]),t}(F.a.Component),u=function(n){function a(){var n,s;i()(this,a);for(var t=arguments.length,p=new Array(t),o=0;o<t;o++)p[o]=arguments[o];return s=m()(this,(n=h()(a)).call.apply(n,[this].concat(p))),l()(e()(s),"addOne",function(){s.props.fields.push({})}),l()(e()(s),"addTwo",function(){s.props.fields.push({name:"john",sex:"1",hobbies:["H1","h4","h6"]}),s.props.fields.push({})}),s}return f()(a,n),r()(a,[{key:"render",value:function(){var n=this.props.fields;return F.a.createElement("ul",null,n.length<3&&F.a.createElement(w.i,{onClick:this.addOne,className:"add-btn"},"添加一个成员"),n.length<2&&F.a.createElement(w.i,{onClick:this.addTwo,className:"add-btn"},"添加两个成员"),n.map(function(a,s,p){return F.a.createElement(t,{name:a,key:"member".concat(p)},F.a.createElement(c,{fields:n,index:s}))}))}}]),a}(F.a.Component),k=function(a){function s(){var n,a;i()(this,s);for(var t=arguments.length,p=new Array(t),o=0;o<t;o++)p[o]=arguments[o];return a=m()(this,(n=h()(s)).call.apply(n,[this].concat(p))),l()(e()(a),"submit",function(n,a){w.N.success(JSON.stringify(n))}),l()(e()(a),"setArray",function(){a.props.zentForm.setFieldsValue({number:42,members:[{name:"john",sex:"1",hobbies:["H1"]}]})}),a}return f()(s,a),r()(s,[{key:"componentDidMount",value:function(){this.props.zentForm.initialize({number:233,members:[{name:"john",sex:"1",hobbies:["HH2"]},{}]})}},{key:"render",value:function(){var a=this.props.handleSubmit;return F.a.createElement(w.x,{horizontal:!0,onSubmit:a(this.submit),className:"demo-form"},F.a.createElement(n,{name:"number",type:"text",label:"总人数:",required:!0,validations:{required:!0},validationErrors:{required:"请填写总人数"}}),F.a.createElement(p,{name:"members",component:u}),F.a.createElement("div",{className:"zent-form__form-actions"},F.a.createElement(w.i,{type:"primary",htmlType:"submit"},"获取表单值"),F.a.createElement(w.i,{onClick:this.setArray},"设置 FieldArray 值")))}}]),s}(F.a.Component),d=s()(k);return F.a.createElement(d,null)};function T(n){return F.a.createElement(n.tag,p()({},n.attributes,{dangerouslySetInnerHTML:{__html:n.html}}))}function G(n){return F.a.createElement(T,{tag:"section",html:n.html,attributes:{className:"zandoc-react-markdown"}})}function M(n){return F.a.createElement(T,{tag:"style",html:n.style})}var W=function(n){function a(){var n,s;i()(this,a);for(var t=arguments.length,p=new Array(t),o=0;o<t;o++)p[o]=arguments[o];return s=m()(this,(n=h()(a)).call.apply(n,[this].concat(p))),l()(e()(s),"state",{showCode:!1}),l()(e()(s),"toggle",function(){s.setState({showCode:!s.state.showCode})}),s}return f()(a,n),r()(a,[{key:"render",value:function(){var n=this.state.showCode,a=this.props,s=a.title,t=a.src,p=a.children;return F.a.createElement("div",{className:"zandoc-react-demo"},F.a.createElement("div",{className:"zandoc-react-demo__preview"},p),F.a.createElement("div",{className:"zandoc-react-demo__bottom",onClick:this.toggle},F.a.createElement("div",{className:"zandoc-react-demo__title"},F.a.createElement("p",null,s||"")),F.a.createElement("i",{className:"zenticon zenticon-caret-up zandoc-react-demo__toggle ".concat(n?"zandoc-react-demo__toggle-on":"zandoc-react-demo__toggle-off")})),n&&F.a.createElement("pre",{className:"zandoc-react-demo__code"},F.a.createElement(T,{tag:"code",html:t,attributes:{className:"language-jsx"}})))}}]),a}(y.Component),J=function(n){function a(){return i()(this,a),m()(this,h()(a).apply(this,arguments))}return f()(a,n),r()(a,[{key:"componentDidMount",value:function(){var n=location.hash;if(n){var a=document.querySelector('a[href="'.concat(n,'"]'));a&&Object(b.a)(document.documentElement,0,function n(a,s){for(;a;)return a.offsetTop&&"static"!==getComputedStyle(a).position&&(s+=a.offsetTop),n(a.parentNode,s);return s}(a,-9))}}},{key:"render",value:function(){return F.a.createElement("div",{className:"zandoc-react-container",key:null},F.a.createElement(M,{style:".zent-form__controls .zent-switch-small {\n\tmargin-top: 5px;\n}\n\n.form-layout {\n\tmargin-bottom: 30px;\n}\n\n.sec-label {\n\tcolor: #666;\n\tborder-bottom: 1px solid #e5e5e5;\n\tmargin-bottom: 20px;\n\tpadding-bottom: 5px;\n}\n\n.add-btn {\n\tmargin-left: 130px;\n}\n\n.demo-form .members {\n\t\tborder: 1px dashed #ccc;\n\t\tmargin: 20px 0;\n\t\tpadding: 10px 0;\n\t\tposition: relative;\n\t}\n\n.demo-form .members .del-btn {\n\t\t\tcolor: #666;\n\t\t\tcursor: pointer;\n\t\t\tposition: absolute;\n\t\t\tright: -8px;\n\t\t\ttop: -8px;\n\t\t}\n\n.demo-form .member-title{\n\t\tmargin: 0 10px;\n\t}\n\n.demo-form .hobbies {\n\t\tmargin-top: 20px;\n\t\tposition: relative;\n\t}\n\n.demo-form .hobbies .del-btn {\n\t\t\tcolor: #38f;\n\t\t\tcursor: pointer;\n\t\t\tfont-size: 12px;\n\t\t\tposition: absolute;\n\t\t\ttop: 6px;\n\t\t\tleft: 300px;\n\t\t}\n\n.demo-form .hobby-title {\n\t\tmargin: 10px 0 5px;\n\t}\n\n.demo-form .zenticon {\n\t\tmargin-left: 10px;\n\t}"}),F.a.createElement(G,{html:'<h2 class="anchor-heading"><a href="#form-biao-dan-zu-jian">¶</a><a href="javascript:void(0)" id="form-biao-dan-zu-jian" class="anchor-point"></a>Form 表单组件</h2>\n<ol>\n<li><a href="#shi-yong-zhi-nan">使用指南</a></li>\n<li><a href="#biao-dan-xiao-yan">表单校验</a></li>\n<li><a href="#ge-shi-hua-value">格式化 value</a></li>\n<li><a href="#biao-dan-cao-zuo">表单操作</a></li>\n<li><a href="#qi-ta">其他</a></li>\n<li><a href="#zu-jian-yuan-li">组件原理</a></li>\n<li><a href="#qi-ta-shuo-ming">其他说明</a></li>\n<li><a href="#api">API</a></li>\n</ol>\n<h3 class="anchor-heading"><a href="#shi-yong-zhi-nan">¶</a><a href="javascript:void(0)" id="shi-yong-zhi-nan" class="anchor-point"></a>使用指南</h3>\n<h4 class="anchor-heading"><a href="#biao-dan-form">¶</a><a href="javascript:void(0)" id="biao-dan-form" class="anchor-point"></a>表单 <code>Form</code></h4>\n<ul>\n<li><code>Form</code> 组件提供三种样式：<code>inline</code>，<code>horizontal</code>， <code>vertical</code>。</li>\n<li>使用 <code>Form</code> 组件，必须先调用 <code>createForm</code> 方法包装，为表单注入 <code>zentForm</code> 属性，从而提供表单和表单元素的各种操作方法，详见 demo 和 <a href="#zentform"><code>zentForm</code> API</a> 。</li>\n</ul>\n<h4 class="anchor-heading"><a href="#biao-dan-yu-field">¶</a><a href="javascript:void(0)" id="biao-dan-yu-field" class="anchor-point"></a>表单域 <code>Field</code></h4>\n<p><code>Field</code> 组件本质上是一个辅助性的组件，不提供任何样式，只负责管理表单元素 value 值的生命周期和表单元素的 error 等信息。</p>\n<ul>\n<li><code>Field</code> 必须要有 <code>name</code> 属性；</li>\n<li>\n<p><code>Field</code> 的展现形式由 <code>component</code> 属性传入的组件决定，<code>Form</code> 组件中内置了常用的表单元素组件，也可以使用单独封装的自定义表单元素组件。</p>\n<ul>\n<li><code>FormInputField</code></li>\n<li><code>FormSelectField</code></li>\n<li><code>FormRadioGroupField</code></li>\n<li><code>FormCheckboxField</code></li>\n<li><code>FormCheckboxGroupField</code></li>\n<li><code>FormNumberInputField</code></li>\n<li><code>FormSwitchField</code></li>\n<li><code>FormColorPickerField</code></li>\n<li><code>FormDatePickerField</code></li>\n<li><code>FormWeekPickerField</code></li>\n<li><code>FormMonthPickerField</code></li>\n<li><code>FormQuarterPickerField</code></li>\n<li><code>FormYearPickerField</code></li>\n<li><code>FormTimePickerField</code></li>\n<li><code>FormTimeRangePickerField</code></li>\n<li><code>FormDateRangePickerField</code></li>\n<li><code>FormDateRangeQuickPickerField</code></li>\n</ul>\n</li>\n<li><code>Form</code> 组件提供了 <code>getControlGroup</code> 方法，可以快速封装自定义表单元素组件，使用方法参考 demo 和 <a href="#form-getcontrolgroup"><code>getControlGroup</code> API</a> 。</li>\n</ul>\n<p>注：底层组件中的 <code>format</code> 属性因为名称和 <code>Field</code> 上的 <code>format</code> 属性冲突，<code>FormDatePickerField</code> 以及其他年月日相关的 <code>XyzPickerField</code> 的 <code>format</code> 属性变更为 <code>dateFormat</code>；<code>FormTimePickerField</code> 以及 <code>FormTimeRangePickerField</code> 的 <code>format</code> 属性变更为 <code>timeFormat</code>。</p>'}),F.a.createElement(W,{title:"基础用法",id:"Demobasic",src:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Form<span class="token punctuation">,</span> Icon<span class="token punctuation">,</span> Pop <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> Field<span class="token punctuation">,</span> FormInputField<span class="token punctuation">,</span> createForm <span class="token punctuation">}</span> <span class="token operator">=</span> Form<span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">FieldForm</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Form</span> <span class="token attr-name">horizontal</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FormInputField</span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span>\n          <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>\n          <span class="token attr-name">label</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>\n              用户名<span class="token entity" title="&nbsp;">&amp;nbsp;</span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Pop</span> <span class="token attr-name">trigger</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hover<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>用户名用于个人账号登录<span class="token punctuation">"</span></span> <span class="token attr-name">centerArrow</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Icon</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>error-circle-o<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Pop</span><span class="token punctuation">></span></span><span class="token punctuation">:</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n          <span class="token punctuation">}</span></span>\n          <span class="token attr-name">helpDesc</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>用户名为5-25个字符<span class="token punctuation">"</span></span>\n          <span class="token attr-name">required</span>\n        <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FormInputField</span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span>\n          <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span>\n          <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>密码:<span class="token punctuation">"</span></span>\n          <span class="token attr-name">helpDesc</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>\n              密码由<span class="token number">6</span><span class="token operator">-</span><span class="token number">20</span>位英文字母、数字组成，\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://youzan.com<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                查看更多\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n          <span class="token punctuation">}</span></span>\n          <span class="token attr-name">notice</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>重要提示：填写后无法修改，请谨慎设置<span class="token punctuation">"</span></span>\n          <span class="token attr-name">required</span>\n        <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Form</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> WrappedForm <span class="token operator">=</span> <span class="token function">createForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span>FieldForm<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>WrappedForm</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},F.a.createElement(S)),F.a.createElement(W,{title:"使用内置表单元素组件",id:"Demobuildinfield",src:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Form<span class="token punctuation">,</span> Radio<span class="token punctuation">,</span> Checkbox<span class="token punctuation">,</span> Button<span class="token punctuation">,</span> Notify <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span>\n  Field<span class="token punctuation">,</span>\n  FormInputField<span class="token punctuation">,</span>\n  FormSelectField<span class="token punctuation">,</span>\n  FormRadioGroupField<span class="token punctuation">,</span>\n  FormCheckboxField<span class="token punctuation">,</span>\n  FormCheckboxGroupField<span class="token punctuation">,</span>\n  FormColorPickerField<span class="token punctuation">,</span>\n  FormDateRangePickerField<span class="token punctuation">,</span>\n  FormNumberInputField<span class="token punctuation">,</span>\n  FormSwitchField<span class="token punctuation">,</span>\n  createForm<span class="token punctuation">,</span>\n<span class="token punctuation">}</span> <span class="token operator">=</span> Form<span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">FieldForm</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    checkedList<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">onCheckboxChange</span> <span class="token operator">=</span> checkedList <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> checkedList <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">submit</span> <span class="token operator">=</span> <span class="token punctuation">(</span>values<span class="token punctuation">,</span> zentForm<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    Notify<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">resetForm</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>zentForm<span class="token punctuation">.</span><span class="token function">resetFieldsValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> handleSubmit <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Form</span> <span class="token attr-name">horizontal</span> <span class="token attr-name">onSubmit</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token function">handleSubmit</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>submit<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n        <span class="token operator">&lt;</span>FormInputField\n          name<span class="token operator">=</span><span class="token string">"name"</span>\n          type<span class="token operator">=</span><span class="token string">"text"</span>\n          label<span class="token operator">=</span><span class="token string">"昵称:"</span>\n          required\n          spellCheck<span class="token operator">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span>\n          validations<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> required<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          validationErrors<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> required<span class="token punctuation">:</span> <span class="token string">\'请填写昵称\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token operator">&lt;</span>FormSelectField\n          name<span class="token operator">=</span><span class="token string">"type"</span>\n          label<span class="token operator">=</span><span class="token string">"类型:"</span>\n          data<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span>\n            <span class="token punctuation">{</span> value<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> text<span class="token punctuation">:</span> <span class="token string">\'普通用户\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">{</span> value<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> text<span class="token punctuation">:</span> <span class="token string">\'高级用户\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">]</span><span class="token punctuation">}</span>\n          required\n          validations<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> required<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          validationErrors<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> required<span class="token punctuation">:</span> <span class="token string">\'请选择类型\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token operator">&lt;</span>FormRadioGroupField\n          name<span class="token operator">=</span><span class="token string">"sex"</span>\n          label<span class="token operator">=</span><span class="token string">"性别:"</span>\n          required\n          validations<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            <span class="token function">required</span><span class="token punctuation">(</span>values<span class="token punctuation">,</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n              <span class="token keyword">return</span> value <span class="token operator">!==</span> <span class="token string">\'\'</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          validationErrors<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            required<span class="token punctuation">:</span> <span class="token string">\'请选择性别\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        <span class="token operator">></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Radio</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>男<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Radio</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Radio</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>女<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Radio</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FormRadioGroupField</span><span class="token punctuation">></span></span>\n        <span class="token operator">&lt;</span>FormCheckboxGroupField\n          name<span class="token operator">=</span><span class="token string">"hobbies"</span>\n          label<span class="token operator">=</span><span class="token string">"兴趣标签:"</span>\n          value<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>checkedList<span class="token punctuation">}</span>\n          onChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>onCheckboxChange<span class="token punctuation">}</span>\n          required\n          validations<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            minLength<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          validationErrors<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            minLength<span class="token punctuation">:</span> <span class="token string">\'请选择标签\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        <span class="token operator">></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Checkbox</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>movie<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>电影<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Checkbox</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Checkbox</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>book<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>书籍<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Checkbox</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Checkbox</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>travel<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>旅行<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Checkbox</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FormCheckboxGroupField</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FormNumberInputField</span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>age<span class="token punctuation">"</span></span>\n          <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>年龄:<span class="token punctuation">"</span></span>\n          <span class="token attr-name">showStepper</span>\n          <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token number">12</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FormColorPickerField</span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>color<span class="token punctuation">"</span></span>\n          <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>喜欢的颜色:<span class="token punctuation">"</span></span>\n          <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#5197FF<span class="token punctuation">"</span></span>\n        <span class="token punctuation">/></span></span>\n        <span class="token operator">&lt;</span>FormDateRangePickerField\n          name<span class="token operator">=</span><span class="token string">"dateRange"</span>\n          label<span class="token operator">=</span><span class="token string">"身份证有效期:"</span>\n          type<span class="token operator">=</span><span class="token string">"split"</span>\n          value<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span>\n          dateFormat<span class="token operator">=</span><span class="token string">"YYYY-MM-DD HH:mm:ss"</span>\n          validations<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            <span class="token function">required</span><span class="token punctuation">(</span>values<span class="token punctuation">,</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n              <span class="token keyword">return</span> <span class="token operator">!</span><span class="token operator">!</span>value<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token operator">!</span>value<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          validationErrors<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            required<span class="token punctuation">:</span> <span class="token string">\'请填写有效期\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FormSwitchField</span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>isPublic<span class="token punctuation">"</span></span>\n          <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>公开个人信息:<span class="token punctuation">"</span></span>\n          <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FormCheckboxField</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>agree<span class="token punctuation">"</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>同意许可条例:<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          是\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FormCheckboxField</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>zent-form__form-actions<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">htmlType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            获取表单值\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">outline</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>resetForm<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n            重置表单值\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Form</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">const</span> WrappedForm <span class="token operator">=</span> <span class="token function">createForm</span><span class="token punctuation">(</span><span class="token punctuation">{</span> scrollToError<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>FieldForm<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>WrappedForm</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},F.a.createElement(N)),F.a.createElement(G,{html:'<h4 class="anchor-heading"><a href="#shi-yong-getcontrolgroup-feng-zhuang-zi-ding-yi-biao-dan-yu">¶</a><a href="javascript:void(0)" id="shi-yong-getcontrolgroup-feng-zhuang-zi-ding-yi-biao-dan-yu" class="anchor-point"></a>使用 <code>getControlGroup</code> 封装自定义表单域</h4>'}),F.a.createElement(W,{title:"使用 getControlGroup 封装自定义表单元素组件",id:"Democutomfield",src:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Form<span class="token punctuation">,</span> NumberInput<span class="token punctuation">,</span> ColorPicker<span class="token punctuation">,</span> DateRangePicker<span class="token punctuation">,</span> Switch<span class="token punctuation">,</span> Upload<span class="token punctuation">,</span> Notify <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> omit <span class="token keyword">from</span> <span class="token string">\'lodash/omit\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> Field<span class="token punctuation">,</span> createForm<span class="token punctuation">,</span> getControlGroup<span class="token punctuation">,</span> unknownProps <span class="token punctuation">}</span> <span class="token operator">=</span> Form<span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">UploadWrap</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function-variable function">wrappedOnChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span>imgs<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span>imgs<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> passableProps <span class="token operator">=</span> <span class="token function">omit</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">,</span> unknownProps<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> value <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Upload</span> <span class="token spread"><span class="token punctuation">{</span><span class="token punctuation">...</span><span class="token attr-value">passableProps</span><span class="token punctuation">}</span></span> <span class="token attr-name">onUpload</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>wrappedOnChange<span class="token punctuation">}</span></span> <span class="token attr-name">localOnly</span> <span class="token punctuation">/></span></span>\n        <span class="token punctuation">{</span>\n          value <span class="token operator">&amp;&amp;</span> value<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token punctuation">(</span>\n              <span class="token operator">&lt;</span>img\n                width<span class="token operator">=</span><span class="token string">"80"</span>\n                height<span class="token operator">=</span><span class="token string">"80"</span>\n                key<span class="token operator">=</span><span class="token punctuation">{</span>index<span class="token punctuation">}</span>\n                src<span class="token operator">=</span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>src<span class="token punctuation">}</span>\n                style<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>marginLeft<span class="token punctuation">:</span> <span class="token string">\'10px\'</span><span class="token punctuation">}</span><span class="token punctuation">}</span>\n              <span class="token operator">/</span><span class="token operator">></span>\n            <span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> UploadField <span class="token operator">=</span> <span class="token function">getControlGroup</span><span class="token punctuation">(</span>UploadWrap<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">FieldForm</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function-variable function">updateLocalImage</span> <span class="token operator">=</span> <span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span>resolve <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token function">resolve</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">submit</span> <span class="token operator">=</span> <span class="token punctuation">(</span>values<span class="token punctuation">,</span> zentForm<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    Notify<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">resetForm</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>zentForm<span class="token punctuation">.</span><span class="token function">resetFieldsValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> handleSubmit <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Form</span> <span class="token attr-name">horizontal</span> <span class="token attr-name">onSubmit</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token function">handleSubmit</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>submit<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Field</span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>imgs<span class="token punctuation">"</span></span>\n          <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>资料:<span class="token punctuation">"</span></span>\n          <span class="token attr-name">component</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>UploadField<span class="token punctuation">}</span></span>\n          <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">maxSize</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token number">8</span> <span class="token operator">*</span> <span class="token number">1000</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">triggerInline</span>\n          <span class="token attr-name">tips</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>建议尺寸：640 x 640 像素；<span class="token punctuation">"</span></span>\n          <span class="token attr-name">onUpload</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>updateLocalImage<span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>zent-form__form-actions<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">htmlType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>获取表单值<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">outline</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>resetForm<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>重置表单值<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Form</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> WrappedForm <span class="token operator">=</span> <span class="token function">createForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span>FieldForm<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>WrappedForm</span> <span class="token punctuation">/></span></span>\n  <span class="token punctuation">,</span> mountNode\n<span class="token punctuation">)</span>'},F.a.createElement(j)),F.a.createElement(G,{html:'<h4 class="anchor-heading"><a href="#duo-ge-biao-dan-yuan-su-de-feng-zhuang">¶</a><a href="javascript:void(0)" id="duo-ge-biao-dan-yuan-su-de-feng-zhuang" class="anchor-point"></a>多个表单元素的封装</h4>\n<p>当一个 <code>Field</code> 里需要封装多个表单元素时，一般会将多个表单元素的 value 值封装在一个对象里传入到 <code>Field</code> 中。当无法使用 <code>getControlGroup</code> 满足封装要求时，可以自己封装组件，通过调用 <code>Field</code> 组件传入的 <code>onChange</code> 事件更改 <code>Field</code> 的 value。</p>\n<p>⚠️注意：调用 <code>Field</code> 传入的 <code>onChange</code> 事件默认会覆盖原值，可以通过传入 <code>{ merge: true}</code> 参数来部分覆盖 value 值。</p>'}),F.a.createElement(W,{title:"封装多个表单元素",id:"Demomultivalue",src:'<span class="token keyword">import</span> cx <span class="token keyword">from</span> <span class="token string">\'classnames\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Form<span class="token punctuation">,</span> Select<span class="token punctuation">,</span> Input<span class="token punctuation">,</span> Notify <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> Field<span class="token punctuation">,</span> createForm <span class="token punctuation">}</span> <span class="token operator">=</span> Form<span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> SelectTrigger <span class="token punctuation">}</span> <span class="token operator">=</span> Select<span class="token punctuation">;</span>\n<span class="token keyword">const</span> countyCodeList <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    code<span class="token punctuation">:</span> <span class="token string">\'+86\'</span><span class="token punctuation">,</span>\n    zh<span class="token punctuation">:</span> <span class="token string">\'zhongguo\'</span><span class="token punctuation">,</span>\n    eng<span class="token punctuation">:</span> <span class="token string">\'china\'</span><span class="token punctuation">,</span>\n    value<span class="token punctuation">:</span> <span class="token string">\'中国 +86\'</span><span class="token punctuation">,</span>\n    index<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    code<span class="token punctuation">:</span> <span class="token string">\'+853\'</span><span class="token punctuation">,</span>\n    zh<span class="token punctuation">:</span> <span class="token string">\'aomen\'</span><span class="token punctuation">,</span>\n    eng<span class="token punctuation">:</span> <span class="token string">\'Macau\'</span><span class="token punctuation">,</span>\n    value<span class="token punctuation">:</span> <span class="token string">\'中国澳门 +853\'</span><span class="token punctuation">,</span>\n    index<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">ContactPhone</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function-variable function">onSelectChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token punctuation">,</span> selectedItem<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> newValue <span class="token operator">=</span> <span class="token punctuation">{</span>\n      areacode<span class="token punctuation">:</span> selectedItem<span class="token punctuation">.</span>index<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token comment">// 覆盖部分value</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span>newValue<span class="token punctuation">,</span> <span class="token punctuation">{</span> merge<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">onPhoneChange</span> <span class="token operator">=</span> e <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>value<span class="token punctuation">;</span>\n    <span class="token keyword">const</span> newValue <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> value<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n      mobile<span class="token punctuation">:</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span>newValue<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">filterHandler</span> <span class="token operator">=</span> <span class="token punctuation">(</span>item<span class="token punctuation">,</span> keyword<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      keyword <span class="token operator">&amp;&amp;</span>\n      item<span class="token punctuation">.</span>text\n        <span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>keyword<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">;</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> value<span class="token punctuation">,</span> displayError <span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>\n    <span class="token keyword">const</span> showError <span class="token operator">=</span>\n      displayError <span class="token operator">===</span> undefined\n        <span class="token operator">?</span> props<span class="token punctuation">.</span>isDirty <span class="token operator">&amp;&amp;</span> props<span class="token punctuation">.</span>error <span class="token operator">!==</span> <span class="token keyword">null</span>\n        <span class="token punctuation">:</span> displayError<span class="token punctuation">;</span>\n    <span class="token keyword">const</span> helpDesc <span class="token operator">=</span> props<span class="token punctuation">.</span>helpDesc<span class="token punctuation">;</span>\n    <span class="token keyword">const</span> mobileClassName <span class="token operator">=</span> <span class="token function">cx</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token string">\'zent-form__control-group\'</span><span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token string">\'has-error\'</span><span class="token punctuation">:</span> showError<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>mobileClassName<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>zent-form__control-label<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>联系方式<span class="token punctuation">:</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>zent-form__controls<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token operator">&lt;</span>div style<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> display<span class="token punctuation">:</span> <span class="token string">\'flex\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Select</span>\n              <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>areacode<span class="token punctuation">"</span></span>\n              <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>value<span class="token punctuation">.</span>areacode<span class="token punctuation">}</span></span>\n              <span class="token attr-name">data</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>areadata<span class="token punctuation">}</span></span>\n              <span class="token attr-name">filter</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>filterHandler<span class="token punctuation">}</span></span>\n              <span class="token attr-name">optionValue</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>index<span class="token punctuation">"</span></span>\n              <span class="token attr-name">optionText</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>value<span class="token punctuation">"</span></span>\n              <span class="token attr-name">trigger</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>SelectTrigger<span class="token punctuation">}</span></span>\n              <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>onSelectChange<span class="token punctuation">}</span></span>\n            <span class="token punctuation">/></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Input</span>\n              <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>phone-num<span class="token punctuation">"</span></span>\n              <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>请填写手机号<span class="token punctuation">"</span></span>\n              <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>value<span class="token punctuation">.</span>mobile<span class="token punctuation">}</span></span>\n              <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>onPhoneChange<span class="token punctuation">}</span></span>\n              <span class="token attr-name">width</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token number">160</span><span class="token punctuation">}</span></span>\n            <span class="token punctuation">/></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n          <span class="token punctuation">{</span>showError <span class="token operator">&amp;&amp;</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>zent-form__error-desc<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>error<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token punctuation">}</span>\n          <span class="token punctuation">{</span>helpDesc <span class="token operator">&amp;&amp;</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>zent-form__help-desc<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>helpDesc<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token punctuation">}</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">CustomFieldForm</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function-variable function">getFormValues</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> zentForm <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">;</span>\n    Notify<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>zentForm<span class="token punctuation">.</span><span class="token function">getFormValues</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">resetForm</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>zentForm<span class="token punctuation">.</span><span class="token function">resetFieldsValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Form</span> <span class="token attr-name">horizontal</span><span class="token punctuation">></span></span>\n        <span class="token operator">&lt;</span>Field\n          name<span class="token operator">=</span><span class="token string">"contactPhone"</span>\n          value<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            areacode<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n            mobile<span class="token punctuation">:</span> <span class="token number">15899776666</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          areadata<span class="token operator">=</span><span class="token punctuation">{</span>countyCodeList<span class="token punctuation">}</span>\n          component<span class="token operator">=</span><span class="token punctuation">{</span>ContactPhone<span class="token punctuation">}</span>\n          helpDesc<span class="token operator">=</span><span class="token string">"目前仅支持中国内陆地区和澳门地区电话号码"</span>\n          validations<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            <span class="token function">validMobile</span><span class="token punctuation">(</span>values<span class="token punctuation">,</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n              <span class="token keyword">let</span> mobile <span class="token operator">=</span> <span class="token operator">+</span>value<span class="token punctuation">.</span>mobile<span class="token punctuation">;</span>\n              <span class="token keyword">let</span> mobileReg <span class="token operator">=</span> <span class="token regex">/^\\d{1,10}$/</span><span class="token punctuation">;</span>\n              <span class="token keyword">return</span> mobileReg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>mobile<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          validationErrors<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> validMobile<span class="token punctuation">:</span> <span class="token string">\'请输入正确的手机号\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>zent-form__form-actions<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>getFormValues<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n            获取表单值\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">outline</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>resetForm<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n            重置表单值\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Form</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> WrappedForm <span class="token operator">=</span> <span class="token function">createForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span>CustomFieldForm<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>WrappedForm</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},F.a.createElement(q)),F.a.createElement(G,{html:'<h3 class="anchor-heading"><a href="#biao-dan-xiao-yan">¶</a><a href="javascript:void(0)" id="biao-dan-xiao-yan" class="anchor-point"></a>表单校验</h3>\n<h4 class="anchor-heading"><a href="#biao-dan-xiao-yan-de-shi-yong">¶</a><a href="javascript:void(0)" id="biao-dan-xiao-yan-de-shi-yong" class="anchor-point"></a>表单校验的使用</h4>\n<ul>\n<li><code>Field</code> 组件支持传入 <code>validations</code> 和 <code>validationErrors</code> 来指定校验规则和校验提示；</li>\n<li><code>validations</code> 对象支持预置的内部校验规则（详见<a href="#nei-zhi-validation-rules">内置 validation rules</a> ）, 也支持传入自定义的校验函数，详见下面一小节；</li>\n<li>可以通过 <code>Form.createForm</code> 扩展内部校验规则，详见 <a href="#form-createform"><code>Form.createForm</code> API</a> 。</li>\n<li>默认在任一表单进行校验时，其他所有表单域都会进行校验。如果想修改这种默认行为，可以给 <code>Field</code> 的 <code>relatedFields</code> 属性为一组表单域的名字数组，这样当当前表单域校验时，只会校验这些指定的表单域。</li>\n</ul>\n<p>自定义表单校验函数定义:</p>\n<p><code>function validate(formValues, fieldValue): string | boolean</code></p>\n<ul>\n<li>如果返回 <code>boolean</code>，<code>true</code> 表示校验通过，<code>false</code> 表示校验失败，此时需要配合 <code>validationErrors</code> 里面相同 key 的错误描述一起使用。</li>\n<li>也可以直接在自定义校验函数里直接返回 <code>string</code> 类型的错误描述，此时不需要传对应的 <code>validationErrors</code>。</li>\n</ul>'}),F.a.createElement(W,{title:"常用表单校验",id:"Demovalidate",src:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Form<span class="token punctuation">,</span> Radio<span class="token punctuation">,</span> Checkbox<span class="token punctuation">,</span> Notify <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> Field<span class="token punctuation">,</span> FormInputField<span class="token punctuation">,</span> FormCheckboxGroupField<span class="token punctuation">,</span> createForm <span class="token punctuation">}</span> <span class="token operator">=</span> Form<span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">FieldForm</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    checkedList<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function-variable function">onCheckboxChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span>checkedList<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> checkedList <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function-variable function">submit</span> <span class="token operator">=</span> <span class="token punctuation">(</span>values<span class="token punctuation">,</span> zentForm<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    Notify<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">resetForm</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>zentForm<span class="token punctuation">.</span><span class="token function">resetFieldsValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> handleSubmit <span class="token punctuation">}</span> <span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Form</span> <span class="token attr-name">horizontal</span> <span class="token attr-name">onSubmit</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token function">handleSubmit</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>submit<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n        <span class="token operator">&lt;</span>FormInputField\n          name<span class="token operator">=</span><span class="token string">"name"</span>\n          type<span class="token operator">=</span><span class="token string">"text"</span>\n          label<span class="token operator">=</span><span class="token string">"昵称:"</span>\n          required\n          helpDesc<span class="token operator">=</span><span class="token string">"正则校验"</span>\n          validations<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            matchRegex<span class="token punctuation">:</span> <span class="token regex">/^[a-zA-Z]+$/</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          validationErrors<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            required<span class="token punctuation">:</span> <span class="token string">\'请填写昵称\'</span><span class="token punctuation">,</span>\n            matchRegex<span class="token punctuation">:</span> <span class="token string">\'昵称只能是字母\'</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token operator">&lt;</span>FormInputField\n          name<span class="token operator">=</span><span class="token string">"password"</span>\n          type<span class="token operator">=</span><span class="token string">"text"</span>\n          label<span class="token operator">=</span><span class="token string">"密码:"</span>\n          required\n          helpDesc<span class="token operator">=</span><span class="token string">"非空校验"</span>\n          validations<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            required<span class="token punctuation">:</span> <span class="token boolean">true</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          validationErrors<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            required<span class="token punctuation">:</span> <span class="token string">\'请填写密码\'</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token operator">&lt;</span>FormInputField\n          name<span class="token operator">=</span><span class="token string">"confirmPw"</span>\n          type<span class="token operator">=</span><span class="token string">"text"</span>\n          label<span class="token operator">=</span><span class="token string">"确认密码:"</span>\n          required\n          helpDesc<span class="token operator">=</span><span class="token string">"与其他表单域对比校验"</span>\n          validations<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            equalsField<span class="token punctuation">:</span> <span class="token string">\'password\'</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          validationErrors<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            equalsField<span class="token punctuation">:</span> <span class="token string">\'两次填写的密码不一致\'</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token operator">&lt;</span>FormInputField\n          name<span class="token operator">=</span><span class="token string">"email"</span>\n          type<span class="token operator">=</span><span class="token string">"text"</span>\n          label<span class="token operator">=</span><span class="token string">"邮件:"</span>\n          helpDesc<span class="token operator">=</span><span class="token string">"邮件校验"</span>\n          validations<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            isEmail<span class="token punctuation">:</span> <span class="token boolean">true</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          validationErrors<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            isEmail<span class="token punctuation">:</span> <span class="token string">\'请填写正确的邮件\'</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token operator">&lt;</span>FormInputField\n          name<span class="token operator">=</span><span class="token string">"url"</span>\n          type<span class="token operator">=</span><span class="token string">"text"</span>\n          label<span class="token operator">=</span><span class="token string">"个人网站链接:"</span>\n          helpDesc<span class="token operator">=</span><span class="token string">"超链接校验"</span>\n          validations<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            isUrl<span class="token punctuation">:</span> <span class="token boolean">true</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          validationErrors<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            isUrl<span class="token punctuation">:</span> <span class="token string">\'请填写正确的网址\'</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token operator">&lt;</span>FormInputField\n          name<span class="token operator">=</span><span class="token string">"id"</span>\n          type<span class="token operator">=</span><span class="token string">"text"</span>\n          label<span class="token operator">=</span><span class="token string">"证件号码:"</span>\n          required\n          helpDesc<span class="token operator">=</span><span class="token string">"自定义校验函数"</span>\n          validations<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            matchRegex<span class="token punctuation">:</span> <span class="token regex">/^\\d+$/</span><span class="token punctuation">,</span>\n            <span class="token function">format</span><span class="token punctuation">(</span>values<span class="token punctuation">,</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n              <span class="token keyword">return</span> value<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">15</span> <span class="token operator">||</span> value<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">10</span>\n            <span class="token punctuation">}</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          validationErrors<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            matchRegex<span class="token punctuation">:</span> <span class="token string">\'证件号码必须是数字\'</span><span class="token punctuation">,</span>\n            format<span class="token punctuation">:</span> <span class="token string">\'证件号码是10位或者15位数字\'</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token operator">&lt;</span>FormCheckboxGroupField\n          name<span class="token operator">=</span><span class="token string">"hobbies"</span>\n          type<span class="token operator">=</span><span class="token string">"text"</span>\n          label<span class="token operator">=</span><span class="token string">"兴趣标签:"</span>\n          value<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>checkedList<span class="token punctuation">}</span>\n          onChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>onCheckboxChange<span class="token punctuation">}</span>\n          required\n          helpDesc<span class="token operator">=</span><span class="token string">"长度校验"</span>\n          validations<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            minLength<span class="token punctuation">:</span> <span class="token number">2</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          validationErrors<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            minLength<span class="token punctuation">:</span> <span class="token string">\'请至少选择两个\'</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        <span class="token operator">></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Checkbox</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>movie<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>电影<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Checkbox</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Checkbox</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>book<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>书籍<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Checkbox</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Checkbox</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>travel<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>旅行<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Checkbox</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FormCheckboxGroupField</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>zent-form__form-actions<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">htmlType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>获取表单值<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">outline</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>resetForm<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>重置表单值<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Form</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> WrappedForm <span class="token operator">=</span> <span class="token function">createForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span>FieldForm<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>WrappedForm</span> <span class="token punctuation">/></span></span>\n  <span class="token punctuation">,</span> mountNode\n<span class="token punctuation">)</span>'},F.a.createElement(R)),F.a.createElement(G,{html:'<h4 class="anchor-heading"><a href="#biao-dan-xiao-yan-shi-ji">¶</a><a href="javascript:void(0)" id="biao-dan-xiao-yan-shi-ji" class="anchor-point"></a>表单校验时机</h4>\n<p>表单的默认校验时机是 value 值改变的时候。可以修改 <code>validateOnChange</code>，<code>validateOnBlur</code> 来改变校验时机，如在 blur 时再校验（一般用于Input输入框）。</p>\n<p>如果你需要在提交时校验表单项，可以设置 <code>validateOnChange</code>，<code>validateOnBlur</code> 都为 <code>false</code>，并使用内置表单提交操作 <code>handleSubmit</code>。如果不使用 <code>handleSubmit</code> 处理表单提交操作，你需要在表单提交时使用 <code>zentForm.validateForm(true, callback)</code> 方法强制触发表单的校验，并在 <code>callback</code> 中处理后续逻辑。如果需要自主控制错误信息的展示，可以使用 <code>Field</code> 的 <code>displayError</code> 属性来控制错误信息的显示。</p>'}),F.a.createElement(W,{title:"不同校验时机",id:"Demovalidatetime",src:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Form<span class="token punctuation">,</span> Notify <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> Field<span class="token punctuation">,</span> FormInputField<span class="token punctuation">,</span> createForm <span class="token punctuation">}</span> <span class="token operator">=</span> Form<span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">FormattedForm</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function-variable function">submit</span> <span class="token operator">=</span> <span class="token punctuation">(</span>values<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    Notify<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> handleSubmit<span class="token punctuation">,</span> zentForm <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Form</span> <span class="token attr-name">horizontal</span> <span class="token attr-name">onSubmit</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token function">handleSubmit</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>submit<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n        <span class="token operator">&lt;</span>FormInputField\n          name<span class="token operator">=</span><span class="token string">"field1"</span>\n          type<span class="token operator">=</span><span class="token string">"text"</span>\n          label<span class="token operator">=</span><span class="token string">"Change时校验:"</span>\n          validations<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            matchRegex<span class="token punctuation">:</span> <span class="token regex">/^[a-zA-Z]+$/</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          validationErrors<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            required<span class="token punctuation">:</span> <span class="token string">\'值不能为空\'</span><span class="token punctuation">,</span>\n            matchRegex<span class="token punctuation">:</span> <span class="token string">\'只能为字母\'</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token operator">&lt;</span>FormInputField\n          name<span class="token operator">=</span><span class="token string">"field2"</span>\n          type<span class="token operator">=</span><span class="token string">"text"</span>\n          label<span class="token operator">=</span><span class="token string">"Blur时校验:"</span>\n          validateOnChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span>\n          validations<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            matchRegex<span class="token punctuation">:</span> <span class="token regex">/^[a-zA-Z]+$/</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          validationErrors<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            required<span class="token punctuation">:</span> <span class="token string">\'值不能为空\'</span><span class="token punctuation">,</span>\n            matchRegex<span class="token punctuation">:</span> <span class="token string">\'只能为字母\'</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token operator">&lt;</span>FormInputField\n          name<span class="token operator">=</span><span class="token string">"field3"</span>\n          type<span class="token operator">=</span><span class="token string">"text"</span>\n          label<span class="token operator">=</span><span class="token string">"submit时校验:"</span>\n          validateOnChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span>\n          validateOnBlur<span class="token operator">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span>\n          validations<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            matchRegex<span class="token punctuation">:</span> <span class="token regex">/^[a-zA-Z]+$/</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          validationErrors<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            required<span class="token punctuation">:</span> <span class="token string">\'值不能为空\'</span><span class="token punctuation">,</span>\n            matchRegex<span class="token punctuation">:</span> <span class="token string">\'只能为字母\'</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token operator">&lt;</span>FormInputField\n          name<span class="token operator">=</span><span class="token string">"field4"</span>\n          type<span class="token operator">=</span><span class="token string">"text"</span>\n          label<span class="token operator">=</span><span class="token string">"自定义错误显示:"</span>\n          displayError<span class="token operator">=</span><span class="token punctuation">{</span>zentForm<span class="token punctuation">.</span><span class="token function">isFormSubmitFail</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token operator">!</span>zentForm<span class="token punctuation">.</span><span class="token function">getFieldError</span><span class="token punctuation">(</span><span class="token string">\'field4\'</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n          validations<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            matchRegex<span class="token punctuation">:</span> <span class="token regex">/^[a-zA-Z]+$/</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          validationErrors<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            required<span class="token punctuation">:</span> <span class="token string">\'值不能为空\'</span><span class="token punctuation">,</span>\n            matchRegex<span class="token punctuation">:</span> <span class="token string">\'只能为字母\'</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>zent-form__form-actions<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">htmlType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>获取表单值<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Form</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> WrappedForm <span class="token operator">=</span> <span class="token function">createForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span>FormattedForm<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>WrappedForm</span> <span class="token punctuation">/></span></span>\n  <span class="token punctuation">,</span> mountNode\n<span class="token punctuation">)</span>'},F.a.createElement(A)),F.a.createElement(G,{html:'<h4 class="anchor-heading"><a href="#yi-bu-xiao-yan">¶</a><a href="javascript:void(0)" id="yi-bu-xiao-yan" class="anchor-point"></a>异步校验</h4>\n<p>异步校验在 blur 时触发，如果需要在自定义组件中手动触发异步校验，需要自己调用<code>props.onBlur(event)</code>。 <code>value</code> 值可以直接传给 <code>event</code> ，或者作为 <code>event</code> 的属性传入。</p>\n<p>如果在没有触发异步校验的情况下（比如没有对表单项进行过操作）直接提交表单时，默认不会触发异步校验，使用内置的 <code>handleSubmit</code> 方法可以在提交表单时触发从未进行的异步校验。如果不使用 <code>handleSubmit</code> 处理表单提交操作，你需要在表单提交时使用 <code>zentForm.isFormAsyncValidated</code> 判断表单是否经过了异步校验，并根据结果选择是否使用 <code>zentForm.asyncValidateForm(resolve, reject)</code> 方法强制触发表单的异步校验。</p>'}),F.a.createElement(W,{title:"异步校验",id:"Demoasyncvalidate",src:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Form<span class="token punctuation">,</span> Notify <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> Field<span class="token punctuation">,</span> FormInputField<span class="token punctuation">,</span> createForm <span class="token punctuation">}</span> <span class="token operator">=</span> Form<span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">AsyncForm</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> handleSubmit<span class="token punctuation">,</span> zentForm <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">;</span>\n    <span class="token keyword">const</span> isSubmitting <span class="token operator">=</span> zentForm<span class="token punctuation">.</span><span class="token function">isSubmitting</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Form</span> <span class="token attr-name">horizontal</span> <span class="token attr-name">onSubmit</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token function">handleSubmit</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>submit<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n        <span class="token operator">&lt;</span>FormInputField\n          name<span class="token operator">=</span><span class="token string">"name"</span>\n          type<span class="token operator">=</span><span class="token string">"text"</span>\n          label<span class="token operator">=</span><span class="token string">"用户名:"</span>\n          value<span class="token operator">=</span><span class="token string">"pangxie"</span>\n          validations<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            matchRegex<span class="token punctuation">:</span> <span class="token regex">/[a-zA-Z]+/</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          validationErrors<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            required<span class="token punctuation">:</span> <span class="token string">\'用户名不能为空\'</span><span class="token punctuation">,</span>\n            matchRegex<span class="token punctuation">:</span> <span class="token string">\'用户名必须是字母\'</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          asyncValidation<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>asyncValidation<span class="token punctuation">}</span>\n          helpDesc<span class="token operator">=</span><span class="token string">"试试输入pangxie"</span>\n        <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FormInputField</span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name2<span class="token punctuation">"</span></span>\n          <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>\n          <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>用户名:<span class="token punctuation">"</span></span>\n          <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>pangxie2<span class="token punctuation">"</span></span>\n          <span class="token attr-name">asyncValidation</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>asyncValidation2<span class="token punctuation">}</span></span>\n          <span class="token attr-name">helpDesc</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>试试输入pangxie2<span class="token punctuation">"</span></span>\n        <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>zent-form__form-actions<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">htmlType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">loading</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>isSubmitting<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>获取表单值<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Form</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function-variable function">asyncValidation</span> <span class="token operator">=</span> <span class="token punctuation">(</span>values<span class="token punctuation">,</span> value<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">===</span> <span class="token string">\'pangxie\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">\'pangxie 已被占用\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function-variable function">asyncValidation2</span> <span class="token operator">=</span> <span class="token punctuation">(</span>values<span class="token punctuation">,</span> value<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">===</span> <span class="token string">\'pangxie2\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">\'pangxie2 已被占用\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function-variable function">submit</span> <span class="token operator">=</span> <span class="token punctuation">(</span>values<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    Notify<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> WrappedForm <span class="token operator">=</span> <span class="token function">createForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span>AsyncForm<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>WrappedForm</span> <span class="token punctuation">/></span></span>\n  <span class="token punctuation">,</span> mountNode\n<span class="token punctuation">)</span>'},F.a.createElement(I)),F.a.createElement(G,{html:'<h3 class="anchor-heading"><a href="#ge-shi-hua-value">¶</a><a href="javascript:void(0)" id="ge-shi-hua-value" class="anchor-point"></a>格式化 <code>value</code></h3>\n<p><code>Form</code> 组件提供了 <code>format</code> 和 <code>nomalize</code> 方法 来对 <code>value</code> 进行格式化，它们的执行时机详见 <a href="#field-zhong-value-de-sheng-ming-zhou-qi">value 的生命周期</a>。</p>'}),F.a.createElement(W,{title:"格式化 value 值",id:"Demoformat",src:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Form <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> Field<span class="token punctuation">,</span> FormInputField<span class="token punctuation">,</span> createForm <span class="token punctuation">}</span> <span class="token operator">=</span> Form<span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">FormattedForm</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function-variable function">lower</span> <span class="token operator">=</span> <span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> value <span class="token operator">&amp;&amp;</span> value<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function-variable function">upper</span> <span class="token operator">=</span> <span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> value <span class="token operator">&amp;&amp;</span> value<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n<span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Form</span> <span class="token attr-name">horizontal</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FormInputField</span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>field1<span class="token punctuation">"</span></span>\n          <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>\n          <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>To Lower:<span class="token punctuation">"</span></span>\n          <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>AAA<span class="token punctuation">"</span></span>\n          <span class="token attr-name">normalize</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>lower<span class="token punctuation">}</span></span>\n          <span class="token attr-name">format</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>lower<span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FormInputField</span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>field2<span class="token punctuation">"</span></span>\n          <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>\n          <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>To Upper:<span class="token punctuation">"</span></span>\n          <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bbb<span class="token punctuation">"</span></span>\n          <span class="token attr-name">normalize</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>upper<span class="token punctuation">}</span></span>\n          <span class="token attr-name">format</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>upper<span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Form</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> WrappedForm <span class="token operator">=</span> <span class="token function">createForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span>FormattedForm<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>WrappedForm</span> <span class="token punctuation">/></span></span>\n  <span class="token punctuation">,</span> mountNode\n<span class="token punctuation">)</span>'},F.a.createElement(_)),F.a.createElement(G,{html:'<h3 class="anchor-heading"><a href="#biao-dan-cao-zuo">¶</a><a href="javascript:void(0)" id="biao-dan-cao-zuo" class="anchor-point"></a>表单操作</h3>\n<ul>\n<li><code>Form.createForm</code> 为组件注入 <code>zentForm</code> 属性，提供了表单和表单元素的各种操作方法，如获取表单元素值，重置获取表单元素值等，详见 <a href="#zentform"><code>zenForm</code> API</a></li>\n<li><code>Form</code> 组件内部对表单提交的过程也进行了封装了 <code>handleSubmit</code> 方法，可以把异步提交过程封装在一个函数里并<strong>返回 <code>Promise</code> 对象</strong>，组件内部会根据 <code>Promise</code> 对象的执行结果分别调用 <code>onSubmitSuccess</code> 和 <code>onSubmitFail</code> 方法，同时更新内部维护的 <code>isSubmitting</code> 属性（可以通过 <code>zentForm.isSubmitting()</code> 得到）。此外，当设定 <code>scrollToError</code> 时，支持表单提交时自动滚动到第一个报错的表单域。</li>\n</ul>'}),F.a.createElement(W,{title:"提交表单及结果处理",id:"Demosubmit",src:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Form<span class="token punctuation">,</span> Button<span class="token punctuation">,</span> Notify <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> FormInputField<span class="token punctuation">,</span> createForm<span class="token punctuation">,</span> SubmissionError <span class="token punctuation">}</span> <span class="token operator">=</span> Form<span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">onSubmitFail</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  Notify<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">function</span> <span class="token function">onSubmitSuccess</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  Notify<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">SubmitForm</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function-variable function">submit</span> <span class="token operator">=</span> <span class="token punctuation">(</span>values<span class="token punctuation">,</span> zentForm<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> random <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">;</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>random <span class="token operator">></span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        zentForm<span class="token punctuation">.</span><span class="token function">setFieldExternalErrors</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n          user<span class="token punctuation">:</span> <span class="token string">\'用户名已被占用\'</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">// 可以使用throw SubmissionError 在 onSubmitFail 中处理，也可以在这里直接 alert 错误信息</span>\n        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">SubmissionError</span><span class="token punctuation">(</span><span class="token string">\'用户名已被占用\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 可以将返回值传入到 onSubmitSuccess ，也可以直接在这里处理掉</span>\n        <span class="token keyword">return</span> <span class="token string">\'注册成功\'</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">resetForm</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> zentForm <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">;</span>\n\n    zentForm<span class="token punctuation">.</span><span class="token function">resetFieldsValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> handleSubmit<span class="token punctuation">,</span> zentForm <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">;</span>\n    <span class="token keyword">const</span> isSubmitting <span class="token operator">=</span> zentForm<span class="token punctuation">.</span><span class="token function">isSubmitting</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Form</span> <span class="token attr-name">onSubmit</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token function">handleSubmit</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>submit<span class="token punctuation">)</span><span class="token punctuation">}</span></span> <span class="token attr-name">horizontal</span><span class="token punctuation">></span></span>\n        <span class="token operator">&lt;</span>FormInputField\n          name<span class="token operator">=</span><span class="token string">"user"</span>\n          type<span class="token operator">=</span><span class="token string">"text"</span>\n          label<span class="token operator">=</span><span class="token string">"用户名:"</span>\n          value<span class="token operator">=</span><span class="token string">"111"</span>\n          validations<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> required<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          validationErrors<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> required<span class="token punctuation">:</span> <span class="token string">\'用户名不能为空\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token operator">&lt;</span>FormInputField\n          name<span class="token operator">=</span><span class="token string">"password"</span>\n          type<span class="token operator">=</span><span class="token string">"password"</span>\n          label<span class="token operator">=</span><span class="token string">"密码:"</span>\n          value<span class="token operator">=</span><span class="token string">"222"</span>\n          validations<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> required<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          validationErrors<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> required<span class="token punctuation">:</span> <span class="token string">\'密码不能为空\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token operator">&lt;</span>FormInputField\n          name<span class="token operator">=</span><span class="token string">"confirmPassword"</span>\n          type<span class="token operator">=</span><span class="token string">"password"</span>\n          label<span class="token operator">=</span><span class="token string">"确认密码:"</span>\n          value<span class="token operator">=</span><span class="token string">"222"</span>\n          validations<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            <span class="token function">isPasswordEqual</span><span class="token punctuation">(</span>values<span class="token punctuation">,</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n              <span class="token keyword">if</span> <span class="token punctuation">(</span>values<span class="token punctuation">.</span>password <span class="token operator">!==</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">return</span> <span class="token string">\'两次填写的密码不一致\'</span><span class="token punctuation">;</span>\n              <span class="token punctuation">}</span>\n              <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          validationErrors<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            required<span class="token punctuation">:</span> <span class="token string">\'确认密码不能为空\'</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>zent-form__form-actions<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">htmlType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">loading</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>isSubmitting<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>注册<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">outline</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>resetForm<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>重置<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Form</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> WrappedForm <span class="token operator">=</span> <span class="token function">createForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span>SubmitForm<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>WrappedForm</span> <span class="token attr-name">scrollToError</span> <span class="token attr-name">onSubmitFail</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>onSubmitFail<span class="token punctuation">}</span></span> <span class="token attr-name">onSubmitSuccess</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>onSubmitSuccess<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n  <span class="token punctuation">,</span> mountNode\n<span class="token punctuation">)</span>'},F.a.createElement(D)),F.a.createElement(W,{title:"其他表单操作",id:"Demootheroperation",src:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Form<span class="token punctuation">,</span> Button<span class="token punctuation">,</span> Notify <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> Field<span class="token punctuation">,</span> FormInputField<span class="token punctuation">,</span> createForm <span class="token punctuation">}</span> <span class="token operator">=</span> Form<span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">SubmitForm</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function-variable function">submit</span> <span class="token operator">=</span> <span class="token punctuation">(</span>values<span class="token punctuation">,</span> zentForm<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    Notify<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">setError</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> zentForm <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">;</span>\n    zentForm<span class="token punctuation">.</span><span class="token function">setFieldExternalErrors</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      name<span class="token punctuation">:</span> <span class="token string">\'用户名不能为空\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function-variable function">initialize</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> zentForm <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">;</span>\n    zentForm<span class="token punctuation">.</span><span class="token function">initialize</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      name<span class="token punctuation">:</span> <span class="token string">\'0\'</span><span class="token punctuation">,</span>\n      age<span class="token punctuation">:</span> <span class="token string">\'0\'</span><span class="token punctuation">,</span>\n      password<span class="token punctuation">:</span> <span class="token string">\'0\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function-variable function">setFieldsValue</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> zentForm <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">;</span>\n    zentForm<span class="token punctuation">.</span><span class="token function">setFieldsValue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      name<span class="token punctuation">:</span> <span class="token string">\'3\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function-variable function">reset</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> zentForm <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">;</span>\n    zentForm<span class="token punctuation">.</span><span class="token function">resetFieldsValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> handleSubmit<span class="token punctuation">,</span> zentForm <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">;</span>\n    <span class="token keyword">const</span> isSubmitting <span class="token operator">=</span> zentForm<span class="token punctuation">.</span><span class="token function">isSubmitting</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Form</span> <span class="token attr-name">onSubmit</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token function">handleSubmit</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>submit<span class="token punctuation">)</span><span class="token punctuation">}</span></span> <span class="token attr-name">horizontal</span><span class="token punctuation">></span></span>\n        <span class="token operator">&lt;</span>FormInputField\n          name<span class="token operator">=</span><span class="token string">"name"</span>\n          type<span class="token operator">=</span><span class="token string">"text"</span>\n          label<span class="token operator">=</span><span class="token string">"用户名:"</span>\n          value<span class="token operator">=</span><span class="token string">"1"</span>\n          validations<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> required<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          validationErrors<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> required<span class="token punctuation">:</span> <span class="token string">\'用户名不能为空\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token operator">&lt;</span>FormInputField\n          name<span class="token operator">=</span><span class="token string">"age"</span>\n          type<span class="token operator">=</span><span class="token string">"text"</span>\n          label<span class="token operator">=</span><span class="token string">"年龄:"</span>\n          value<span class="token operator">=</span><span class="token string">"1"</span>\n          validations<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> required<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          validationErrors<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> required<span class="token punctuation">:</span> <span class="token string">\'年龄不能为空\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token operator">&lt;</span>FormInputField\n          name<span class="token operator">=</span><span class="token string">"password"</span>\n          type<span class="token operator">=</span><span class="token string">"text"</span>\n          label<span class="token operator">=</span><span class="token string">"密码:"</span>\n          value<span class="token operator">=</span><span class="token string">"1"</span>\n          validations<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> required<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          validationErrors<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> required<span class="token punctuation">:</span> <span class="token string">\'密码不能为空\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token operator">&lt;</span>FormInputField\n          name<span class="token operator">=</span><span class="token string">"confirmPassword"</span>\n          type<span class="token operator">=</span><span class="token string">"text"</span>\n          label<span class="token operator">=</span><span class="token string">"确认密码:"</span>\n          value<span class="token operator">=</span><span class="token string">"1"</span>\n          validations<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            <span class="token function">isPasswordEqual</span><span class="token punctuation">(</span>values<span class="token punctuation">,</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n              <span class="token keyword">if</span> <span class="token punctuation">(</span>values<span class="token punctuation">.</span>password <span class="token operator">!==</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">return</span> <span class="token string">\'两次填写的密码不一致\'</span><span class="token punctuation">;</span>\n              <span class="token punctuation">}</span>\n              <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          validationErrors<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            required<span class="token punctuation">:</span> <span class="token string">\'确认密码不能为空\'</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>zent-form__form-actions<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">htmlType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">loading</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>isSubmitting<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>获取表单值<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">outline</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>initialize<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>初始化表单<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">outline</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>setFieldsValue<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>设置表单值<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">outline</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>reset<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>重置<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Form</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> WrappedForm <span class="token operator">=</span> <span class="token function">createForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span>SubmitForm<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>WrappedForm</span> <span class="token punctuation">/></span></span>\n  <span class="token punctuation">,</span> mountNode\n<span class="token punctuation">)</span>'},F.a.createElement(V)),F.a.createElement(G,{html:'<h3 class="anchor-heading"><a href="#qi-ta">¶</a><a href="javascript:void(0)" id="qi-ta" class="anchor-point"></a>其他</h3>\n<h4 class="anchor-heading"><a href="#form-bu-ju">¶</a><a href="javascript:void(0)" id="form-bu-ju" class="anchor-point"></a><code>Form</code> 布局</h4>\n<p><code>Form</code> 组件提供三种简单的样式：行内布局 <code>inline</code>，水平布局 <code>horizontal</code>， 垂直布局 <code>vertical</code>。</p>'}),F.a.createElement(W,{title:"三种 Form 布局",id:"Demolayout",src:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Form<span class="token punctuation">,</span> Radio<span class="token punctuation">,</span> Notify <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> Field<span class="token punctuation">,</span> FormInputField<span class="token punctuation">,</span> createForm <span class="token punctuation">}</span> <span class="token operator">=</span> Form<span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> RadioGroup <span class="token operator">=</span> Radio<span class="token punctuation">.</span>Group<span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">FieldForm</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    formLayout<span class="token punctuation">:</span> <span class="token string">\'vertical\'</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function-variable function">onRadioChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      formLayout<span class="token punctuation">:</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function-variable function">submit</span> <span class="token operator">=</span> <span class="token punctuation">(</span>values<span class="token punctuation">,</span> zentForm<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    Notify<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> formLayout <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> handleSubmit <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RadioGroup</span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>formLayout<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>onRadioChange<span class="token punctuation">}</span></span>  <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-layout<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Radio</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>vertical<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Radio</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Radio</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>horizontal<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>horizontal<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Radio</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Radio</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>inline<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>inline<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Radio</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>RadioGroup</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Form</span> <span class="token attr-name">inline</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>formLayout <span class="token operator">===</span> <span class="token string">\'inline\'</span><span class="token punctuation">}</span></span> <span class="token attr-name">horizontal</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>formLayout <span class="token operator">===</span> <span class="token string">\'horizontal\'</span><span class="token punctuation">}</span></span> <span class="token attr-name">onSubmit</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token function">handleSubmit</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>submit<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FormInputField</span>\n            <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span>\n            <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>\n            <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>用户名:<span class="token punctuation">"</span></span>\n            <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span>\n          <span class="token punctuation">/></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FormInputField</span>\n            <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name2<span class="token punctuation">"</span></span>\n            <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>\n            <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>用户名2:<span class="token punctuation">"</span></span>\n            <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span>\n          <span class="token punctuation">/></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>zent-form__form-actions<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">htmlType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>获取表单值<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Form</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> WrappedForm <span class="token operator">=</span> <span class="token function">createForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span>FieldForm<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>WrappedForm</span> <span class="token punctuation">/></span></span>\n  <span class="token punctuation">,</span> mountNode\n<span class="token punctuation">)</span>'},F.a.createElement(P)),F.a.createElement(G,{html:'<h4 class="anchor-heading"><a href="#fieldset-zu-jian">¶</a><a href="javascript:void(0)" id="fieldset-zu-jian" class="anchor-point"></a><code>Fieldset</code> 组件</h4>'}),F.a.createElement(W,{title:"Fieldset",id:"Demofieldset",src:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Form<span class="token punctuation">,</span> Notify <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> Field<span class="token punctuation">,</span> Fieldset<span class="token punctuation">,</span> FormInputField<span class="token punctuation">,</span> createForm <span class="token punctuation">}</span> <span class="token operator">=</span> Form<span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">FieldsetForm</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function-variable function">submit</span> <span class="token operator">=</span> <span class="token punctuation">(</span>values<span class="token punctuation">,</span> zentForm<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    Notify<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> handleSubmit <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Form</span> <span class="token attr-name">horizontal</span> <span class="token attr-name">onSubmit</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token function">handleSubmit</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>submit<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Fieldset</span> <span class="token attr-name">legend</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Fieldset1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FormInputField</span>\n            <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span>\n            <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>\n            <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>用户名:<span class="token punctuation">"</span></span>\n            <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span>\n          <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Fieldset</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Fieldset</span> <span class="token attr-name">legend</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Fieldset2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FormInputField</span>\n            <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name2<span class="token punctuation">"</span></span>\n            <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>\n            <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>用户名2:<span class="token punctuation">"</span></span>\n            <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span>\n          <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Fieldset</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>zent-form__form-actions<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">htmlType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>获取表单值<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Form</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> WrappedForm <span class="token operator">=</span> <span class="token function">createForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span>FieldsetForm<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>WrappedForm</span> <span class="token punctuation">/></span></span>\n  <span class="token punctuation">,</span> mountNode\n<span class="token punctuation">)</span>'},F.a.createElement(B)),F.a.createElement(G,{html:'<h4 class="anchor-heading"><a href="#formsection-zu-jian">¶</a><a href="javascript:void(0)" id="formsection-zu-jian" class="anchor-point"></a><code>FormSection</code> 组件</h4>\n<p><code>FormSection</code> 组件可以复用切分为更小模块的表单域，其对应的表单数据是对象形式。<code>FormSection</code> 支持的参数详见<a href="#form-formsection"><code>Form.FormSection</code> API</a>。</p>'}),F.a.createElement(W,{title:"FormSection 基本使用",id:"Demoformsection",src:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Form<span class="token punctuation">,</span> Notify <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> Field<span class="token punctuation">,</span> FormSection<span class="token punctuation">,</span> FormInputField<span class="token punctuation">,</span> createForm <span class="token punctuation">}</span> <span class="token operator">=</span> Form<span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Address</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token operator">&lt;</span>FormInputField\n          name<span class="token operator">=</span><span class="token string">"streetName"</span>\n          label<span class="token operator">=</span><span class="token string">"街道:"</span>\n          type<span class="token operator">=</span><span class="token string">"text"</span>\n          validations<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            maxLength<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          validationErrors<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            required<span class="token punctuation">:</span> <span class="token string">\'街道必填\'</span><span class="token punctuation">,</span>\n            maxLength<span class="token punctuation">:</span> <span class="token string">\'超过最大长度\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token operator">&lt;</span>FormInputField\n          name<span class="token operator">=</span><span class="token string">"number"</span>\n          label<span class="token operator">=</span><span class="token string">"门牌号:"</span>\n          type<span class="token operator">=</span><span class="token string">"text"</span>\n          validations<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            minLength<span class="token punctuation">:</span> <span class="token number">6</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          validationErrors<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            required<span class="token punctuation">:</span> <span class="token string">\'门牌号必填\'</span><span class="token punctuation">,</span>\n            minLength<span class="token punctuation">:</span> <span class="token string">\'不足最小长度\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FormInputField</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>zipCode<span class="token punctuation">"</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>邮政编码:<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">BasicInfo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FormInputField</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>名字:<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FormInputField</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mobile<span class="token punctuation">"</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>手机号:<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FormSection</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>address<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Address</span> <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FormSection</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">FieldsetForm</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function-variable function">submit</span> <span class="token operator">=</span> <span class="token punctuation">(</span>values<span class="token punctuation">,</span> zenForm<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    Notify<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">setError</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> zentForm <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">;</span>\n    zentForm<span class="token punctuation">.</span><span class="token function">setFieldExternalErrors</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      orderNo<span class="token punctuation">:</span> <span class="token string">\'订单号错误\'</span><span class="token punctuation">,</span>\n      buyer<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        mobile<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'手机号错误\'</span><span class="token punctuation">,</span> <span class="token string">\'test\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      recipient<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        address<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          zipCode<span class="token punctuation">:</span> <span class="token string">\'格式不对\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        mobile<span class="token punctuation">:</span> <span class="token string">\'请重填手机号\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">initialize</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> zentForm <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">;</span>\n    zentForm<span class="token punctuation">.</span><span class="token function">initialize</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      orderNo<span class="token punctuation">:</span> <span class="token string">\'E1111111\'</span><span class="token punctuation">,</span>\n      buyer<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        mobile<span class="token punctuation">:</span> <span class="token number">13423532345</span><span class="token punctuation">,</span>\n        name<span class="token punctuation">:</span> <span class="token string">\'Allen\'</span><span class="token punctuation">,</span>\n        address<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          number<span class="token punctuation">:</span> <span class="token number">14234</span><span class="token punctuation">,</span>\n          zipCode<span class="token punctuation">:</span> <span class="token number">2222</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      recipient<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        mobile<span class="token punctuation">:</span> <span class="token number">13245343533</span><span class="token punctuation">,</span>\n        name<span class="token punctuation">:</span> <span class="token string">\'Selina\'</span><span class="token punctuation">,</span>\n        address<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          number<span class="token punctuation">:</span> <span class="token number">14234</span><span class="token punctuation">,</span>\n          zipCode<span class="token punctuation">:</span> <span class="token number">2222</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">setFieldsValue</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> zentForm <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">;</span>\n    zentForm<span class="token punctuation">.</span><span class="token function">setFieldsValue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      orderNo<span class="token punctuation">:</span> <span class="token string">\'E143423\'</span><span class="token punctuation">,</span>\n      buyer<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        name<span class="token punctuation">:</span> <span class="token string">\'Sherldon\'</span><span class="token punctuation">,</span>\n        address<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          number<span class="token punctuation">:</span> <span class="token number">1111111</span><span class="token punctuation">,</span>\n          zipCode<span class="token punctuation">:</span> <span class="token number">11111</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      recipient<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        name<span class="token punctuation">:</span> <span class="token string">\'Leonard\'</span><span class="token punctuation">,</span>\n        address<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          number<span class="token punctuation">:</span> <span class="token number">11111</span><span class="token punctuation">,</span>\n          zipCode<span class="token punctuation">:</span> <span class="token number">1111</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">reset</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> zentForm <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">;</span>\n    zentForm<span class="token punctuation">.</span><span class="token function">resetFieldsValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> handleSubmit <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Form</span> <span class="token attr-name">horizontal</span> <span class="token attr-name">onSubmit</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token function">handleSubmit</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>submit<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FormInputField</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>orderNo<span class="token punctuation">"</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>订单号:<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FormSection</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>buyer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sec-label<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>购买者信息<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>BasicInfo</span> <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FormSection</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FormSection</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>recipient<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sec-label<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>发票信息<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>BasicInfo</span> <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FormSection</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>zent-form__form-actions<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">htmlType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            获取表单值\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>setError<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n            设置额外错误\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>initialize<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n            初始化表单\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>setFieldsValue<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n            设置表单值\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>reset<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n            重置\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Form</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">const</span> WrappedForm <span class="token operator">=</span> <span class="token function">createForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span>FieldsetForm<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>WrappedForm</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},F.a.createElement(O)),F.a.createElement(G,{html:'<h4 class="anchor-heading"><a href="#fieldarray-zu-jian">¶</a><a href="javascript:void(0)" id="fieldarray-zu-jian" class="anchor-point"></a><code>FieldArray</code> 组件</h4>\n<p><code>FieldArray</code> 组件可以方便地渲染一组相同的单元域，并且可以增加和删除单元域，类似数组中元素的添加和删除。</p>\n<p><code>FieldArray</code> 会为其 <code>component</code> 注入 <code>fields</code> 这个属性，可以提供单元域的遍历、增加、删除等操作，该属性支持的属性和方法详见<a href="#form-fieldarray"><code>Form.FieldArray</code> API</a>。</p>'}),F.a.createElement(W,{title:"FieldArray 基本使用",id:"Demofieldarray",src:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Form<span class="token punctuation">,</span> Icon<span class="token punctuation">,</span> Pop<span class="token punctuation">,</span> Notify <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span>\n  Field<span class="token punctuation">,</span>\n  FormInputField<span class="token punctuation">,</span>\n  FormRadioGroupField<span class="token punctuation">,</span>\n  createForm<span class="token punctuation">,</span>\n  FormSection<span class="token punctuation">,</span>\n  FieldArray<span class="token punctuation">,</span>\n<span class="token punctuation">}</span> <span class="token operator">=</span> Form<span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Hobbies</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> fields <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> fields<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>add-btn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          添加兴趣爱好\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>\n        <span class="token punctuation">{</span>fields<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>hobby<span class="token punctuation">,</span> index<span class="token punctuation">,</span> key<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n          <span class="token keyword">return</span> <span class="token punctuation">(</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hobbies<span class="token punctuation">"</span></span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token string">`hobby</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n              <span class="token operator">&lt;</span>FormInputField\n                name<span class="token operator">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>hobby<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">}</span>\n                type<span class="token operator">=</span><span class="token string">"text"</span>\n                label<span class="token operator">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token string">`兴趣爱好</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>index <span class="token operator">+</span> <span class="token number">1</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:`</span></span><span class="token punctuation">}</span>\n                validations<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> required<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>\n                validationErrors<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> required<span class="token punctuation">:</span> <span class="token string">\'请填写兴趣爱好\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>\n              <span class="token operator">/</span><span class="token operator">></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>del-btn<span class="token punctuation">"</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> fields<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n                删除该爱好\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>\n          <span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">MemberInfo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> fields<span class="token punctuation">,</span> index <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>members<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>member-title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>\n            成员\n            <span class="token punctuation">{</span>index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">}</span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Pop</span> <span class="token attr-name">centerArrow</span> <span class="token attr-name">trigger</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hover<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>删除该成员<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Icon</span>\n              <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>del-btn<span class="token punctuation">"</span></span>\n              <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>close-circle<span class="token punctuation">"</span></span>\n              <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> fields<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n            <span class="token punctuation">/></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Pop</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token operator">&lt;</span>FormInputField\n          name<span class="token operator">=</span><span class="token string">"name"</span>\n          type<span class="token operator">=</span><span class="token string">"text"</span>\n          label<span class="token operator">=</span><span class="token string">"名字:"</span>\n          required\n          validations<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> required<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          validationErrors<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> required<span class="token punctuation">:</span> <span class="token string">\'请填写成员名字\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token operator">&lt;</span>FormRadioGroupField\n          name<span class="token operator">=</span><span class="token string">"sex"</span>\n          label<span class="token operator">=</span><span class="token string">"性别:"</span>\n          required\n          validations<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            <span class="token function">required</span><span class="token punctuation">(</span>values<span class="token punctuation">,</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n              <span class="token keyword">return</span> value <span class="token operator">!==</span> <span class="token string">\'\'</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          validationErrors<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            required<span class="token punctuation">:</span> <span class="token string">\'请选择性别\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        <span class="token operator">></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Radio</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>男<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Radio</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Radio</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>女<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Radio</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FormRadioGroupField</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FieldArray</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hobbies<span class="token punctuation">"</span></span> <span class="token attr-name">component</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>Hobbies<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Members</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function-variable function">addOne</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>fields<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token function-variable function">addTwo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>fields<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      name<span class="token punctuation">:</span> <span class="token string">\'john\'</span><span class="token punctuation">,</span>\n      sex<span class="token punctuation">:</span> <span class="token string">\'1\'</span><span class="token punctuation">,</span>\n      hobbies<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'H1\'</span><span class="token punctuation">,</span> <span class="token string">\'h4\'</span><span class="token punctuation">,</span> <span class="token string">\'h6\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>fields<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> fields <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>\n        <span class="token punctuation">{</span>fields<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">3</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>addOne<span class="token punctuation">}</span></span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>add-btn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            添加一个成员\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>\n        <span class="token punctuation">)</span><span class="token punctuation">}</span>\n        <span class="token punctuation">{</span>fields<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">2</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>addTwo<span class="token punctuation">}</span></span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>add-btn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            添加两个成员\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>\n        <span class="token punctuation">)</span><span class="token punctuation">}</span>\n        <span class="token punctuation">{</span>fields<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>member<span class="token punctuation">,</span> index<span class="token punctuation">,</span> key<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n          <span class="token keyword">return</span> <span class="token punctuation">(</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FormSection</span> <span class="token attr-name">name</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>member<span class="token punctuation">}</span></span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token string">`member</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MemberInfo</span> <span class="token attr-name">fields</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>fields<span class="token punctuation">}</span></span> <span class="token attr-name">index</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>index<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FormSection</span><span class="token punctuation">></span></span>\n          <span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">FieldForm</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function">componentDidMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>zentForm<span class="token punctuation">.</span><span class="token function">initialize</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      number<span class="token punctuation">:</span> <span class="token number">233</span><span class="token punctuation">,</span>\n      members<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          name<span class="token punctuation">:</span> <span class="token string">\'john\'</span><span class="token punctuation">,</span>\n          sex<span class="token punctuation">:</span> <span class="token string">\'1\'</span><span class="token punctuation">,</span>\n          hobbies<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'HH2\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function-variable function">submit</span> <span class="token operator">=</span> <span class="token punctuation">(</span>values<span class="token punctuation">,</span> zenForm<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    Notify<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">setArray</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>zentForm<span class="token punctuation">.</span><span class="token function">setFieldsValue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      number<span class="token punctuation">:</span> <span class="token number">42</span><span class="token punctuation">,</span>\n      members<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          name<span class="token punctuation">:</span> <span class="token string">\'john\'</span><span class="token punctuation">,</span>\n          sex<span class="token punctuation">:</span> <span class="token string">\'1\'</span><span class="token punctuation">,</span>\n          hobbies<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'H1\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> handleSubmit <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Form</span>\n        <span class="token attr-name">horizontal</span>\n        <span class="token attr-name">onSubmit</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token function">handleSubmit</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>submit<span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>demo-form<span class="token punctuation">"</span></span>\n      <span class="token punctuation">></span></span>\n        <span class="token operator">&lt;</span>FormInputField\n          name<span class="token operator">=</span><span class="token string">"number"</span>\n          type<span class="token operator">=</span><span class="token string">"text"</span>\n          label<span class="token operator">=</span><span class="token string">"总人数:"</span>\n          required\n          validations<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> required<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          validationErrors<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> required<span class="token punctuation">:</span> <span class="token string">\'请填写总人数\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FieldArray</span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>members<span class="token punctuation">"</span></span>\n          <span class="token attr-name">component</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>Members<span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>zent-form__form-actions<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">htmlType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            获取表单值\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>setArray<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>设置 FieldArray 值<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Form</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> WrappedForm <span class="token operator">=</span> <span class="token function">createForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span>FieldForm<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>WrappedForm</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},F.a.createElement(L)),F.a.createElement(G,{html:'<h3 class="anchor-heading"><a href="#zu-jian-yuan-li">¶</a><a href="javascript:void(0)" id="zu-jian-yuan-li" class="anchor-point"></a>组件原理</h3>\n<p>本组件核心由以下几部分组成：</p>\n<ul>\n<li><code>createForm</code> 函数：用来构建一个高阶组件，其中维护了表单中的所有表单元素（<code>Field</code> 组件）实例。通过向子组件的 <code>props</code> 中注入 <code>zentForm</code> 属性来提供表单和表单元素的各种操作方法。</li>\n<li><code>Form</code> 组件：作为整个表单的最顶层骨架，是对 <code>&#x3C;form></code> 标签的简单封装，定义了默认的 class 来提供基础样式。</li>\n<li><code>Field</code> 组件：用来封装各种表单元素组件（如 <code>Input</code> 、 <code>Checkbox</code> 、<code>Select</code> 以及各种自定义组件）的一个高阶组件。其中维护了表单元素 value 值和校验错误等信息。Field 组件会向表单元素组件传入封装过的 <code>onChange</code> 、<code>onBlur</code> 回调和 <code>value</code> 、<code>error</code> 等表单元素需要的 props 。</li>\n</ul>\n<p>具体的使用，详见 <a href="#api">API 说明</a>。</p>\n<h3 class="anchor-heading"><a href="#qi-ta-shuo-ming">¶</a><a href="javascript:void(0)" id="qi-ta-shuo-ming" class="anchor-point"></a>其他说明</h3>\n<h4 class="anchor-heading"><a href="#feng-zhuang-zi-ding-yi-de-biao-dan-yuan-su-zu-jian">¶</a><a href="javascript:void(0)" id="feng-zhuang-zi-ding-yi-de-biao-dan-yuan-su-zu-jian" class="anchor-point"></a>封装自定义的表单元素组件</h4>\n<ul>\n<li>\n<p><code>Field</code> 的展示完全由传入到 <code>component</code> 属性中的组件所控制。这个组件能够接收到所有从 <code>Field</code> 传入的 props （包括 <code>Field</code> 中构造的一些隐含的 props ，具体<a href="#form-field"><code>Form.Field</code> API</a> ）。</p>\n</li>\n<li>\n<p>对于一些常用的 <code>zent</code> 表单组件， <code>Form</code> 组件已经使用了 <code>getControlGroup</code> 函数进行了封装。如果产品设计上有一些特殊的需求，或者需要封装自定义的组件，也可以直接使用或者参考 <code>getControlGroup</code>的方式来对组件进行封装， 参考 <a href="#duo-ge-biao-dan-yuan-su-de-feng-zhuang">demo 封装多个表单元素</a>。</p>\n</li>\n<li>\n<p><strong>如果需要在一个 <code>Field</code> 中展示多个表单元素，可以将所有的表单元素封装在一个对象中传入 Field 的value 中。具体可以参考 <a href="#duo-ge-biao-dan-yuan-su-de-feng-zhuang">demo 封装多个表单元素</a>。</strong></p>\n</li>\n</ul>\n<h4 class="anchor-heading"><a href="#field-zhong-value-de-sheng-ming-zhou-qi">¶</a><a href="javascript:void(0)" id="field-zhong-value-de-sheng-ming-zhou-qi" class="anchor-point"></a><code>Field</code> 中 <code>value</code> 的生命周期</h4>\n<ul>\n<li>表单元素的初始值需要通过在 <code>Field</code> 中指定 <code>value</code> 值传入。 <code>value</code> 值的生命周期如下图所示：</li>\n</ul>\n<pre><code class="language-text">Field 中传入 value <span class="token operator">--</span><span class="token operator">-</span><span class="token operator">></span> 使用 <span class="token function">format</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 格式化 value <span class="token operator">--</span><span class="token operator">-</span><span class="token operator">></span> format 过的 value 传入 component 中渲染组件\n                               ↑                                 <span class="token operator">|</span>\n                               <span class="token operator">|</span>                                 ↓\n                               <span class="token operator">|</span>                          用户操作改变 value\n                               <span class="token operator">|</span>                                 <span class="token operator">|</span>\n                               <span class="token operator">|</span>                                 ↓\n    normalize 过的 value 写入 form 中维护<span class="token punctuation">,</span> 用于数据提交 <span class="token operator">&#x3C;</span><span class="token operator">--</span><span class="token operator">-</span> 使用 <span class="token function">normalize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 格式化 value</code></pre>\n<ul>\n<li>如果传入 <code>Field</code> 的 <code>value</code> 值是一个动态值，在外部改变 value 后会重新开始 value 的生命周期。</li>\n</ul>\n<h3 class="anchor-heading"><a href="#api">¶</a><a href="javascript:void(0)" id="api" class="anchor-point"></a>API</h3>\n<h4 class="anchor-heading"><a href="#form">¶</a><a href="javascript:void(0)" id="form" class="anchor-point"></a><strong><code>Form</code></strong></h4>\n<p>对 html 中 form 元素的一个简单封装, 提供默认的 className.</p>\n<table class="table">\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n<th>是否必填</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>className</td>\n<td>自定义额外类名</td>\n<td>string</td>\n<td><code>\'\'</code></td>\n<td>否</td>\n</tr>\n<tr>\n<td>prefix</td>\n<td>自定义前缀</td>\n<td>string</td>\n<td><code>\'zent\'</code></td>\n<td>否</td>\n</tr>\n<tr>\n<td>vertical</td>\n<td>垂直排列布局</td>\n<td>boolean</td>\n<td><code>true</code></td>\n<td>否</td>\n</tr>\n<tr>\n<td>horizontal</td>\n<td>水平排列布局</td>\n<td>boolean</td>\n<td><code>false</code></td>\n<td>否</td>\n</tr>\n<tr>\n<td>inline</td>\n<td>行内排列布局</td>\n<td>boolean</td>\n<td><code>false</code></td>\n<td>否</td>\n</tr>\n<tr>\n<td>onSubmit</td>\n<td>表单提交回调</td>\n<td>func(e:Event)</td>\n<td><code>noop</code></td>\n<td>否</td>\n</tr>\n<tr>\n<td>style</td>\n<td>内联样式</td>\n<td>object</td>\n<td>null</td>\n<td>否</td>\n</tr>\n<tr>\n<td>disableEnterSubmit</td>\n<td>禁止回车提交表单</td>\n<td>boolean</td>\n<td><code>true</code></td>\n<td>否</td>\n</tr>\n</tbody>\n</table>\n<h4 class="anchor-heading"><a href="#form-createform">¶</a><a href="javascript:void(0)" id="form-createform" class="anchor-point"></a><strong><code>Form.createForm</code></strong></h4>\n<h5 class="anchor-heading"><a href="#shi-yong-fang-shi-form-createform-options">¶</a><a href="javascript:void(0)" id="shi-yong-fang-shi-form-createform-options" class="anchor-point"></a><strong>使用方式：<code>Form.createForm(options)(FormComponent)</code></strong></h5>\n<h5 class="anchor-heading"><a href="#options">¶</a><a href="javascript:void(0)" id="options" class="anchor-point"></a><strong><code>options</code></strong></h5>\n<p><code>options</code> 支持的配置项如下:</p>\n<table class="table">\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>是否必填</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>formValidations</td>\n<td>用于添加自定义校验方法, 通过这种方式添加的方法在 validations 中使用时可以传额外的参数</td>\n<td>object</td>\n<td>否</td>\n</tr>\n</tbody>\n</table>\n<p>⚠️注意：项目中的通用校验方法，可以通过在一个文件中定义公共的<code>formValidations</code>对象后引入。</p>\n<h5 class="anchor-heading"><a href="#createform-fan-hui-zu-jian-zhong-ke-jie-shou-de-props">¶</a><a href="javascript:void(0)" id="createform-fan-hui-zu-jian-zhong-ke-jie-shou-de-props" class="anchor-point"></a><strong><code>createForm</code> 返回组件中可接收的 props</strong></h5>\n<p><code>createForm</code> 方法构建了一个高阶组件，该组件可以定义了一些额外的 props 。</p>\n<table class="table">\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n<th>是否必填</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>onChange</td>\n<td>任意表单元素修改后触发的回调，参数为所有表单元素值的对象</td>\n<td>func(values: Object)</td>\n<td>noop</td>\n<td>否</td>\n</tr>\n<tr>\n<td>onSubmitSuccess</td>\n<td>提交成功后的回调，参数是 submit 函数中 promise 的返回值</td>\n<td>func(submitResult: any)</td>\n<td>noop</td>\n<td>否</td>\n</tr>\n<tr>\n<td>onSubmitFail</td>\n<td>提交失败后的回调，参数要么是 SubmissionError 的一个实例，要么是提交过程中发生的错误对象</td>\n<td>func(submitError: SubmissionError</td>\n<td>Error)</td>\n<td>noop</td>\n</tr>\n<tr>\n<td>scrollToError</td>\n<td>表单提交时或者设置外部错误时，表单自动滚动至第一个报错表单域</td>\n<td>boolean</td>\n<td><code>false</code></td>\n<td>否</td>\n</tr>\n</tbody>\n</table>\n<p>⚠️注意：</p>\n<ol>\n<li><code>onChange</code>, <code>onSubmitSuccess</code>, <code>onSubmitFail</code>, <code>scrollToError</code> 也支持通过 <code>createForm</code> 的 <code>options</code> 参数传入；</li>\n<li>想要获取被 createForm 包裹的 FormComponent 的实例，可以在 createForm 创建的组件上添加 ref 然后调用<code>getWrappedForm</code>方法获取到。</li>\n</ol>\n<h5 class="anchor-heading"><a href="#zentform">¶</a><a href="javascript:void(0)" id="zentform" class="anchor-point"></a><strong><code>zentForm</code></strong></h5>\n<p>经过 <code>Form.createForm</code> 包装的组件通过 props 被添加了 <code>zenForm</code> 属性, 可以通过 <code>this.props.zentForm</code> 访问, <code>zentForm</code> 提供的 API 如下：</p>\n<table class="table">\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>getFormValues</td>\n<td>获取与 form 绑定的所有表单元素值</td>\n<td>func</td>\n</tr>\n<tr>\n<td>getFieldError</td>\n<td>获取某个 Field 的错误信息, 没有报错信息返回空</td>\n<td>func(name: String)</td>\n</tr>\n<tr>\n<td>setFormDirty</td>\n<td>设置所有 Field 的状态为非原始状态, 用于在提交表单时让 Field 把没有显示出来的错误显示出来</td>\n<td>func(isDirty: Boolean)</td>\n</tr>\n<tr>\n<td>setFieldExternalErrors</td>\n<td>设置外部传入的错误信息（比如服务端校验错误）， errors 的 key 为 Field 的 name ， value 为错误文案</td>\n<td>func(errors: Object)</td>\n</tr>\n<tr>\n<td>setFieldsValue</td>\n<td>设置表单 Field 的值为指定值</td>\n<td>func(data: Object)</td>\n</tr>\n<tr>\n<td>resetFieldsValue</td>\n<td>把所有 Field 的值恢复到指定值或初始状态</td>\n<td>func(data: Object)</td>\n</tr>\n<tr>\n<td>initialize</td>\n<td>设置表单 Field 初始值</td>\n<td>func(data: Object)</td>\n</tr>\n<tr>\n<td>isValid</td>\n<td>表单的所有 Field 是否都通过了校验</td>\n<td>func</td>\n</tr>\n<tr>\n<td>isSubmitting</td>\n<td>表单是否正在提交</td>\n<td>func</td>\n</tr>\n<tr>\n<td>isValidating</td>\n<td>表单是否有 Field 在异步校验</td>\n<td>func</td>\n</tr>\n<tr>\n<td>isFieldDirty</td>\n<td>Field 是否变更过值</td>\n<td>func(name: String)</td>\n</tr>\n<tr>\n<td>isFormAsyncValidated</td>\n<td>所有 field 是否都进行了异步校验</td>\n<td>func</td>\n</tr>\n<tr>\n<td>validateForm</td>\n<td>强制表单进行同步校验</td>\n<td>func(forceValidate: Boolean, callback: Function, relatedFields: Array)</td>\n</tr>\n<tr>\n<td>asyncValidateForm</td>\n<td>强制表单进行异步校验</td>\n<td>func(resolve: Function, reject: Function)</td>\n</tr>\n<tr>\n<td>isFormSubmitFail</td>\n<td>表单是否提交失败，初始时为 \n<code>false</code></td>\n<td>func</td>\n</tr>\n<tr>\n<td>isFormSubmitSuccess</td>\n<td>表单是否提交成功, 初始时为 \n<code>true</code></td>\n<td>func</td>\n</tr>\n<tr>\n<td>updateFormSubmitStatus</td>\n<td>更新表单提交成功、失败状态</td>\n<td>func(submitSuccess: Boolean)</td>\n</tr>\n</tbody>\n</table>\n<h5 class="anchor-heading"><a href="#handlesubmit">¶</a><a href="javascript:void(0)" id="handlesubmit" class="anchor-point"></a><strong><code>handleSubmit</code></strong></h5>\n<p><code>createForm</code> 还会为被包装的组件提供一个封装过的 <code>handleSubmit</code> 方法，具体使用可以参考<a href="#biao-dan-cao-zuo">demo 表单操作</a>。</p>\n<p>⚠️注意：如果希望在 <code>onSubmitFail</code> 回调中正确接收到 <code>error</code> 对象，需要在 <code>submit</code> 函数中抛出一个 <code>SubmissionError</code> 类型的对象</p>\n<pre><code class="language-jsx"><span class="token keyword">const</span> <span class="token punctuation">{</span> SubmissionError <span class="token punctuation">}</span> <span class="token operator">=</span> Form<span class="token punctuation">;</span>\n\n<span class="token function">submit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// do submit</span>\n  <span class="token operator">...</span>\n  <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">SubmissionError</span><span class="token punctuation">(</span><span class="token string">\'error message\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token function">onSubmissionFail</span><span class="token punctuation">(</span>submissionError<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>submissionError <span class="token operator">&#x26;&#x26;</span> submissionError<span class="token punctuation">.</span>errors <span class="token operator">===</span> <span class="token string">\'error message\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// do something</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre>\n<h4 class="anchor-heading"><a href="#form-field">¶</a><a href="javascript:void(0)" id="form-field" class="anchor-point"></a><strong><code>Form.Field</code></strong></h4>\n<p>所有需要维护 <code>value</code> 的表单元素组件都需要通过 <code>Field</code> 组件包装一下。\n在 <code>Field</code> 组件上可以传入以下 props ，<code>component</code> 以外的其他 props （包括自定义的 props ），都会传入到 <code>component</code> 中所定义的表单元素组件中：</p>\n<table class="table">\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>是否必填</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>name</td>\n<td>表单元素名</td>\n<td>string</td>\n<td>是</td>\n</tr>\n<tr>\n<td>component</td>\n<td>真正的表单元素组件，负责表单元素如何展示。可以是字符串(标准 html 元素名), 或者 React 组件</td>\n<td>string / React.Component</td>\n<td>是</td>\n</tr>\n<tr>\n<td>value</td>\n<td>表单元素初始值</td>\n<td>any</td>\n<td>是</td>\n</tr>\n<tr>\n<td>normalize</td>\n<td>onChange 或者 onBlur 后格式化表单元素值</td>\n<td>func(value, previousValue, nextValues, previousValues)</td>\n<td>否</td>\n</tr>\n<tr>\n<td>format</td>\n<td>渲染前格式化表单元素值, 不影响真正存储的表单元素值</td>\n<td>func(value, previousValue, nextValues, previousValues)</td>\n<td>否</td>\n</tr>\n<tr>\n<td>onChange</td>\n<td>value 值修改后的回调，会在 Field 中封装一层。(自定义组件需要自己调用由 Field 组件封装后传入的 \n<code>props.onChange()</code>\n 后才会执行)</td>\n<td>func(event, newValue, previousValue, preventSetValue)</td>\n<td>否</td>\n</tr>\n<tr>\n<td>onBlur</td>\n<td>blur 后的回调（会在 Field 中封装一层）</td>\n<td>func(event, newValue, previousValue, preventSetValue)</td>\n<td>否</td>\n</tr>\n<tr>\n<td>onFocus</td>\n<td>focus 后的回调（会在 Field 中封装一层）</td>\n<td>func(event)</td>\n<td>否</td>\n</tr>\n<tr>\n<td>validations</td>\n<td>定义表单元素校验方法</td>\n<td>object</td>\n<td>否</td>\n</tr>\n<tr>\n<td>validationErrors</td>\n<td>定义表单元素检验方法对应的出错信息</td>\n<td>object</td>\n<td>否</td>\n</tr>\n<tr>\n<td>validateOnChange</td>\n<td>是否在触发change事件时执行表单校验</td>\n<td>boolean</td>\n<td>否</td>\n</tr>\n<tr>\n<td>validateOnBlur</td>\n<td>是否在触发blur事件时执行表单校验</td>\n<td>boolean</td>\n<td>否</td>\n</tr>\n<tr>\n<td>clearErrorOnFocus</td>\n<td>是否在触发focus事件时清空错误信息</td>\n<td>boolean</td>\n<td>否</td>\n</tr>\n<tr>\n<td>asyncValidation</td>\n<td>异步校验 func, 需要返回 Promise</td>\n<td>func(values, value)</td>\n<td>否</td>\n</tr>\n<tr>\n<td>displayError</td>\n<td>显示错误信息</td>\n<td>boolean</td>\n<td>否</td>\n</tr>\n<tr>\n<td>relatedFields</td>\n<td>当前表单域对哪些表单域的校验有影响</td>\n<td>array</td>\n<td>否</td>\n</tr>\n</tbody>\n</table>\n<p>除了上述参数之外， <code>Field</code> 组件会隐含地向被包裹的表单元素组件中传入以下 props ：</p>\n<table class="table">\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>isDirty</td>\n<td>表单元素值被改变过</td>\n<td>boolean</td>\n</tr>\n<tr>\n<td>isActive</td>\n<td>表单元素为input且获得了焦点</td>\n<td>boolean</td>\n</tr>\n<tr>\n<td>error</td>\n<td>第一个校验错误文本信息（没有报错时为 null ）</td>\n<td>string / Null</td>\n</tr>\n<tr>\n<td>errors</td>\n<td>校验错误文本信息数组（没有错误时为空数组）</td>\n<td>array</td>\n</tr>\n</tbody>\n</table>\n<h5 class="anchor-heading"><a href="#huo-qu-field-dui-ying-component-de-shi-li">¶</a><a href="javascript:void(0)" id="huo-qu-field-dui-ying-component-de-shi-li" class="anchor-point"></a><strong>获取 <code>Field</code> 对应 <code>component</code> 的实例</strong></h5>\n<p>可以通过在 <code>Field</code> 上加上 <code>ref</code>，然后调用 <code>getWrappedComponent</code> 方法来获取。</p>\n<pre><code class="language-text"><span class="token operator">&#x3C;</span>Field\n  ref<span class="token operator">=</span><span class="token punctuation">{</span>ref <span class="token operator">=></span> <span class="token punctuation">{</span> <span class="token keyword">this</span><span class="token punctuation">.</span>field <span class="token operator">=</span> ref <span class="token punctuation">}</span><span class="token punctuation">}</span>\n  component<span class="token operator">=</span><span class="token punctuation">{</span>XxxComponent<span class="token punctuation">}</span>\n  <span class="token operator">...</span>\n<span class="token operator">/</span><span class="token operator">></span>\n\n<span class="token keyword">const</span> component <span class="token operator">=</span> field<span class="token punctuation">.</span><span class="token function">getWrappedComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<h4 class="anchor-heading"><a href="#form-getcontrolgroup">¶</a><a href="javascript:void(0)" id="form-getcontrolgroup" class="anchor-point"></a><strong><code>Form.getControlGroup</code></strong></h4>\n<p><code>getControlGroup</code> 是一个用来快速封装自定义组件的函数，它返回一个满足通用布局与样式要求（左侧标签 、右侧表单元素）的stateless functional component 。同时支持将 <code>Field</code> 中的 错误提示信息展示出来。</p>\n<p>封装过的组件支持在 <code>Field</code> 上额外传入以下参数：</p>\n<table class="table">\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>是否必填</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>label</td>\n<td>表单元素的label</td>\n<td>string / React.Component</td>\n<td>否</td>\n</tr>\n<tr>\n<td>className</td>\n<td>添加到control-group 上的额外类名，可以用来覆盖子元素的样式</td>\n<td>string</td>\n<td>否</td>\n</tr>\n<tr>\n<td>helpDesc</td>\n<td>表单元素的说明性文字</td>\n<td>string / React.Component</td>\n<td>否</td>\n</tr>\n<tr>\n<td>notice</td>\n<td>表单元素的重要提示性文字</td>\n<td>string / React.Component</td>\n<td>否</td>\n</tr>\n<tr>\n<td>required</td>\n<td>为 true 时会在 label 前添加红色的"*"</td>\n<td>boolean</td>\n<td>否</td>\n</tr>\n</tbody>\n</table>\n<h5 class="anchor-heading"><a href="#huo-qu-control-zu-jian-shi-li">¶</a><a href="javascript:void(0)" id="huo-qu-control-zu-jian-shi-li" class="anchor-point"></a><strong>获取 <code>Control</code> 组件实例</strong></h5>\n<p>参照上方获取 <code>Field</code> 对应 <code>component</code> 的实例，然后调用 <code>getControlInstance</code> 方法。</p>\n<pre><code class="language-jsx"><span class="token keyword">const</span> component <span class="token operator">=</span> field<span class="token punctuation">.</span><span class="token function">getWrappedComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getControlInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<h4 class="anchor-heading"><a href="#form-formsection">¶</a><a href="javascript:void(0)" id="form-formsection" class="anchor-point"></a><strong><code>Form.FormSection</code></strong></h4>\n<p><code>FormSection</code> 提供以下参数：</p>\n<table class="table">\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n<th>是否必填</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>name</td>\n<td>表单块的名字</td>\n<td>string</td>\n<td>无</td>\n<td>是</td>\n</tr>\n<tr>\n<td>component</td>\n<td>包裹 \n<code>FormSection</code>\n 的 html 标签</td>\n<td>string</td>\n<td><code>\'div\'</code></td>\n<td>否</td>\n</tr>\n<tr>\n<td>children</td>\n<td>表单块的子元素</td>\n<td>string / React.Component</td>\n<td>无</td>\n<td>否</td>\n</tr>\n</tbody>\n</table>\n<h4 class="anchor-heading"><a href="#form-fieldarray">¶</a><a href="javascript:void(0)" id="form-fieldarray" class="anchor-point"></a><strong><code>Form.FieldArray</code></strong></h4>\n<p><code>FieldArray</code> 组件支持如下：</p>\n<table class="table">\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>是否必填</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>name</td>\n<td><code>FieldArray</code>\n 的名字</td>\n<td>string</td>\n<td>是</td>\n<td></td>\n</tr>\n<tr>\n<td>value</td>\n<td>组件的值</td>\n<td>array</td>\n<td>否</td>\n<td></td>\n</tr>\n<tr>\n<td>component</td>\n<td><code>FieldArray</code>\n 中展示的表单元素组件，可以是字符串(标准 html 元素名), 或者 React 组件</td>\n<td>string / React.Component</td>\n<td>是</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p><code>FieldArray</code> 会为其 <code>component</code> 注入 <code>fields</code> 属性并提供表单域数组的遍历、增加、删除等功能，其 API 如下所示：</p>\n<table class="table">\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>name</td>\n<td><code>FieldArray</code>\n 的名字</td>\n<td>string</td>\n</tr>\n<tr>\n<td>length</td>\n<td><code>FieldArray</code>\n 中表单域数组的长度</td>\n<td>number</td>\n</tr>\n<tr>\n<td>forEach</td>\n<td>遍历 \n<code>FieldArray</code>\n 中表单域数组</td>\n<td>(callback: Function) => any</td>\n</tr>\n<tr>\n<td>get</td>\n<td>获取 \n<code>FieldArray</code>\n 中表单域数组中某一项的值</td>\n<td>(index: Number) => any</td>\n</tr>\n<tr>\n<td>getAll</td>\n<td>获取 \n<code>FieldArray</code>\n 中表单域数组的所有值</td>\n<td>func</td>\n</tr>\n<tr>\n<td>map</td>\n<td>遍历 \n<code>FieldArray</code>\n 中表单域数组</td>\n<td>(callback: Function) => any</td>\n</tr>\n<tr>\n<td>move</td>\n<td>移动 \n<code>FieldArray</code>\n 中表单域数组的某一项</td>\n<td>(fromPos: Number, toPos: Number) => any</td>\n</tr>\n<tr>\n<td>pop</td>\n<td>删除 \n<code>FieldArray</code>\n 中表单域数组的最后一项</td>\n<td>func</td>\n</tr>\n<tr>\n<td>push</td>\n<td>在 \n<code>FieldArray</code>\n 中表单域数组末尾添加一项</td>\n<td>(value: Object/String) => any</td>\n</tr>\n<tr>\n<td>remove</td>\n<td>删除 \n<code>FieldArray</code>\n 中表单域数组中的某一项</td>\n<td>(index: Number) => any</td>\n</tr>\n<tr>\n<td>removeAll</td>\n<td>删除 \n<code>FieldArray</code>\n 中整个表单域数组</td>\n<td>func</td>\n</tr>\n<tr>\n<td>shift</td>\n<td>删除 \n<code>FieldArray</code>\n 中表单域数组的第一项</td>\n<td>func</td>\n</tr>\n<tr>\n<td>swap</td>\n<td>交换 \n<code>FieldArray</code>\n 中表单域数组的某两项</td>\n<td>(indexA: Number, indexB: Number) => any</td>\n</tr>\n<tr>\n<td>unshift</td>\n<td>在 \n<code>FieldArray</code>\n 中表单域数组的头部添加一项</td>\n<td>(value: Object/String) => any</td>\n</tr>\n<tr>\n<td>concat</td>\n<td>在 \n<code>FieldArray</code>\n 中表单域数组末尾连接一个数组, 如果传入的不是数组，则会被添加到末尾</td>\n<td>(value: Object/String/Array) => any</td>\n</tr>\n<tr>\n<td>replaceAll</td>\n<td>将 \n<code>FieldArray</code>\n 中表单域数组全部替换为传入的参数</td>\n<td>(value: Array) => any</td>\n</tr>\n</tbody>\n</table>\n<p>⚠️注意：遍历的回调函数 callback 将接受五个参数: item（<code>FieldArray</code> 中当前项的名字），index（<code>FieldArray</code> 中当前项的次序），key（<code>FieldArray</code> 中当前项的唯一 key 值），value（<code>FieldArray</code> 中当前项的值）， fieldsValue（<code>FieldArray</code> 的所有值）。为了保证 <code>FieldArray</code> 在删除和添加时数据正确，遍历时一定要给 <code>component</code> 中的子节点设置正确的 <code>name</code> 和 <code>key</code>, 详见使用参考 <a href="#fieldarray-zu-jian">FieldArray 基本使用</a></p>\n<h4 class="anchor-heading"><a href="#nei-zhi-validation-rules">¶</a><a href="javascript:void(0)" id="nei-zhi-validation-rules" class="anchor-point"></a><strong>内置 validation rules</strong></h4>\n<p>可以直接在 <code>Field</code> 的 <code>validations</code> 属性中使用，使用方法参考 <a href="#biao-dan-xiao-yan-de-shi-yong">demo 常用表单校验</a>。内置规则如下：</p>\n<table class="table">\n<thead>\n<tr>\n<th>规则名</th>\n<th>说明</th>\n<th>可传参数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>required</td>\n<td>是否必填</td>\n<td>任意，传 true 是为了表意，传其他值也是当作必填，下同</td>\n</tr>\n<tr>\n<td>isExisty</td>\n<td>是否非 null ，非 undefined</td>\n<td>任意</td>\n</tr>\n<tr>\n<td>matchRegex</td>\n<td>是否匹配指定正则表达式</td>\n<td>Regex</td>\n</tr>\n<tr>\n<td>isEmail</td>\n<td>是否邮件类型字符串</td>\n<td>任意</td>\n</tr>\n<tr>\n<td>isUrl</td>\n<td>是否 url 类型</td>\n<td>任意</td>\n</tr>\n<tr>\n<td>isTrue</td>\n<td>是否true</td>\n<td>任意</td>\n</tr>\n<tr>\n<td>isFalse</td>\n<td>是否false</td>\n<td>任意</td>\n</tr>\n<tr>\n<td>isNumeric</td>\n<td>是否数字类型</td>\n<td>任意</td>\n</tr>\n<tr>\n<td>isInt</td>\n<td>是否整数</td>\n<td>任意</td>\n</tr>\n<tr>\n<td>isFloat</td>\n<td>是否小数</td>\n<td>任意</td>\n</tr>\n<tr>\n<td>isLength</td>\n<td>字符串或数组是否为指定长度</td>\n<td>长度值(Number)</td>\n</tr>\n<tr>\n<td>equals</td>\n<td>是否与指定值相等</td>\n<td>指定值</td>\n</tr>\n<tr>\n<td>equalsField</td>\n<td>是否与表单中的其他元素值相等</td>\n<td>其他 Field 的name(String)</td>\n</tr>\n<tr>\n<td>maxLength</td>\n<td>字符串或数组不能超过指定长度</td>\n<td>长度值(Number)</td>\n</tr>\n<tr>\n<td>minLength</td>\n<td>字符串或数组不能小于指定长度</td>\n<td>长度值(Number)</td>\n</tr>\n</tbody>\n</table>'}))}}]),a}(y.Component)}}]);