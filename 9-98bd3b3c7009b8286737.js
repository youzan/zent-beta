(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{553:function(n,s,a){"use strict";a.d(s,"a",(function(){return t}));var t=[{cssVariable:"--theme-link-color",color:"$primary-500",comment:" Primary text link brand color"},{cssVariable:"--theme-link-hover-color",color:"$primary-400",comment:" Hover state of primary text link brand color"},{cssVariable:"--theme-link-active-color",color:"$primary-600",comment:" Active state of primary text link brand color"},{cssVariable:"--theme-default-hover-color",color:"$primary-500",comment:" Hover state of default text color components e.g. default button.."},{cssVariable:"--theme-default-hover-bg",color:"$primary-100",comment:" Hover state of default background color of components , e.g. grid, select panel.."},{cssVariable:"--theme-default-hover-border-color",color:"$primary-500",comment:" Hover state of default border color of components , e.g. default button.."},{cssVariable:"--theme-primary-bg",color:"$primary-500",comment:" Primary background color of components, e.g. primary type button"},{cssVariable:"--theme-primary-border-color",color:"$primary-500",comment:" Primary border color of components, e.g. primary type button"},{cssVariable:"--theme-primary-hover-bg",color:"$primary-400",comment:" Hover state of primary background color of components, e.g. primary type button"},{cssVariable:"--theme-primary-hover-border-color",color:"$primary-400",comment:" Hover state of primary border color of components, e.g. primary type button"},{cssVariable:"--theme-primary-active-bg",color:"$primary-600",comment:" Active state of primary background color of components, e.g. primary type button"},{cssVariable:"--theme-primary-active-border-color",color:"$primary-600",comment:" Active state of primary border color of components, e.g. primary type button"},{cssVariable:"--theme-weak-hover-color",color:"$primary-400",comment:" Hover state of primary text weak link brand color"},{cssVariable:"--theme-weak-active-color",color:"$primary-600",comment:" Active state of primary text weak link brand color"}]},559:function(n,s,a){"use strict";a.r(s),a.d(s,"default",(function(){return j}));var t=a(21),p=a.n(t),o=a(198),e=a.n(o),c=a(0),l=a(1),u=a.n(l),r=a(27),k=a(553),i=a(199);function m(n,s){var a=Object.keys(n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(n);s&&(t=t.filter((function(s){return Object.getOwnPropertyDescriptor(n,s).enumerable}))),a.push.apply(a,t)}return a}function d(n){for(var s=1;s<arguments.length;s++){var a=null!=arguments[s]?arguments[s]:{};s%2?m(Object(a),!0).forEach((function(s){p()(n,s,a[s])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(a)):m(Object(a)).forEach((function(s){Object.defineProperty(n,s,Object.getOwnPropertyDescriptor(a,s))}))}return n}var g=function(){var n=r.Zb.generatePalette,s=r.Zb.generateTheme,a=["#ed6a18","#ed9f18","#edd418","#bad415","#5bd415","#15d48e","#15bad4","#155bd4","#412ad4","#8e15d4","#d415ba","#d42f15"],t={"$primary-100":0,"$primary-400":1,"$primary-500":2,"$primary-600":3},p="Hex",o="Rgb",u=[r.Yb.DefaultHoverBackgroundColor,r.Yb.PrimaryHoverBackgroundColor,r.Yb.PrimaryBackgroundColor,r.Yb.PrimaryActiveBackgroundColor],m=k.a.sort((n,s)=>t[n.color]-t[s.color]),d=s({colors:[{baseColor:"#155bd4",scene:u}]}),g=n=>n.map(n=>"".concat(n.cssVariableName,":  ").concat(n.color,";")).join("\n"),h=()=>{var k=Object(l.useState)("#155bd4"),h=e()(k,2),b=h[0],y=h[1],f=Object(l.useState)(n("#155bd4")),v=e()(f,2),j=v[0],C=v[1],w=Object(l.useState)(g(d.colors)),x=e()(w,2),S=x[0],T=x[1],O=Object(l.useState)(!1),z=e()(O,2),N=z[0],P=z[1],V=Object(l.useState)(p),B=e()(V,2),_=B[0],$=B[1],q=()=>{var n=_===p?o:p;return Object(c.jsxs)(c.Fragment,{children:[_," Color",Object(c.jsxs)(r.k,{className:"demo-theme-color-copy-switcher",size:"small",onClick:()=>{$(n)},children:["切换到 ",n]})]})},H=[{title:"CSS Variable",name:"cssVariable",bodyRender:({cssVariable:n,comment:s})=>Object(c.jsxs)("div",{className:"demo-theme-color-title",children:[Object(c.jsxs)("p",{className:"demo-theme-color-css-variable",children:[n,Object(c.jsx)(r.t,{text:n,children:Object(c.jsx)(r.gb,{className:"demo-theme-color-copy-icon",type:"order-o"})})]}),Object(c.jsx)("p",{className:"demo-theme-color-desc",children:s})]})},{title:Object(c.jsx)(q,{}),name:"color",bodyRender:({color:n})=>{var s=j[t[n]],a=_===o?Object(i.a)(s):s;return Object(c.jsxs)("div",{className:"demo-theme-color",children:[Object(c.jsx)(r.t,{text:s,children:Object(c.jsx)("p",{className:"demo-theme-color-block",style:{background:s}})}),Object(c.jsx)("div",{className:"demo-theme-color-name",children:a})]})},width:"300px"}];return Object(c.jsxs)(c.Fragment,{children:[Object(c.jsxs)("div",{children:[Object(c.jsx)(r.q,{color:b,type:"simple",onChange:a=>{y(a),C(n(a));var t=s({colors:[{baseColor:a,scene:u}]}),p=g(t.colors);T(p),P(!0),setTimeout(()=>{P(!1)},[500])},presetColors:a}),Object(c.jsx)("span",{className:"demo-theme-base-color",children:b}),Object(c.jsx)(r.t,{text:S,children:Object(c.jsx)(r.k,{loading:N,type:"primary",className:"demo-theme-copy-btn",children:"复制所有变量"})})]}),Object(c.jsx)(r.db,{rowKey:"cssVariable",className:"demo-theme-colors",columns:H,datasets:m})]})};return Object(c.jsx)(h,{})},h=function(){var n=r.Zb.generateTheme,s=r.Zb.applyTheme,a=["#ed6a18","#ed9f18","#edd418","#bad415","#5bd415","#15d48e","#15bad4","#155bd4","#412ad4","#8e15d4","#d415ba","#d42f15"],t=[r.Yb.DefaultHoverBackgroundColor,r.Yb.PrimaryHoverBackgroundColor,r.Yb.PrimaryBackgroundColor,r.Yb.PrimaryActiveBackgroundColor],p=()=>{var p=Object(l.useState)("#155bd4"),o=e()(p,2),u=o[0],k=o[1];return Object(c.jsxs)(c.Fragment,{children:[Object(c.jsx)(r.q,{color:u,type:"simple",onChange:a=>{var p=n({colors:[{baseColor:a,scene:t}]});s(p),k(a),r.xb.success("主题色已更新")},presetColors:a}),Object(c.jsx)("span",{className:"demo-theme-base-color",children:u})]})};return Object(c.jsx)(p,{})};function b(n){return Object(c.jsx)(n.tag,d(d({},n.attributes),{},{dangerouslySetInnerHTML:{__html:n.html}}))}function y(n){return Object(c.jsx)(b,{tag:"section",html:n.html,attributes:{className:"zandoc-react-markdown"}})}function f(n){return Object(c.jsx)(b,{tag:"style",html:n.style})}class v extends l.Component{constructor(...n){super(...n),p()(this,"state",{showCode:!1}),p()(this,"toggle",()=>{this.setState({showCode:!this.state.showCode})})}render(){var n=this.state.showCode,s=this.props,a=s.title,t=s.src,p=s.children;return Object(c.jsxs)("div",{className:"zandoc-react-demo",children:[Object(c.jsx)("div",{className:"zandoc-react-demo__preview",children:p}),Object(c.jsxs)("div",{className:"zandoc-react-demo__bottom",onClick:this.toggle,children:[Object(c.jsx)("div",{className:"zandoc-react-demo__title",children:Object(c.jsx)("p",{children:a||""})}),Object(c.jsx)("i",{className:"zenticon zenticon-caret-up zandoc-react-demo__toggle ".concat(n?"zandoc-react-demo__toggle-on":"zandoc-react-demo__toggle-off")})]}),n&&Object(c.jsx)("pre",{className:"zandoc-react-demo__code",children:Object(c.jsx)(b,{tag:"code",html:t,attributes:{className:"language-jsx"}})})]})}}class j extends l.Component{componentDidMount(){var n=location.hash;if(n){var s=document.querySelector('a[href="'.concat(n,'"]'));s&&Object(r.tc)(document.documentElement,0,function n(s,a){for(;s;)return s.offsetTop&&"static"!==getComputedStyle(s).position&&(a+=s.offsetTop),n(s.parentNode,a);return a}(s,-9))}}render(){return u.a.createElement("div",{className:"zandoc-react-container",key:null},u.a.createElement(f,{style:".demo-theme-color-title {\n  font-size: 14px;\n  color: #333;\n}\n\n.demo-theme-color-css-variable {\n  cursor: pointer;\n}\n\n.demo-theme-color-desc {\n  font-size: 12px;\n  color: #999;\n}\n\n.demo-theme-color {\n  margin: 4px 8px 4px 4px;\n  display: flex;\n  align-items: center;\n}\n\n.demo-theme-color-copy-switcher {\n  margin-left: 16px;\n}\n\n.demo-theme-color-block {\n  width: 80px;\n  height: 30px;\n  margin-bottom: 4px;\n  border-radius: 2px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: #000;\n  cursor: pointer;\n}\n\n.demo-theme-color-copy-icon {\n  margin-left: 4px;\n}\n\n.demo-theme-color-name {\n  color: #333;\n  text-align: center;\n  margin-left: 4px;\n}\n\n.demo-theme-base-color {\n  margin-left: 8px;\n}\n\n.demo-theme-copy-btn {\n  float: right;\n}\n\n.demo-theme-colors {\n  margin-top: 16px;\n}\n\nimg[alt='zent-theme'] {\n  width: 514px;\n  height: 319px;\n}"}),u.a.createElement(y,{html:'<h2 class="anchor-heading"><a href="#ding-zhi-zhu-ti">¶</a><a href="javascript:void(0)" id="ding-zhi-zhu-ti" class="anchor-point"></a>定制主题</h2>\n<p>Zent 支持主题定制，目前仅支持组件库颜色的定制。</p>\n<p><img src="https://img.yzcdn.cn/zanui/react/zent-theme.png" alt="zent-theme"></p>\n<h3 class="anchor-heading"><a href="#shi-yong-css-variables">¶</a><a href="javascript:void(0)" id="shi-yong-css-variables" class="anchor-point"></a>使用 CSS Variables</h3>\n<p>Zent 使用CSS Variables定制主题色，对于不支持 CSS Variables 的浏览器，会降级到默认主题色，可以通过重新构建 SCSS 定制主题色。</p>\n<p>注意：主题色需要提供两套，一套是 Hex 形式，另一套是类似 RGB 形式的，CSS 变量主题色如下：</p>'}),u.a.createElement(v,{title:"获取主题色",id:"Demo1",src:'<span class="token keyword module">import</span> <span class="token imports"><span class="token punctuation">{</span> <span class="token maybe-class-name">ColorPicker</span><span class="token punctuation">,</span> <span class="token maybe-class-name">ThemeSdk</span><span class="token punctuation">,</span> <span class="token maybe-class-name">Grid</span><span class="token punctuation">,</span> <span class="token maybe-class-name">CopyButton</span><span class="token punctuation">,</span> <span class="token maybe-class-name">Button</span><span class="token punctuation">,</span> <span class="token maybe-class-name">Icon</span> <span class="token punctuation">}</span></span> <span class="token keyword module">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n<span class="token keyword module">import</span> <span class="token imports"><span class="token punctuation">{</span> cssVarInfo <span class="token punctuation">}</span></span> <span class="token keyword module">from</span> <span class="token string">\'zent/es/theme/css-var-info\'</span><span class="token punctuation">;</span>\n<span class="token keyword module">import</span> <span class="token imports"><span class="token punctuation">{</span> hexToRGBString <span class="token punctuation">}</span></span> <span class="token keyword module">from</span> <span class="token string">\'zent/es/theme/utils\'</span><span class="token punctuation">;</span>\n<span class="token keyword module">import</span> <span class="token imports"><span class="token punctuation">{</span> useState <span class="token punctuation">}</span></span> <span class="token keyword module">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> generatePalette<span class="token punctuation">,</span> generateTheme <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token maybe-class-name">ThemeSdk</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> colors <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token string">\'#ed6a18\'</span><span class="token punctuation">,</span>\n  <span class="token string">\'#ed9f18\'</span><span class="token punctuation">,</span>\n  <span class="token string">\'#edd418\'</span><span class="token punctuation">,</span>\n  <span class="token string">\'#bad415\'</span><span class="token punctuation">,</span>\n  <span class="token string">\'#5bd415\'</span><span class="token punctuation">,</span>\n  <span class="token string">\'#15d48e\'</span><span class="token punctuation">,</span>\n  <span class="token string">\'#15bad4\'</span><span class="token punctuation">,</span>\n  <span class="token string">\'#155bd4\'</span><span class="token punctuation">,</span>\n  <span class="token string">\'#412ad4\'</span><span class="token punctuation">,</span>\n  <span class="token string">\'#8e15d4\'</span><span class="token punctuation">,</span>\n  <span class="token string">\'#d415ba\'</span><span class="token punctuation">,</span>\n  <span class="token string">\'#d42f15\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> defaultColor <span class="token operator">=</span> <span class="token string">\'#155bd4\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> themeIndex <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token string">\'$primary-100\'</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n  <span class="token string">\'$primary-400\'</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n  <span class="token string">\'$primary-500\'</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n  <span class="token string">\'$primary-600\'</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token maybe-class-name">ColorType</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  hex<span class="token operator">:</span> <span class="token string">\'Hex\'</span><span class="token punctuation">,</span>\n  rgb<span class="token operator">:</span> <span class="token string">\'Rgb\'</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> colorScene <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token maybe-class-name">ThemeScene</span><span class="token punctuation">.</span><span class="token property-access"><span class="token maybe-class-name">DefaultHoverBackgroundColor</span></span><span class="token punctuation">,</span>\n  <span class="token maybe-class-name">ThemeScene</span><span class="token punctuation">.</span><span class="token property-access"><span class="token maybe-class-name">PrimaryHoverBackgroundColor</span></span><span class="token punctuation">,</span>\n  <span class="token maybe-class-name">ThemeScene</span><span class="token punctuation">.</span><span class="token property-access"><span class="token maybe-class-name">PrimaryBackgroundColor</span></span><span class="token punctuation">,</span>\n  <span class="token maybe-class-name">ThemeScene</span><span class="token punctuation">.</span><span class="token property-access"><span class="token maybe-class-name">PrimaryActiveBackgroundColor</span></span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> cssVarData <span class="token operator">=</span> cssVarInfo<span class="token punctuation">.</span><span class="token method function property-access">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">pre<span class="token punctuation">,</span> current</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">(</span>themeIndex<span class="token punctuation">[</span>pre<span class="token punctuation">.</span><span class="token property-access">color</span><span class="token punctuation">]</span> <span class="token operator">-</span> themeIndex<span class="token punctuation">[</span>current<span class="token punctuation">.</span><span class="token property-access">color</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> defaultTheme <span class="token operator">=</span> <span class="token function">generateTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span> colors<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> baseColor<span class="token operator">:</span> defaultColor<span class="token punctuation">,</span> scene<span class="token operator">:</span> colorScene <span class="token punctuation">}</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">transformToCss</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">theme</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n <span class="token keyword control-flow">return</span> theme\n    <span class="token punctuation">.</span><span class="token method function property-access">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token arrow operator">=></span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>item<span class="token punctuation">.</span><span class="token property-access">cssVariableName</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:  </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>item<span class="token punctuation">.</span><span class="token property-access">color</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">;</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token method function property-access">join</span><span class="token punctuation">(</span><span class="token string">\'\\n\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function"><span class="token maybe-class-name">ThemeSdkComponent</span></span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>color<span class="token punctuation">,</span> setColor<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span>defaultColor<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>palette<span class="token punctuation">,</span> setPalette<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token function">generatePalette</span><span class="token punctuation">(</span>defaultColor<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>themeCssStr<span class="token punctuation">,</span> setThemeCssStr<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token function">transformToCss</span><span class="token punctuation">(</span>defaultTheme<span class="token punctuation">.</span><span class="token property-access">colors</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>loading<span class="token punctuation">,</span> setLoading<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>colorType<span class="token punctuation">,</span> setColorType<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token maybe-class-name">ColorType</span><span class="token punctuation">.</span><span class="token property-access">hex</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function"><span class="token maybe-class-name">Color</span></span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> otherType <span class="token operator">=</span> colorType <span class="token operator">===</span> <span class="token maybe-class-name">ColorType</span><span class="token punctuation">.</span><span class="token property-access">hex</span> <span class="token operator">?</span> <span class="token maybe-class-name">ColorType</span><span class="token punctuation">.</span><span class="token property-access">rgb</span> <span class="token operator">:</span> <span class="token maybe-class-name">ColorType</span><span class="token punctuation">.</span><span class="token property-access">hex</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> <span class="token function-variable function">changeColorType</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n      <span class="token function">setColorType</span><span class="token punctuation">(</span>otherType<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword control-flow">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>\n        <span class="token punctuation">{</span>colorType<span class="token punctuation">}</span> <span class="token maybe-class-name">Color</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo-theme-color-copy-switcher<span class="token punctuation">"</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>small<span class="token punctuation">"</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>changeColorType<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>切换到 <span class="token punctuation">{</span>otherType<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      title<span class="token operator">:</span> <span class="token string">\'CSS Variable\'</span><span class="token punctuation">,</span>\n      name<span class="token operator">:</span> <span class="token string">\'cssVariable\'</span><span class="token punctuation">,</span>\n      <span class="token function-variable function">bodyRender</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> cssVariable<span class="token punctuation">,</span> comment <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n        <span class="token keyword control-flow">return</span> <span class="token punctuation">(</span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo-theme-color-title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo-theme-color-css-variable<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n              <span class="token punctuation">{</span>cssVariable<span class="token punctuation">}</span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CopyButton</span></span> <span class="token attr-name">text</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>cssVariable<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Icon</span></span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo-theme-color-copy-icon<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>order-o<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">CopyButton</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo-theme-color-desc<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>comment<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      title<span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Color</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n      name<span class="token operator">:</span> <span class="token string">\'color\'</span><span class="token punctuation">,</span>\n      <span class="token function-variable function">bodyRender</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> color <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> _color <span class="token operator">=</span> palette<span class="token punctuation">[</span>themeIndex<span class="token punctuation">[</span>color<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n        <span class="token keyword">const</span> colorText <span class="token operator">=</span> colorType <span class="token operator">===</span> <span class="token maybe-class-name">ColorType</span><span class="token punctuation">.</span><span class="token property-access">rgb</span> <span class="token operator">?</span> <span class="token function">hexToRGBString</span><span class="token punctuation">(</span>_color<span class="token punctuation">)</span> <span class="token operator">:</span> _color <span class="token punctuation">;</span>\n        <span class="token keyword control-flow">return</span> <span class="token punctuation">(</span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo-theme-color<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CopyButton</span></span> <span class="token attr-name">text</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>_color<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo-theme-color-block<span class="token punctuation">"</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> background<span class="token operator">:</span> _color <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">CopyButton</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo-theme-color-name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>colorText<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      width<span class="token operator">:</span> <span class="token string">\'300px\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">onChangeComplete</span> <span class="token operator">=</span> <span class="token parameter">baseColor</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">setColor</span><span class="token punctuation">(</span>baseColor<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">setPalette</span><span class="token punctuation">(</span><span class="token function">generatePalette</span><span class="token punctuation">(</span>baseColor<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">const</span> theme <span class="token operator">=</span> <span class="token function">generateTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span> colors<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> baseColor<span class="token punctuation">,</span> scene<span class="token operator">:</span> colorScene <span class="token punctuation">}</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> cssStr <span class="token operator">=</span> <span class="token function">transformToCss</span><span class="token punctuation">(</span>theme<span class="token punctuation">.</span><span class="token property-access">colors</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">setThemeCssStr</span><span class="token punctuation">(</span>cssStr<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token function">setLoading</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n      <span class="token function">setLoading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">500</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword control-flow">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ColorPicker</span></span> <span class="token attr-name">color</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>color<span class="token punctuation">}</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>simple<span class="token punctuation">"</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onChangeComplete<span class="token punctuation">}</span></span> <span class="token attr-name">presetColors</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>colors<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo-theme-base-color<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>color<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CopyButton</span></span> <span class="token attr-name">text</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>themeCssStr<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">loading</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>loading<span class="token punctuation">}</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo-theme-copy-btn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>复制所有变量<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">CopyButton</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span> <span class="token attr-name">rowKey</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cssVariable<span class="token punctuation">"</span></span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo-theme-colors<span class="token punctuation">"</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">datasets</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>cssVarData<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token maybe-class-name">ReactDOM</span><span class="token punctuation">.</span><span class="token method function property-access">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ThemeSdkComponent</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},u.a.createElement(g)),u.a.createElement(y,{html:'<h3 class="anchor-heading"><a href="#chong-xin-gou-jian-scss-ding-zhi-zhu-ti-se">¶</a><a href="javascript:void(0)" id="chong-xin-gou-jian-scss-ding-zhi-zhu-ti-se" class="anchor-point"></a>重新构建 SCSS 定制主题色</h3>\n<p>Zent 的样式使用 <a href="https://sass-lang.com">scss</a> 开发，我们提供了一个预定义的扩展文件来支持主题定制，通过在 Zent 仓库中修改配置，生成一份定制的 css 样式。</p>\n<p>这种方式对业务项目是非侵入式的，样式的定制和业务项目完全独立；但也有一个问题，就是每次更新 Zent 组件库都要重新生成一份定制主题。</p>\n<h4 class="anchor-heading"><a href="#ding-zhi-fang-fa">¶</a><a href="javascript:void(0)" id="ding-zhi-fang-fa" class="anchor-point"></a>定制方法</h4>\n<ol>\n<li>克隆 Zent <a href="https://github.com/youzan/zent">源码</a>并安装依赖</li>\n<li>在 <code>packages/zent/assets/theme</code> 目录下找到一个名为 <a href="https://github.com/youzan/zent/blob/master/packages/zent/assets/theme/_override.scss"><code>_override.scss</code></a> 的文件，这个文件是预留用来覆盖默认主题变量的，所有主题变量可以在同目录的 <a href="https://github.com/youzan/zent/blob/master/packages/zent/assets/theme/_raw-vars.scss"><code>_default.scss</code></a> 文件内找到</li>\n<li>在 <code>packages/zent</code> 目录下面执行 <code>yarn theme</code></li>\n<li>定制的主题样式文件会生成在 <code>packages/zent/css</code> 目录下</li>\n</ol>\n<h4 class="anchor-heading"><a href="#dong-tai-gai-bian-zhu-ti-se">¶</a><a href="javascript:void(0)" id="dong-tai-gai-bian-zhu-ti-se" class="anchor-point"></a>动态改变主题色</h4>\n<p>可以调用<code>ThemeSdk API</code>，传入指定的基础主题色，来更新主题。主题色建议选择饱和度和亮度更高的颜色。比如： S > 85, B > 80。示例如下：</p>'}),u.a.createElement(v,{title:"动态更新主题色",id:"Demo3",src:'<span class="token keyword module">import</span> <span class="token imports"><span class="token punctuation">{</span> <span class="token maybe-class-name">ColorPicker</span><span class="token punctuation">,</span> <span class="token maybe-class-name">ThemeSdk</span><span class="token punctuation">,</span> <span class="token maybe-class-name">Notify</span><span class="token punctuation">,</span> <span class="token maybe-class-name">ThemeScene</span> <span class="token punctuation">}</span></span> <span class="token keyword module">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n<span class="token keyword module">import</span> <span class="token imports"><span class="token punctuation">{</span> useState <span class="token punctuation">}</span></span> <span class="token keyword module">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> generateTheme<span class="token punctuation">,</span> applyTheme <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token maybe-class-name">ThemeSdk</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> colors <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token string">\'#ed6a18\'</span><span class="token punctuation">,</span>\n  <span class="token string">\'#ed9f18\'</span><span class="token punctuation">,</span>\n  <span class="token string">\'#edd418\'</span><span class="token punctuation">,</span>\n  <span class="token string">\'#bad415\'</span><span class="token punctuation">,</span>\n  <span class="token string">\'#5bd415\'</span><span class="token punctuation">,</span>\n  <span class="token string">\'#15d48e\'</span><span class="token punctuation">,</span>\n  <span class="token string">\'#15bad4\'</span><span class="token punctuation">,</span>\n  <span class="token string">\'#155bd4\'</span><span class="token punctuation">,</span>\n  <span class="token string">\'#412ad4\'</span><span class="token punctuation">,</span>\n  <span class="token string">\'#8e15d4\'</span><span class="token punctuation">,</span>\n  <span class="token string">\'#d415ba\'</span><span class="token punctuation">,</span>\n  <span class="token string">\'#d42f15\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> colorScene <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token maybe-class-name">ThemeScene</span><span class="token punctuation">.</span><span class="token property-access"><span class="token maybe-class-name">DefaultHoverBackgroundColor</span></span><span class="token punctuation">,</span>\n  <span class="token maybe-class-name">ThemeScene</span><span class="token punctuation">.</span><span class="token property-access"><span class="token maybe-class-name">PrimaryHoverBackgroundColor</span></span><span class="token punctuation">,</span>\n  <span class="token maybe-class-name">ThemeScene</span><span class="token punctuation">.</span><span class="token property-access"><span class="token maybe-class-name">PrimaryBackgroundColor</span></span><span class="token punctuation">,</span>\n  <span class="token maybe-class-name">ThemeScene</span><span class="token punctuation">.</span><span class="token property-access"><span class="token maybe-class-name">PrimaryActiveBackgroundColor</span></span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function"><span class="token maybe-class-name">ThemeSdkComponent</span></span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>color<span class="token punctuation">,</span> setColor<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">\'#155bd4\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">onChangeComplete</span> <span class="token operator">=</span> <span class="token parameter">hex</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> theme <span class="token operator">=</span> <span class="token function">generateTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span> colors<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> baseColor<span class="token operator">:</span> hex<span class="token punctuation">,</span> scene<span class="token operator">:</span> colorScene <span class="token punctuation">}</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">applyTheme</span><span class="token punctuation">(</span>theme<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token function">setColor</span><span class="token punctuation">(</span>hex<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token maybe-class-name">Notify</span><span class="token punctuation">.</span><span class="token method function property-access">success</span><span class="token punctuation">(</span><span class="token string">\'主题色已更新\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword control-flow">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ColorPicker</span></span> <span class="token attr-name">color</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>color<span class="token punctuation">}</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>simple<span class="token punctuation">"</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onChangeComplete<span class="token punctuation">}</span></span> <span class="token attr-name">presetColors</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>colors<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo-theme-base-color<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>color<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token maybe-class-name">ReactDOM</span><span class="token punctuation">.</span><span class="token method function property-access">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ThemeSdkComponent</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},u.a.createElement(h)),u.a.createElement(y,{html:'<h3 class="anchor-heading"><a href="#api">¶</a><a href="javascript:void(0)" id="api" class="anchor-point"></a>API</h3>\n<table class="table">\n<thead>\n<tr>\n<th>属性 / 方法</th>\n<th>说明</th>\n<th>类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>defaultTheme</td>\n<td>获取当前主题下的所有css variable和值</td>\n<td>() => ITheme</td>\n</tr>\n<tr>\n<td>generatePalette</td>\n<td>根据基础色获取所有生成的色值</td>\n<td>(baseColor: string) => string[]</td>\n</tr>\n<tr>\n<td>generateTheme</td>\n<td>根据语义场景和基准值获取所有css variable和值</td>\n<td>(config: IThemeConfig) => ITheme</td>\n</tr>\n<tr>\n<td>applyTheme</td>\n<td>应用主题的值</td>\n<td>(theme: ITheme)  => void</td>\n</tr>\n</tbody>\n</table>'}))}}}}]);