(window.webpackJsonp=window.webpackJsonp||[]).push([[90],{1060:function(n,a,s){"use strict";s.r(a),s.d(a,"default",function(){return P});var t=s(10),p=s.n(t),e=s(4),o=s.n(e),c=s(8),u=s.n(c),l=s(5),i=s.n(l),k=s(6),r=s.n(k),g=s(7),d=s.n(g),m=s(2),h=s.n(m),f=s(3),v=s.n(f),y=s(0),z=s.n(y),w=s(148),b=s(149),C=function(){var n=function(n){function a(){var n,s;o()(this,a);for(var t=arguments.length,p=new Array(t),e=0;e<t;e++)p[e]=arguments[e];return s=i()(this,(n=r()(a)).call.apply(n,[this].concat(p))),v()(h()(h()(s)),"state",{current:1,totalItem:1e3}),v()(h()(h()(s)),"onChange",function(n){s.setState({current:n})}),s}return d()(a,n),u()(a,[{key:"render",value:function(){return z.a.createElement(b.H,{current:this.state.current,totalItem:this.state.totalItem,onChange:this.onChange,maxPageToShow:12})}}]),a}(y.Component);return z.a.createElement(n,null)},S=function(){var n=function(n){function a(){var n,s;o()(this,a);for(var t=arguments.length,p=new Array(t),e=0;e<t;e++)p[e]=arguments[e];return s=i()(this,(n=r()(a)).call.apply(n,[this].concat(p))),v()(h()(h()(s)),"state",{current:1,totalItem:1e3,pageSize:30}),v()(h()(h()(s)),"onChange",function(n){s.setState({current:n})}),v()(h()(h()(s)),"onPageSizeChange",function(n){s.setState({pageSize:n}),console.log(n)}),s}return d()(a,n),u()(a,[{key:"render",value:function(){return z.a.createElement(b.H,{current:this.state.current,totalItem:this.state.totalItem,onChange:this.onChange,pageSize:[20,{value:30,isCurrent:!0}],onPageSizeChange:this.onPageSizeChange})}}]),a}(y.Component);return z.a.createElement(n,null)},x=function(){var n=function(n){function a(){var n,s;o()(this,a);for(var t=arguments.length,p=new Array(t),e=0;e<t;e++)p[e]=arguments[e];return s=i()(this,(n=r()(a)).call.apply(n,[this].concat(p))),v()(h()(h()(s)),"state",{current:1321,totalItem:1e13,pageSize:10}),v()(h()(h()(s)),"onChange",function(n){s.setState({current:n})}),s}return d()(a,n),u()(a,[{key:"render",value:function(){return z.a.createElement(b.H,{current:this.state.current,totalItem:this.state.totalItem,pageSize:this.state.pageSize,onChange:this.onChange})}}]),a}(y.Component);return z.a.createElement(n,null)},N=function(){var n=function(n){function a(){var n,s;o()(this,a);for(var t=arguments.length,p=new Array(t),e=0;e<t;e++)p[e]=arguments[e];return s=i()(this,(n=r()(a)).call.apply(n,[this].concat(p))),v()(h()(h()(s)),"state",{current:1,pageSize:10,totalItem:1e3,max:100}),v()(h()(h()(s)),"onChange",function(n){s.setState({current:n})}),v()(h()(h()(s)),"onTotalChange",function(n){var a,t=n.target.value.trim();a=/^\d+$/.test(t)?+t:0,s.setState({totalItem:a})}),v()(h()(h()(s)),"onPageSizeChange",function(n){var a,t=n.target.value.trim();a=/^\d+$/.test(t)?+t:0,s.setState({pageSize:a})}),v()(h()(h()(s)),"onCurrentChange",function(n){var a,t=n.target.value.trim();a=/^\d+$/.test(t)?+t:0,s.setState({current:a})}),v()(h()(h()(s)),"onMaxChange",function(n){var a,t=n.target.value.trim();a=/^\d+$/.test(t)?+t:0,s.setState({max:a})}),s}return d()(a,n),u()(a,[{key:"render",value:function(){return z.a.createElement("div",null,z.a.createElement("form",{className:"zent-form zent-form--horizontal"},z.a.createElement("div",{className:"zent-form__control-group zent-pager-control-group"},z.a.createElement("label",{className:"zent-form__control-label"},"totalItem: "),z.a.createElement(b.z,{className:"zent-pager-input",type:"text",placeholder:"数字",value:this.state.totalItem,onChange:this.onTotalChange})),z.a.createElement("div",{className:"zent-form__control-group zent-pager-control-group"},z.a.createElement("label",{className:"zent-form__control-label"},"pageSize:"),z.a.createElement(b.z,{className:"zent-pager-input",type:"text",placeholder:"数字",value:this.state.pageSize,onChange:this.onPageSizeChange})),z.a.createElement("div",{className:"zent-form__control-group zent-pager-control-group"},z.a.createElement("label",{className:"zent-form__control-label"},"current:"),z.a.createElement(b.z,{className:"zent-pager-input",type:"text",placeholder:"数字",value:this.state.current,onChange:this.onCurrentChange})),z.a.createElement("div",{className:"zent-form__control-group zent-pager-control-group"},z.a.createElement("label",{className:"zent-form__control-label"},"maxPageToShow:"),z.a.createElement(b.z,{className:"zent-pager-input",type:"text",placeholder:"数字",value:this.state.max,onChange:this.onMaxChange}))),z.a.createElement(b.H,{current:this.state.current,totalItem:this.state.totalItem,pageSize:this.state.pageSize,maxPageToShow:this.state.max,onChange:this.onChange}))}}]),a}(y.Component);return z.a.createElement(n,null)};function _(n){return z.a.createElement(n.tag,p()({},n.attributes,{dangerouslySetInnerHTML:{__html:n.html}}))}function E(n){return z.a.createElement(_,{tag:"section",html:n.html,attributes:{className:"zandoc-react-markdown"}})}function I(n){return z.a.createElement(_,{tag:"style",html:n.style})}var j=function(n){function a(){var n,s;o()(this,a);for(var t=arguments.length,p=new Array(t),e=0;e<t;e++)p[e]=arguments[e];return s=i()(this,(n=r()(a)).call.apply(n,[this].concat(p))),v()(h()(h()(s)),"state",{showCode:!1}),v()(h()(h()(s)),"toggle",function(){s.setState({showCode:!s.state.showCode})}),s}return d()(a,n),u()(a,[{key:"render",value:function(){var n=this.state.showCode,a=this.props,s=a.title,t=a.src,p=a.children;return z.a.createElement("div",{className:"zandoc-react-demo"},z.a.createElement("div",{className:"zandoc-react-demo__preview"},p),z.a.createElement("div",{className:"zandoc-react-demo__bottom",onClick:this.toggle},z.a.createElement("div",{className:"zandoc-react-demo__title"},z.a.createElement("p",null,s||"")),z.a.createElement("i",{className:"zenticon zenticon-caret-up zandoc-react-demo__toggle ".concat(n?"zandoc-react-demo__toggle-on":"zandoc-react-demo__toggle-off")})),n&&z.a.createElement("pre",{className:"zandoc-react-demo__code"},z.a.createElement(_,{tag:"code",html:t,attributes:{className:"language-jsx"}})))}}]),a}(y.Component),P=function(n){function a(){return o()(this,a),i()(this,r()(a).apply(this,arguments))}return d()(a,n),u()(a,[{key:"componentDidMount",value:function(){var n=location.hash;if(n){var a=document.querySelector('a[href="'.concat(n,'"]'));a&&Object(w.a)(document.documentElement,0,function n(a,s){for(;a;)return a.offsetTop&&"static"!==getComputedStyle(a).position&&(s+=a.offsetTop),n(a.parentNode,s);return s}(a,-9))}}},{key:"render",value:function(){return z.a.createElement("div",{className:"zandoc-react-container",key:null},z.a.createElement(I,{style:".zent-pager-control-group {\n\tdisplay: -ms-flexbox;\n\tdisplay: flex;\n}\n\t\n\t.zent-pager-control-group .zent-pager-input {\n\t\tmargin-left: 10px;\n\t\twidth: 200px;\n\t}\n\n.zent-pager-control-group {\n\tdisplay: -ms-flexbox;\n\tdisplay: flex;\n}\n\n.zent-pager-control-group .zent-pager-input {\n\t\tmargin-left: 10px;\n\t\twidth: 200px;\n\t}"}),z.a.createElement(E,{html:'<h2 class="anchor-heading"><a href="#pagination">¶</a><a href="javascript:void(0)" id="pagination" class="anchor-point"></a>Pagination</h2>\n<p>Pagination component</p>\n<h3 class="anchor-heading"><a href="#guide">¶</a><a href="javascript:void(0)" id="guide" class="anchor-point"></a>Guide</h3>\n<ul>\n<li>The total number of items to display need to be known.</li>\n</ul>\n<h3 class="anchor-heading"><a href="#demos">¶</a><a href="javascript:void(0)" id="demos" class="anchor-point"></a>Demos</h3>'}),z.a.createElement(j,{title:"Basic Usage",id:"Demobasic",src:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Pagination <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Basic</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    current<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    totalItem<span class="token punctuation">:</span> <span class="token number">1000</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Pagination</span>\n        <span class="token attr-name">current</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>current<span class="token punctuation">}</span></span>\n        <span class="token attr-name">totalItem</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>totalItem<span class="token punctuation">}</span></span>\n        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>onChange<span class="token punctuation">}</span></span>\n        <span class="token attr-name">maxPageToShow</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token number">12</span><span class="token punctuation">}</span></span>\n      <span class="token punctuation">/></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function-variable function">onChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span>page<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      current<span class="token punctuation">:</span> page\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Basic</span> <span class="token punctuation">/></span></span>\n  <span class="token punctuation">,</span> mountNode\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'},z.a.createElement(C)),z.a.createElement(j,{title:"Dynamic PageSize",id:"Demodynamicpagesize",src:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Pagination <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Dynamic</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    current<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    totalItem<span class="token punctuation">:</span> <span class="token number">1000</span><span class="token punctuation">,</span>\n    pageSize<span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token operator">&lt;</span>Pagination\n        current<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>current<span class="token punctuation">}</span>\n        totalItem<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>totalItem<span class="token punctuation">}</span>\n        onChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>onChange<span class="token punctuation">}</span>\n        pageSize<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> value<span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">,</span> isCurrent<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span>\n        onPageSizeChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>onPageSizeChange<span class="token punctuation">}</span>\n      <span class="token operator">/</span><span class="token operator">></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function-variable function">onChange</span> <span class="token operator">=</span> page <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      current<span class="token punctuation">:</span> page<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">onPageSizeChange</span> <span class="token operator">=</span> pageSize <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      pageSize<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pageSize<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Dynamic</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},z.a.createElement(S)),z.a.createElement(j,{title:"Great amount of pages",id:"Demomasspages",src:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Pagination <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">HugeTotal</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    current<span class="token punctuation">:</span> <span class="token number">1321</span><span class="token punctuation">,</span>\n    totalItem<span class="token punctuation">:</span> <span class="token number">10000000000000</span><span class="token punctuation">,</span>\n    pageSize<span class="token punctuation">:</span> <span class="token number">10</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Pagination</span>\n        <span class="token attr-name">current</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>current<span class="token punctuation">}</span></span>\n        <span class="token attr-name">totalItem</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>totalItem<span class="token punctuation">}</span></span>\n        <span class="token attr-name">pageSize</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>pageSize<span class="token punctuation">}</span></span>\n        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>onChange<span class="token punctuation">}</span></span>\n      <span class="token punctuation">/></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function-variable function">onChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span>page<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      current<span class="token punctuation">:</span> page\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>HugeTotal</span> <span class="token punctuation">/></span></span>\n  <span class="token punctuation">,</span> mountNode\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'},z.a.createElement(x)),z.a.createElement(j,{title:"Dynamically customize props of the component",id:"Democustomprops",src:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Pagination<span class="token punctuation">,</span> Input <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'zent\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Custom</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    current<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    pageSize<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n    totalItem<span class="token punctuation">:</span> <span class="token number">1000</span><span class="token punctuation">,</span>\n    max<span class="token punctuation">:</span> <span class="token number">100</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>zent-form zent-form--horizontal<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>zent-form__control-group zent-pager-control-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>zent-form__control-label<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>totalItem<span class="token punctuation">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Input</span>\n              <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>zent-pager-input<span class="token punctuation">"</span></span>\n              <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>\n              <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>数字<span class="token punctuation">"</span></span>\n              <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>totalItem<span class="token punctuation">}</span></span>\n              <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>onTotalChange<span class="token punctuation">}</span></span>\n            <span class="token punctuation">/></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>zent-form__control-group zent-pager-control-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>zent-form__control-label<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>pageSize<span class="token punctuation">:</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Input</span>\n              <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>zent-pager-input<span class="token punctuation">"</span></span>\n              <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>\n              <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>数字<span class="token punctuation">"</span></span>\n              <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>pageSize<span class="token punctuation">}</span></span>\n              <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>onPageSizeChange<span class="token punctuation">}</span></span>\n            <span class="token punctuation">/></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>zent-form__control-group zent-pager-control-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>zent-form__control-label<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>current<span class="token punctuation">:</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Input</span>\n              <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>zent-pager-input<span class="token punctuation">"</span></span>\n              <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>\n              <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>数字<span class="token punctuation">"</span></span>\n              <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>current<span class="token punctuation">}</span></span>\n              <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>onCurrentChange<span class="token punctuation">}</span></span>\n            <span class="token punctuation">/></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>zent-form__control-group zent-pager-control-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>zent-form__control-label<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>maxPageToShow<span class="token punctuation">:</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Input</span>\n              <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>zent-pager-input<span class="token punctuation">"</span></span>\n              <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>\n              <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>数字<span class="token punctuation">"</span></span>\n              <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>max<span class="token punctuation">}</span></span>\n              <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>onMaxChange<span class="token punctuation">}</span></span>\n            <span class="token punctuation">/></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Pagination</span>\n          <span class="token attr-name">current</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>current<span class="token punctuation">}</span></span>\n          <span class="token attr-name">totalItem</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>totalItem<span class="token punctuation">}</span></span>\n          <span class="token attr-name">pageSize</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>pageSize<span class="token punctuation">}</span></span>\n          <span class="token attr-name">maxPageToShow</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>max<span class="token punctuation">}</span></span>\n          <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>onChange<span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function-variable function">onChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span>page<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      current<span class="token punctuation">:</span> page\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">onTotalChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> str <span class="token operator">=</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> value<span class="token punctuation">;</span>\n\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex">/^\\d+$/</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      value <span class="token operator">=</span> <span class="token operator">+</span>str<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n      value <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      totalItem<span class="token punctuation">:</span> value\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">onPageSizeChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> str <span class="token operator">=</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> value<span class="token punctuation">;</span>\n\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex">/^\\d+$/</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      value <span class="token operator">=</span> <span class="token operator">+</span>str<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n      value <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      pageSize<span class="token punctuation">:</span> value\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">onCurrentChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> str <span class="token operator">=</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> value<span class="token punctuation">;</span>\n\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex">/^\\d+$/</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      value <span class="token operator">=</span> <span class="token operator">+</span>str<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n      value <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      current<span class="token punctuation">:</span> value\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function-variable function">onMaxChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> str <span class="token operator">=</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> value<span class="token punctuation">;</span>\n\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex">/^\\d+$/</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      value <span class="token operator">=</span> <span class="token operator">+</span>str<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n      value <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      max<span class="token punctuation">:</span> value\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Custom</span> <span class="token punctuation">/></span></span>\n  <span class="token punctuation">,</span> mountNode\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'},z.a.createElement(N)),z.a.createElement(E,{html:'<h3 class="anchor-heading"><a href="#api">¶</a><a href="javascript:void(0)" id="api" class="anchor-point"></a>API</h3>\n<table class="table">\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n<th>Required</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>current</td>\n<td>Current page</td>\n<td><code>number</code></td>\n<td><code>1</code></td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>totalItem</td>\n<td>Number of total items</td>\n<td><code>number</code></td>\n<td></td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>pageSize</td>\n<td>Number of items to be displayed per page</td>\n<td><code>number</code>\n \n|\n \n<code>array</code></td>\n<td><code>10</code></td>\n<td>No</td>\n</tr>\n<tr>\n<td>onPageSizeChange</td>\n<td>Callback when pageSize chagnes</td>\n<td><code>func</code></td>\n<td></td>\n<td>No</td>\n</tr>\n<tr>\n<td>maxPageToShow</td>\n<td>Max number of pages to be displayed</td>\n<td><code>number</code></td>\n<td></td>\n<td>No</td>\n</tr>\n<tr>\n<td>onChange</td>\n<td>Callback for page changing</td>\n<td><code>func</code></td>\n<td></td>\n<td>No</td>\n</tr>\n<tr>\n<td>className</td>\n<td>Extra custom class name</td>\n<td><code>string</code></td>\n<td><code>\'\'</code></td>\n<td>No</td>\n</tr>\n<tr>\n<td>prefix</td>\n<td>Custom prefix</td>\n<td><code>string</code></td>\n<td><code>\'zent\'</code></td>\n<td>No</td>\n</tr>\n</tbody>\n</table>\n<h4 class="anchor-heading"><a href="#about-pagesize">¶</a><a href="javascript:void(0)" id="about-pagesize" class="anchor-point"></a>About <code>pageSize</code></h4>\n<p>pageSize property supports 3 types of structure:</p>\n<ul>\n<li>\n<p>number: <code>30</code></p>\n</li>\n<li>\n<p>arrayOf(number): <code>[10,20,30]</code></p>\n</li>\n</ul>\n<p>The initial value is 10.</p>\n<ul>\n<li><code>[10, 20, { value: 30, isCurrent: true }]</code></li>\n</ul>\n<p>The initial value is 30.</p>\n<blockquote>\n<p>⚠️ Due to historical reasons, <code>onPageSizeChange</code> is called whenever page size changes when <code>pageSize</code> is an array. <code>pageSize</code> acts as an uncontrolled initial value and you need to store current page size separately in this case. Selected page size won\'t change if <code>onPageSizeChange</code> returns <code>false</code>.</p>\n</blockquote>\n<h3 class="anchor-heading"><a href="#component-mechanism">¶</a><a href="javascript:void(0)" id="component-mechanism" class="anchor-point"></a>Component Mechanism</h3>\n<ul>\n<li>The component is composed of core-pagination and zent-pagination.</li>\n</ul>\n<p>The former is the core pagination component. The later simulates the interaction of www, based on the former.</p>\n<ul>\n<li>There\'s a built-in parser to parse input to <code>renderData</code>.</li>\n</ul>\n<h3 class="anchor-heading"><a href="#input-output-of-the-parser">¶</a><a href="javascript:void(0)" id="input-output-of-the-parser" class="anchor-point"></a>Input/Output of the parser</h3>\n<h4 class="anchor-heading"><a href="#input">¶</a><a href="javascript:void(0)" id="input" class="anchor-point"></a>Input</h4>\n<pre><code class="language-text"><span class="token punctuation">{</span> total<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">,</span> current<span class="token punctuation">:</span> <span class="token number">4</span> <span class="token punctuation">}</span></code></pre>\n<h4 class="anchor-heading"><a href="#output">¶</a><a href="javascript:void(0)" id="output" class="anchor-point"></a>Output</h4>\n<pre><code class="language-javascript"><span class="token punctuation">[</span><span class="token punctuation">{</span>\n  <span class="token string">\'content\'</span><span class="token punctuation">:</span> <span class="token string">\'上一页\'</span><span class="token punctuation">,</span>\n  <span class="token string">\'target\'</span><span class="token punctuation">:</span> <span class="token number">3</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  <span class="token string">\'content\'</span><span class="token punctuation">:</span> <span class="token string">\'1\'</span><span class="token punctuation">,</span>\n  <span class="token string">\'target\'</span><span class="token punctuation">:</span> <span class="token number">1</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  <span class="token string">\'content\'</span><span class="token punctuation">:</span> <span class="token string">\'...\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  <span class="token string">\'content\'</span><span class="token punctuation">:</span> <span class="token string">\'3\'</span><span class="token punctuation">,</span>\n  <span class="token string">\'target\'</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  <span class="token string">\'content\'</span><span class="token punctuation">:</span> <span class="token string">\'4\'</span><span class="token punctuation">,</span>\n  <span class="token string">\'target\'</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span>\n  <span class="token string">\'current\'</span><span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  <span class="token string">\'content\'</span><span class="token punctuation">:</span> <span class="token string">\'5\'</span><span class="token punctuation">,</span>\n  <span class="token string">\'target\'</span><span class="token punctuation">:</span> <span class="token number">5</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  <span class="token string">\'content\'</span><span class="token punctuation">:</span> <span class="token string">\'...\'</span><span class="token punctuation">,</span>\n  <span class="token string">\'target\'</span><span class="token punctuation">:</span> <span class="token number">6</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  <span class="token string">\'content\'</span><span class="token punctuation">:</span> <span class="token string">\'20\'</span>\n  <span class="token string">\'target\'</span><span class="token punctuation">:</span> <span class="token number">20</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  <span class="token string">\'content\'</span><span class="token punctuation">:</span> <span class="token string">\'下一页\'</span>\n  <span class="token string">\'target\'</span><span class="token punctuation">:</span> <span class="token number">5</span>\n<span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span></code></pre>'}))}}]),a}(y.Component)}}]);